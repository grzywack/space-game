<?xml version='1.0'?>
<signatures version='1.0'>
<struct type='{CCPVRMipmap=&quot;address&quot;*&quot;len&quot;I}' name='CCPVRMipmap'>
<field type='*' declared_type='unsigned char*' name='address'/>
<field type='I' declared_type='unsigned int' name='len'/>
</struct>
<struct type='{CCZHeader=&quot;sig&quot;[4C]&quot;compression_type&quot;S&quot;version&quot;S&quot;reserved&quot;I&quot;len&quot;I}' name='CCZHeader'>
<field type='[4C]' declared_type='uint8_t*' name='sig'/>
<field type='S' declared_type='uint16_t' name='compression_type'/>
<field type='S' declared_type='uint16_t' name='version'/>
<field type='I' declared_type='uint32_t' name='reserved'/>
<field type='I' declared_type='uint32_t' name='len'/>
</struct>
<struct type='{UT_hash_bucket=&quot;hh_head&quot;^{UT_hash_handle}&quot;count&quot;I&quot;expand_mult&quot;I}' name='UT_hash_bucket'>
<field type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' declared_type='struct UT_hash_handle*' name='hh_head'/>
<field type='I' declared_type='unsigned int' name='count'/>
<field type='I' declared_type='unsigned int' name='expand_mult'/>
</struct>
<struct type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}' name='UT_hash_handle'>
<field type='^{UT_hash_table=^{UT_hash_bucket}III^{UT_hash_handle}iIIIII}' declared_type='struct UT_hash_table*' name='tbl'/>
<field type='^v' declared_type='void*' name='prev'/>
<field type='^v' declared_type='void*' name='next'/>
<field type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' declared_type='struct UT_hash_handle*' name='hh_prev'/>
<field type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' declared_type='struct UT_hash_handle*' name='hh_next'/>
<field type='^v' declared_type='void*' name='key'/>
<field type='I' declared_type='unsigned int' name='keylen'/>
<field type='I' declared_type='unsigned int' name='hashv'/>
</struct>
<struct type='{UT_hash_table=&quot;buckets&quot;^{UT_hash_bucket}&quot;num_buckets&quot;I&quot;log2_num_buckets&quot;I&quot;num_items&quot;I&quot;tail&quot;^{UT_hash_handle}&quot;hho&quot;i&quot;ideal_chain_maxlen&quot;I&quot;nonideal_items&quot;I&quot;ineff_expands&quot;I&quot;noexpand&quot;I&quot;signature&quot;I}' name='UT_hash_table'>
<field type='^{UT_hash_bucket=^{UT_hash_handle}II}' declared_type='UT_hash_bucket*' name='buckets'/>
<field type='I' declared_type='unsigned int' name='num_buckets'/>
<field type='I' declared_type='unsigned int' name='log2_num_buckets'/>
<field type='I' declared_type='unsigned int' name='num_items'/>
<field type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' declared_type='struct UT_hash_handle*' name='tail'/>
<field type='i' declared_type='ptrdiff_t' name='hho'/>
<field type='I' declared_type='unsigned int' name='ideal_chain_maxlen'/>
<field type='I' declared_type='unsigned int' name='nonideal_items'/>
<field type='I' declared_type='unsigned int' name='ineff_expands'/>
<field type='I' declared_type='unsigned int' name='noexpand'/>
<field type='I' declared_type='uint32_t' name='signature'/>
</struct>
<struct type='{_bufferInfo=&quot;bufferId&quot;I&quot;bufferState&quot;i&quot;bufferData&quot;^v&quot;format&quot;i&quot;sizeInBytes&quot;i&quot;frequencyInHertz&quot;i}' name='bufferInfo'>
<field type='I' declared_type='ALuint' name='bufferId'/>
<field type='i' declared_type='int' name='bufferState'/>
<field type='^v' declared_type='void*' name='bufferData'/>
<field type='i' declared_type='ALenum' name='format'/>
<field type='i' declared_type='ALsizei' name='sizeInBytes'/>
<field type='i' declared_type='ALsizei' name='frequencyInHertz'/>
</struct>
<struct type='{ccArray=&quot;num&quot;I&quot;max&quot;I&quot;arr&quot;^@}' name='ccArray'>
<field type='I' declared_type='NSUInteger' name='num'/>
<field type='I' declared_type='NSUInteger' name='max'/>
<field type='^@' declared_type='CCARRAY_ID*' name='arr'/>
</struct>
<struct type='{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}' name='ccBMFontDef'>
<field type='S' declared_type='unichar' name='charID'/>
<field type='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}' declared_type='CGRect' name='rect'/>
<field type='s' declared_type='short' name='xOffset'/>
<field type='s' declared_type='short' name='yOffset'/>
<field type='s' declared_type='short' name='xAdvance'/>
</struct>
<struct type='{_BMFontPadding=&quot;left&quot;i&quot;top&quot;i&quot;right&quot;i&quot;bottom&quot;i}' name='ccBMFontPadding'>
<field type='i' declared_type='int' name='left'/>
<field type='i' declared_type='int' name='top'/>
<field type='i' declared_type='int' name='right'/>
<field type='i' declared_type='int' name='bottom'/>
</struct>
<struct type='{_ccBezierConfig=&quot;endPosition&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_1&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_2&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}}' name='ccBezierConfig'>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint' name='endPosition'/>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint' name='controlPoint_1'/>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint' name='controlPoint_2'/>
</struct>
<struct type='{_ccBlendFunc=&quot;src&quot;I&quot;dst&quot;I}' name='ccBlendFunc'>
<field type='I' declared_type='GLenum' name='src'/>
<field type='I' declared_type='GLenum' name='dst'/>
</struct>
<struct type='{ccArray=&quot;num&quot;I&quot;max&quot;I&quot;arr&quot;^@}' name='ccCArray'>
<field type='I' declared_type='NSUInteger' name='num'/>
<field type='I' declared_type='NSUInteger' name='max'/>
<field type='^@' declared_type='CCARRAY_ID*' name='arr'/>
</struct>
<struct type='{_ccColor3B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C}' name='ccColor3B'>
<field type='C' declared_type='GLubyte' name='r'/>
<field type='C' declared_type='GLubyte' name='g'/>
<field type='C' declared_type='GLubyte' name='b'/>
</struct>
<struct type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' name='ccColor4B'>
<field type='C' declared_type='GLubyte' name='r'/>
<field type='C' declared_type='GLubyte' name='g'/>
<field type='C' declared_type='GLubyte' name='b'/>
<field type='C' declared_type='GLubyte' name='a'/>
</struct>
<struct type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='ccColor4F'>
<field type='f' declared_type='GLfloat' name='r'/>
<field type='f' declared_type='GLfloat' name='g'/>
<field type='f' declared_type='GLfloat' name='b'/>
<field type='f' declared_type='GLfloat' name='a'/>
</struct>
<struct type='{_ccGridSize=&quot;x&quot;i&quot;y&quot;i}' name='ccGridSize'>
<field type='i' declared_type='NSInteger' name='x'/>
<field type='i' declared_type='NSInteger' name='y'/>
</struct>
<struct type='{_ccPointSprite=&quot;pos&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;size&quot;f}' name='ccPointSprite'>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F' name='pos'/>
<field type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' declared_type='ccColor4B' name='color'/>
<field type='f' declared_type='GLfloat' name='size'/>
</struct>
<struct type='{_ccQuad2=&quot;tl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;tr&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;bl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;br&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}}' name='ccQuad2'>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F' name='tl'/>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F' name='tr'/>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F' name='bl'/>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F' name='br'/>
</struct>
<struct type='{_ccQuad3=&quot;bl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;br&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tr&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}}' name='ccQuad3'>
<field type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F' name='bl'/>
<field type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F' name='br'/>
<field type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F' name='tl'/>
<field type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F' name='tr'/>
</struct>
<struct type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' name='ccTex2F'>
<field type='f' declared_type='GLfloat' name='u'/>
<field type='f' declared_type='GLfloat' name='v'/>
</struct>
<struct type='{_ccTexParams=&quot;minFilter&quot;I&quot;magFilter&quot;I&quot;wrapS&quot;I&quot;wrapT&quot;I}' name='ccTexParams'>
<field type='I' declared_type='GLuint' name='minFilter'/>
<field type='I' declared_type='GLuint' name='magFilter'/>
<field type='I' declared_type='GLuint' name='wrapS'/>
<field type='I' declared_type='GLuint' name='wrapT'/>
</struct>
<struct type='{ccTouchHandlerHelperData=&quot;touchesSel&quot;:&quot;touchSel&quot;:&quot;type&quot;i}' name='ccTouchHandlerHelperData'>
<field type=':' declared_type='SEL' name='touchesSel'/>
<field type=':' declared_type='SEL' name='touchSel'/>
<field type='i' declared_type='ccTouchSelectorFlag' name='type'/>
</struct>
<struct type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='ccV2F_C4B_T2F'>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F' name='vertices'/>
<field type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' declared_type='ccColor4B' name='colors'/>
<field type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' declared_type='ccTex2F' name='texCoords'/>
</struct>
<struct type='{_ccV2F_C4B_T2F_Quad=&quot;bl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}' name='ccV2F_C4B_T2F_Quad'>
<field type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F' name='bl'/>
<field type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F' name='br'/>
<field type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F' name='tl'/>
<field type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F' name='tr'/>
</struct>
<struct type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='ccV2F_C4F_T2F'>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F' name='vertices'/>
<field type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F' name='colors'/>
<field type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' declared_type='ccTex2F' name='texCoords'/>
</struct>
<struct type='{_ccV2F_C4F_T2F_Quad=&quot;bl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}' name='ccV2F_C4F_T2F_Quad'>
<field type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4F_T2F' name='bl'/>
<field type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4F_T2F' name='br'/>
<field type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4F_T2F' name='tl'/>
<field type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4F_T2F' name='tr'/>
</struct>
<struct type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='ccV3F_C4B_T2F'>
<field type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F' name='vertices'/>
<field type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' declared_type='ccColor4B' name='colors'/>
<field type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' declared_type='ccTex2F' name='texCoords'/>
</struct>
<struct type='{_ccV3F_C4B_T2F_Quad=&quot;tl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}' name='ccV3F_C4B_T2F_Quad'>
<field type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4B_T2F' name='tl'/>
<field type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4B_T2F' name='bl'/>
<field type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4B_T2F' name='tr'/>
<field type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4B_T2F' name='br'/>
</struct>
<struct type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='ccV3F_C4F_T2F'>
<field type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F' name='vertices'/>
<field type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F' name='colors'/>
<field type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' declared_type='ccTex2F' name='texCoords'/>
</struct>
<struct type='{_ccV3F_C4F_T2F_Quad=&quot;tl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}' name='ccV3F_C4F_T2F_Quad'>
<field type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4F_T2F' name='tl'/>
<field type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4F_T2F' name='bl'/>
<field type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4F_T2F' name='tr'/>
<field type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4F_T2F' name='br'/>
</struct>
<struct type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='ccVertex2F'>
<field type='f' declared_type='GLfloat' name='x'/>
<field type='f' declared_type='GLfloat' name='y'/>
</struct>
<struct type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='ccVertex3F'>
<field type='f' declared_type='GLfloat' name='x'/>
<field type='f' declared_type='GLfloat' name='y'/>
<field type='f' declared_type='GLfloat' name='z'/>
</struct>
<struct type='{kmAABB=&quot;min&quot;{kmVec3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;max&quot;{kmVec3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}}' name='kmAABB'>
<field type='{kmVec3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='kmVec3' name='min'/>
<field type='{kmVec3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='kmVec3' name='max'/>
</struct>
<struct type='{kmMat3=&quot;mat&quot;[9f]}' name='kmMat3'>
<field type='[9f]' declared_type='float*' name='mat'/>
</struct>
<struct type='{kmMat4=&quot;mat&quot;[16f]}' name='kmMat4'>
<field type='[16f]' declared_type='float*' name='mat'/>
</struct>
<struct type='{kmPlane=&quot;a&quot;f&quot;b&quot;f&quot;c&quot;f&quot;d&quot;f}' name='kmPlane'>
<field type='f' declared_type='float' name='a'/>
<field type='f' declared_type='float' name='b'/>
<field type='f' declared_type='float' name='c'/>
<field type='f' declared_type='float' name='d'/>
</struct>
<struct type='{kmQuaternion=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f&quot;w&quot;f}' name='kmQuaternion'>
<field type='f' declared_type='float' name='x'/>
<field type='f' declared_type='float' name='y'/>
<field type='f' declared_type='float' name='z'/>
<field type='f' declared_type='float' name='w'/>
</struct>
<struct type='{kmRay2=&quot;start&quot;{kmVec2=&quot;x&quot;f&quot;y&quot;f}&quot;dir&quot;{kmVec2=&quot;x&quot;f&quot;y&quot;f}}' name='kmRay2'>
<field type='{kmVec2=&quot;x&quot;f&quot;y&quot;f}' declared_type='kmVec2' name='start'/>
<field type='{kmVec2=&quot;x&quot;f&quot;y&quot;f}' declared_type='kmVec2' name='dir'/>
</struct>
<struct type='{kmVec2=&quot;x&quot;f&quot;y&quot;f}' name='kmVec2'>
<field type='f' declared_type='float' name='x'/>
<field type='f' declared_type='float' name='y'/>
</struct>
<struct type='{kmVec3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='kmVec3'>
<field type='f' declared_type='float' name='x'/>
<field type='f' declared_type='float' name='y'/>
<field type='f' declared_type='float' name='z'/>
</struct>
<struct type='{kmVec4=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f&quot;w&quot;f}' name='kmVec4'>
<field type='f' declared_type='float' name='x'/>
<field type='f' declared_type='float' name='y'/>
<field type='f' declared_type='float' name='z'/>
<field type='f' declared_type='float' name='w'/>
</struct>
<struct type='{km_mat4_stack=&quot;capacity&quot;i&quot;item_count&quot;i&quot;top&quot;^{kmMat4}&quot;stack&quot;^{kmMat4}}' name='km_mat4_stack'>
<field type='i' declared_type='int' name='capacity'/>
<field type='i' declared_type='int' name='item_count'/>
<field type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='top'/>
<field type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='stack'/>
</struct>
<struct type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}' name='sCCParticle'>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint' name='pos'/>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint' name='startPos'/>
<field type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F' name='color'/>
<field type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F' name='deltaColor'/>
<field type='f' declared_type='float' name='size'/>
<field type='f' declared_type='float' name='deltaSize'/>
<field type='f' declared_type='float' name='rotation'/>
<field type='f' declared_type='float' name='deltaRotation'/>
<field type='f' declared_type='ccTime' name='timeToLive'/>
<field type='I' declared_type='NSUInteger' name='atlasIndex'/>
<field type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' declared_type='union sCCParticle::' name='mode'/>
</struct>
<struct type='{sImageTGA=&quot;status&quot;i&quot;type&quot;C&quot;pixelDepth&quot;C&quot;width&quot;s&quot;height&quot;s&quot;imageData&quot;*&quot;flipped&quot;i}' name='sImageTGA'>
<field type='i' declared_type='int' name='status'/>
<field type='C' declared_type='unsigned char' name='type'/>
<field type='C' declared_type='unsigned char' name='pixelDepth'/>
<field type='s' declared_type='short' name='width'/>
<field type='s' declared_type='short' name='height'/>
<field type='*' declared_type='unsigned char*' name='imageData'/>
<field type='i' declared_type='int' name='flipped'/>
</struct>
<struct type='{_sourceGroup=&quot;startIndex&quot;i&quot;currentIndex&quot;i&quot;totalSources&quot;i&quot;enabled&quot;B&quot;nonInterruptible&quot;B&quot;sourceStatuses&quot;^i}' name='sourceGroup'>
<field type='i' declared_type='int' name='startIndex'/>
<field type='i' declared_type='int' name='currentIndex'/>
<field type='i' declared_type='int' name='totalSources'/>
<field type='B' declared_type='_Bool' name='enabled'/>
<field type='B' declared_type='_Bool' name='nonInterruptible'/>
<field type='^i' declared_type='int*' name='sourceStatuses'/>
</struct>
<struct type='{_sourceInfo=&quot;usable&quot;B&quot;sourceId&quot;I&quot;attachedBufferId&quot;I}' name='sourceInfo'>
<field type='B' declared_type='_Bool' name='usable'/>
<field type='I' declared_type='ALuint' name='sourceId'/>
<field type='I' declared_type='ALuint' name='attachedBufferId'/>
</struct>
<struct type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}' name='tCCParticle'>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint' name='pos'/>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint' name='startPos'/>
<field type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F' name='color'/>
<field type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F' name='deltaColor'/>
<field type='f' declared_type='float' name='size'/>
<field type='f' declared_type='float' name='deltaSize'/>
<field type='f' declared_type='float' name='rotation'/>
<field type='f' declared_type='float' name='deltaRotation'/>
<field type='f' declared_type='ccTime' name='timeToLive'/>
<field type='I' declared_type='NSUInteger' name='atlasIndex'/>
<field type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' declared_type='union sCCParticle::' name='mode'/>
</struct>
<struct type='{_hashElement=&quot;actions&quot;^{ccArray}&quot;actionIndex&quot;I&quot;currentActionSalvaged&quot;B&quot;paused&quot;B&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}&quot;target&quot;@&quot;currentAction&quot;@&quot;CCAction&quot;}' name='tHashElement'>
<field type='^{ccArray=II^@}' declared_type='struct ccArray*' name='actions'/>
<field type='I' declared_type='NSUInteger' name='actionIndex'/>
<field type='B' declared_type='BOOL' name='currentActionSalvaged'/>
<field type='B' declared_type='BOOL' name='paused'/>
<field type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}' declared_type='UT_hash_handle' name='hh'/>
<field type='@' declared_type='id' name='target'/>
<field type='@&quot;CCAction&quot;' declared_type='CCAction*' name='currentAction'/>
</struct>
<struct type='{sImageTGA=&quot;status&quot;i&quot;type&quot;C&quot;pixelDepth&quot;C&quot;width&quot;s&quot;height&quot;s&quot;imageData&quot;*&quot;flipped&quot;i}' name='tImageTGA'>
<field type='i' declared_type='int' name='status'/>
<field type='C' declared_type='unsigned char' name='type'/>
<field type='C' declared_type='unsigned char' name='pixelDepth'/>
<field type='s' declared_type='short' name='width'/>
<field type='s' declared_type='short' name='height'/>
<field type='*' declared_type='unsigned char*' name='imageData'/>
<field type='i' declared_type='int' name='flipped'/>
</struct>
<constant const='true' type='{_ccColor3B=CCC}' declared_type='ccColor3B' name='ccBLACK'/>
<constant const='true' type='{_ccColor3B=CCC}' declared_type='ccColor3B' name='ccBLUE'/>
<constant const='true' type='{_ccColor3B=CCC}' declared_type='ccColor3B' name='ccGRAY'/>
<constant const='true' type='{_ccColor3B=CCC}' declared_type='ccColor3B' name='ccGREEN'/>
<constant const='true' type='{_ccColor3B=CCC}' declared_type='ccColor3B' name='ccMAGENTA'/>
<constant const='true' type='{_ccColor3B=CCC}' declared_type='ccColor3B' name='ccORANGE'/>
<constant const='true' type='*' declared_type='GLchar*' name='ccPositionColor_frag'/>
<constant const='true' type='*' declared_type='GLchar*' name='ccPositionColor_vert'/>
<constant const='true' type='*' declared_type='GLchar*' name='ccPositionTextureA8Color_frag'/>
<constant const='true' type='*' declared_type='GLchar*' name='ccPositionTextureA8Color_vert'/>
<constant const='true' type='*' declared_type='GLchar*' name='ccPositionTextureColorAlphaTest_frag'/>
<constant const='true' type='*' declared_type='GLchar*' name='ccPositionTextureColor_frag'/>
<constant const='true' type='*' declared_type='GLchar*' name='ccPositionTextureColor_vert'/>
<constant const='true' type='*' declared_type='GLchar*' name='ccPositionTexture_frag'/>
<constant const='true' type='*' declared_type='GLchar*' name='ccPositionTexture_uColor_frag'/>
<constant const='true' type='*' declared_type='GLchar*' name='ccPositionTexture_uColor_vert'/>
<constant const='true' type='*' declared_type='GLchar*' name='ccPositionTexture_vert'/>
<constant const='true' type='*' declared_type='GLchar*' name='ccPosition_uColor_frag'/>
<constant const='true' type='*' declared_type='GLchar*' name='ccPosition_uColor_vert'/>
<constant const='true' type='{_ccColor3B=CCC}' declared_type='ccColor3B' name='ccRED'/>
<constant const='true' type='{_ccColor3B=CCC}' declared_type='ccColor3B' name='ccWHITE'/>
<constant const='true' type='{_ccColor3B=CCC}' declared_type='ccColor3B' name='ccYELLOW'/>
<constant type='B' declared_type='BOOL' name='kCCProfilerCategoryBatchSprite'/>
<constant type='B' declared_type='BOOL' name='kCCProfilerCategoryParticles'/>
<constant type='B' declared_type='BOOL' name='kCCProfilerCategorySprite'/>
<constant const='true' type='@' declared_type='NSString*' name='kCDN_AsynchLoadComplete'/>
<constant const='true' type='@' declared_type='NSString*' name='kCDN_AudioManagerInitialised'/>
<constant const='true' type='@' declared_type='NSString*' name='kCDN_BadAlContext'/>
<constant const='true' type='i' declared_type='int' name='kCDNoBuffer'/>
<constant const='true' type='f' declared_type='float' name='kCD_GainDefault'/>
<constant const='true' type='f' declared_type='float' name='kCD_PanDefault'/>
<constant const='true' type='f' declared_type='float' name='kCD_PanFullLeft'/>
<constant const='true' type='f' declared_type='float' name='kCD_PanFullRight'/>
<constant const='true' type='f' declared_type='float' name='kCD_PitchDefault'/>
<constant const='true' type='f' declared_type='float' name='kCD_PitchHigherOneOctave'/>
<constant const='true' type='f' declared_type='float' name='kCD_PitchLowerOneOctave'/>
<string_constant value='CCAnimationFrameDisplayedNotification' nsstring='true' name='CCAnimationFrameDisplayedNotification'/>
<string_constant value='Aphex.rc' name='COCOSDENSHION_VERSION'/>
<string_constant value='a_color' nsstring='true' name='kCCAttributeNameColor'/>
<string_constant value='a_position' nsstring='true' name='kCCAttributeNamePosition'/>
<string_constant value='a_texCoord' nsstring='true' name='kCCAttributeNameTexCoord'/>
<string_constant value='ShaderPositionColor' nsstring='true' name='kCCShader_PositionColor'/>
<string_constant value='ShaderPositionTexture' nsstring='true' name='kCCShader_PositionTexture'/>
<string_constant value='ShaderPositionTextureA8Color' nsstring='true' name='kCCShader_PositionTextureA8Color'/>
<string_constant value='ShaderPositionTextureColor' nsstring='true' name='kCCShader_PositionTextureColor'/>
<string_constant value='ShaderPositionTextureColorAlphaTest' nsstring='true' name='kCCShader_PositionTextureColorAlphaTest'/>
<string_constant value='ShaderPositionTexture_uColor' nsstring='true' name='kCCShader_PositionTexture_uColor'/>
<string_constant value='ShaderPosition_uColor' nsstring='true' name='kCCShader_Position_uColor'/>
<string_constant value='u_alpha_value' name='kCCUniformAlphaTestValue'/>
<string_constant value='u_MVPMatrix' name='kCCUniformMVPMatrix_s'/>
<string_constant value='u_texture' name='kCCUniformSampler_s'/>
<enum value='4294967295' name='CCSpriteIndexNotInitialized'/>
<enum value='1' name='CCTMXOrientationHex'/>
<enum value='2' name='CCTMXOrientationIso'/>
<enum value='0' name='CCTMXOrientationOrtho'/>
<enum value='0' name='CCTextAlignmentLeft'/>
<enum value='1' name='CCZ_COMPRESSION_BZIP2'/>
<enum value='2' name='CCZ_COMPRESSION_GZIP'/>
<enum value='3' name='CCZ_COMPRESSION_NONE'/>
<enum value='0' name='CCZ_COMPRESSION_ZLIB'/>
<enum value='771' name='CC_BLEND_DST'/>
<enum value='1' name='CC_BLEND_SRC'/>
<enum value='0' name='CC_DIRECTOR_IOS_USE_BACKGROUND_THREAD'/>
<enum value='0' name='CC_DIRECTOR_MAC_THREAD'/>
<enum value='0.1f' name='CC_DIRECTOR_STATS_INTERVAL'/>
<enum value='1' name='CC_ENABLE_DEPRECATED'/>
<enum value='0' name='CC_ENABLE_GL_STATE_CACHE'/>
<enum value='0' name='CC_ENABLE_PROFILERS'/>
<enum value='0' name='CC_FIX_ARTIFACTS_BY_STRECHING_TEXEL'/>
<enum value='8' name='CC_GL_ALL'/>
<enum value='8' name='CC_GL_BLEND'/>
<enum value='35056' name='CC_GL_DEPTH24_STENCIL8'/>
<enum value='0' name='CC_LABELATLAS_DEBUG_DRAW'/>
<enum value='0' name='CC_LABELBMFONT_DEBUG_DRAW'/>
<enum value='0' name='CC_MAC_USE_DISPLAY_LINK_THREAD'/>
<enum value='2' name='CC_MAC_USE_MAIN_THREAD'/>
<enum value='1' name='CC_MAC_USE_OWN_THREAD'/>
<enum value='1' name='CC_NODE_RENDER_SUBPIXEL'/>
<enum value='16' name='CC_PVRMIPMAP_MAX'/>
<enum value='1' name='CC_SPRITEBATCHNODE_RENDER_SUBPIXEL'/>
<enum value='0' name='CC_SPRITE_DEBUG_DRAW'/>
<enum value='0' name='CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP'/>
<enum value='1' name='CC_TEXTURE_ATLAS_USE_VAO'/>
<enum value='1' name='CC_USE_LA88_LABELS'/>
<enum value='0' name='CD_BS_EMPTY'/>
<enum value='2' name='CD_BS_FAILED'/>
<enum value='1' name='CD_BS_LOADED'/>
<enum value='16' name='CD_BUFFERS_INCREMENT'/>
<enum value='64' name='CD_BUFFERS_START'/>
<enum value='200211438' name='CD_IGNORE_AUDIO_SESSION'/>
<enum value='267312043' name='CD_MUTE'/>
<enum value='267313068' name='CD_NO_SOURCE'/>
<enum value='8000' name='CD_SAMPLE_RATE_BASIC'/>
<enum value='44100' name='CD_SAMPLE_RATE_DEFAULT'/>
<enum value='44100' name='CD_SAMPLE_RATE_HIGH'/>
<enum value='16000' name='CD_SAMPLE_RATE_LOW'/>
<enum value='22050' name='CD_SAMPLE_RATE_MID'/>
<enum value='32' name='CD_SOURCE_LIMIT'/>
<enum value='131072' name='COCOS2D_VERSION'/>
<enum value='10' name='HASH_BKT_CAPACITY_THRESH'/>
<enum value='2971803890' name='HASH_BLOOM_SIGNATURE'/>
<enum value='32' name='HASH_INITIAL_NUM_BUCKETS'/>
<enum value='5' name='HASH_INITIAL_NUM_BUCKETS_LOG2'/>
<enum value='2685476833' name='HASH_SIGNATURE'/>
<enum value='0' name='KM_FALSE'/>
<enum value='5888' name='KM_GL_MODELVIEW'/>
<enum value='5889' name='KM_GL_PROJECTION'/>
<enum value='5890' name='KM_GL_TEXTURE'/>
<enum value='2' name='KM_PLANE_BOTTOM'/>
<enum value='5' name='KM_PLANE_FAR'/>
<enum value='0' name='KM_PLANE_LEFT'/>
<enum value='4' name='KM_PLANE_NEAR'/>
<enum value='1' name='KM_PLANE_RIGHT'/>
<enum value='3' name='KM_PLANE_TOP'/>
<enum value='1' name='KM_TRUE'/>
<enum value='1' name='POINT_BEHIND_PLANE'/>
<enum value='0' name='POINT_INFRONT_OF_PLANE'/>
<enum value='2' name='POINT_ON_PLANE'/>
<enum value='5' name='TGA_ERROR_COMPRESSED_FILE'/>
<enum value='1' name='TGA_ERROR_FILE_OPEN'/>
<enum value='3' name='TGA_ERROR_INDEXED_COLOR'/>
<enum value='4' name='TGA_ERROR_MEMORY'/>
<enum value='2' name='TGA_ERROR_READING_FILE'/>
<enum value='0' name='TGA_OK'/>
<enum value='2' name='TMXLayerAttribBase64'/>
<enum value='4' name='TMXLayerAttribGzip'/>
<enum value='1' name='TMXLayerAttribNone'/>
<enum value='8' name='TMXLayerAttribZlib'/>
<enum value='2' name='TMXPropertyLayer'/>
<enum value='1' name='TMXPropertyMap'/>
<enum value='0' name='TMXPropertyNone'/>
<enum value='4' name='TMXPropertyObject'/>
<enum value='3' name='TMXPropertyObjectGroup'/>
<enum value='5' name='TMXPropertyTile'/>
<enum value='0' name='kAMM_FxOnly'/>
<enum value='1' name='kAMM_FxPlusMusic'/>
<enum value='2' name='kAMM_FxPlusMusicIfNoOtherAudio'/>
<enum value='3' name='kAMM_MediaPlayback'/>
<enum value='4' name='kAMM_PlayAndRecord'/>
<enum value='0' name='kAMRBDoNothing'/>
<enum value='2' name='kAMRBStop'/>
<enum value='1' name='kAMRBStopPlay'/>
<enum value='2' name='kAMStateInitialised'/>
<enum value='1' name='kAMStateInitialising'/>
<enum value='0' name='kAMStateUninitialised'/>
<enum value='0' name='kASC_Left'/>
<enum value='1' name='kASC_Right'/>
<enum value='-1' name='kCCActionTagInvalid'/>
<enum value='0' name='kCCDirectorProjection2D'/>
<enum value='1' name='kCCDirectorProjection3D'/>
<enum value='2' name='kCCDirectorProjectionCustom'/>
<enum value='1' name='kCCDirectorProjectionDefault'/>
<enum value='3758096384' name='kCCFlipedAll'/>
<enum value='536870911' name='kCCFlippedMask'/>
<enum value='0' name='kCCImageFormatJPEG'/>
<enum value='0' name='kCCImageFormatJPG'/>
<enum value='1' name='kCCImageFormatPNG'/>
<enum value='32' name='kCCItemSize'/>
<enum value='-1' name='kCCLabelAutomaticWidth'/>
<enum value='1' name='kCCLineBreakModeCharacterWrap'/>
<enum value='2' name='kCCLineBreakModeClip'/>
<enum value='3' name='kCCLineBreakModeHeadTruncation'/>
<enum value='5' name='kCCLineBreakModeMiddleTruncation'/>
<enum value='4' name='kCCLineBreakModeTailTruncation'/>
<enum value='0' name='kCCLineBreakModeWordWrap'/>
<enum value='168165376' name='kCCMacVersion_10_6'/>
<enum value='168230912' name='kCCMacVersion_10_7'/>
<enum value='168296448' name='kCCMacVersion_10_8'/>
<enum value='-128' name='kCCMenuHandlerPriority'/>
<enum value='1' name='kCCMenuStateTrackingTouch'/>
<enum value='0' name='kCCMenuStateWaiting'/>
<enum value='-1' name='kCCNodeTagInvalid'/>
<enum value='-1' name='kCCParticleDurationInfinity'/>
<enum value='0' name='kCCParticleModeGravity'/>
<enum value='1' name='kCCParticleModeRadius'/>
<enum value='-1' name='kCCParticleStartRadiusEqualToEndRadius'/>
<enum value='-1' name='kCCParticleStartSizeEqualToEndSize'/>
<enum value='0' name='kCCPositionTypeFree'/>
<enum value='2' name='kCCPositionTypeGrouped'/>
<enum value='1' name='kCCPositionTypeRelative'/>
<enum value='-2147483647' name='kCCPriorityNonSystemMin'/>
<enum value='-2147483648' name='kCCPrioritySystem'/>
<enum value='1' name='kCCProgressTimerTypeBar'/>
<enum value='0' name='kCCProgressTimerTypeRadial'/>
<enum value='4294967294' name='kCCRepeatForever'/>
<enum value='0' name='kCCResolutionStandard'/>
<enum value='0' name='kCCResolutionUnknown'/>
<enum value='3' name='kCCResolutioniPad'/>
<enum value='4' name='kCCResolutioniPadRetinaDisplay'/>
<enum value='1' name='kCCResolutioniPhone'/>
<enum value='2' name='kCCResolutioniPhoneRetinaDisplay'/>
<enum value='536870912' name='kCCTMXTileDiagonalFlag'/>
<enum value='2147483648' name='kCCTMXTileHorizontalFlag'/>
<enum value='1073741824' name='kCCTMXTileVerticalFlag'/>
<enum value='1' name='kCCTextAlignmentCenter'/>
<enum value='0' name='kCCTextAlignmentLeft'/>
<enum value='2' name='kCCTextAlignmentRight'/>
<enum value='3' name='kCCTexture2DPixelFormat_A8'/>
<enum value='5' name='kCCTexture2DPixelFormat_AI88'/>
<enum value='0' name='kCCTexture2DPixelFormat_Default'/>
<enum value='4' name='kCCTexture2DPixelFormat_I8'/>
<enum value='9' name='kCCTexture2DPixelFormat_PVRTC2'/>
<enum value='8' name='kCCTexture2DPixelFormat_PVRTC4'/>
<enum value='2' name='kCCTexture2DPixelFormat_RGB565'/>
<enum value='7' name='kCCTexture2DPixelFormat_RGB5A1'/>
<enum value='1' name='kCCTexture2DPixelFormat_RGB888'/>
<enum value='6' name='kCCTexture2DPixelFormat_RGBA4444'/>
<enum value='0' name='kCCTexture2DPixelFormat_RGBA8888'/>
<enum value='0' name='kCCTouchBegan'/>
<enum value='3' name='kCCTouchCancelled'/>
<enum value='2' name='kCCTouchEnded'/>
<enum value='4' name='kCCTouchMax'/>
<enum value='1' name='kCCTouchMoved'/>
<enum value='15' name='kCCTouchSelectorAllBits'/>
<enum value='1' name='kCCTouchSelectorBeganBit'/>
<enum value='8' name='kCCTouchSelectorCancelledBit'/>
<enum value='4' name='kCCTouchSelectorEndedBit'/>
<enum value='2' name='kCCTouchSelectorMovedBit'/>
<enum value='0' name='kCCUniformMVPMatrix'/>
<enum value='1' name='kCCUniformSampler'/>
<enum value='2' name='kCCUniform_MAX'/>
<enum value='2' name='kCCVertexAttribFlag_Color'/>
<enum value='0' name='kCCVertexAttribFlag_None'/>
<enum value='7' name='kCCVertexAttribFlag_PosColorTex'/>
<enum value='1' name='kCCVertexAttribFlag_Position'/>
<enum value='4' name='kCCVertexAttribFlag_TexCoords'/>
<enum value='1' name='kCCVertexAttrib_Color'/>
<enum value='3' name='kCCVertexAttrib_MAX'/>
<enum value='0' name='kCCVertexAttrib_Position'/>
<enum value='2' name='kCCVertexAttrib_TexCoords'/>
<enum value='2' name='kCCVerticalTextAlignmentBottom'/>
<enum value='1' name='kCCVerticalTextAlignmentCenter'/>
<enum value='0' name='kCCVerticalTextAlignmentTop'/>
<enum value='67108864' name='kCCiOSVersion_4_0'/>
<enum value='67109120' name='kCCiOSVersion_4_0_1'/>
<enum value='67174400' name='kCCiOSVersion_4_1'/>
<enum value='67239936' name='kCCiOSVersion_4_2'/>
<enum value='67240192' name='kCCiOSVersion_4_2_1'/>
<enum value='67305472' name='kCCiOSVersion_4_3'/>
<enum value='67305728' name='kCCiOSVersion_4_3_1'/>
<enum value='67305984' name='kCCiOSVersion_4_3_2'/>
<enum value='67306240' name='kCCiOSVersion_4_3_3'/>
<enum value='67306496' name='kCCiOSVersion_4_3_4'/>
<enum value='67306752' name='kCCiOSVersion_4_3_5'/>
<enum value='83886080' name='kCCiOSVersion_5_0'/>
<enum value='83886336' name='kCCiOSVersion_5_0_1'/>
<enum value='83951616' name='kCCiOSVersion_5_1_0'/>
<enum value='100663296' name='kCCiOSVersion_6_0_0'/>
<enum value='2' name='kIT_Exponential'/>
<enum value='0' name='kIT_Linear'/>
<enum value='1' name='kIT_SCurve'/>
<enum value='0' name='kLAS_Init'/>
<enum value='1' name='kLAS_Loaded'/>
<enum value='3' name='kLAS_Paused'/>
<enum value='2' name='kLAS_Playing'/>
<enum value='4' name='kLAS_Stopped'/>
<enum value='1' name='kOrientationDownOver'/>
<enum value='0' name='kOrientationLeftOver'/>
<enum value='1' name='kOrientationRightOver'/>
<enum value='0' name='kOrientationUpOver'/>
<enum value='-1' name='kParticleDurationInfinity'/>
<enum value='-1' name='kParticleStartSizeEqualToEndSize'/>
<enum value='0' name='kPositionTypeFree'/>
<enum value='2' name='kPositionTypeGrouped'/>
<enum value='0.015625' name='kmEpsilon'/>
<enum value='3.141592f' name='kmPI'/>
<enum value='0.017453f' name='kmPIOver180'/>
<enum value='57.295779f' name='kmPIUnder180'/>
<function name='CCProfilingBeginTimingBlock'>
<arg type='@' declared_type='NSString*' name='timerName'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CCProfilingEndTimingBlock'>
<arg type='@' declared_type='NSString*' name='timerName'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CCProfilingResetTimingBlock'>
<arg type='@' declared_type='NSString*' name='timerName'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CDGetOpenALAudioData'>
<arg type='^{__CFURL=}' declared_type='CFURLRef' name='inFileURL'/>
<arg type='^i' declared_type='ALsizei*' name='outDataSize'/>
<arg type='^i' declared_type='ALenum*' name='outDataFormat'/>
<arg type='^i' declared_type='ALsizei*' name='outSampleRate'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='CDloadCafAudioData'>
<arg type='^{__CFURL=}' declared_type='CFURLRef' name='inFileURL'/>
<arg type='^i' declared_type='ALsizei*' name='outDataSize'/>
<arg type='^i' declared_type='ALenum*' name='outDataFormat'/>
<arg type='^i' declared_type='ALsizei*' name='outSampleRate'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='CDloadWaveAudioData'>
<arg type='^{__CFURL=}' declared_type='CFURLRef' name='inFileURL'/>
<arg type='^i' declared_type='ALsizei*' name='outDataSize'/>
<arg type='^i' declared_type='ALenum*' name='outDataFormat'/>
<arg type='^i' declared_type='ALsizei*' name='outSampleRate'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='CGAffineToGL'>
<arg const='true' type='^{CGAffineTransform=ffffff}' declared_type='CGAffineTransform*' name='t'/>
<arg type='^f' declared_type='GLfloat*' name='m'/>
<retval type='v' declared_type='void'/>
</function>
<function name='FNTConfigLoadFile'>
<arg type='@' declared_type='NSString*' name='file'/>
<retval type='@' declared_type='CCBMFontConfiguration*'/>
</function>
<function name='FNTConfigRemoveCache'>
<retval type='v' declared_type='void'/>
</function>
<function name='GLToCGAffine'>
<arg const='true' type='^f' declared_type='GLfloat*' name='m'/>
<arg type='^{CGAffineTransform=ffffff}' declared_type='CGAffineTransform*' name='t'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NEON_Matrix4Mul'>
<arg const='true' type='^f' declared_type='float*' name='a'/>
<arg const='true' type='^f' declared_type='float*' name='b'/>
<arg type='^f' declared_type='float*' name='output'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NEON_Matrix4Vector4Mul'>
<arg const='true' type='^f' declared_type='float*' name='m'/>
<arg const='true' type='^f' declared_type='float*' name='v'/>
<arg type='^f' declared_type='float*' name='output'/>
<retval type='v' declared_type='void'/>
</function>
<function name='base64Decode'>
<arg type='*' declared_type='unsigned char*' name='in'/>
<arg type='I' declared_type='unsigned int' name='inLength'/>
<arg type='^*' declared_type='unsigned char**' name='out'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccArrayAppendArray'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='plusArr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayAppendArrayWithResize'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='plusArr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayAppendObject'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayAppendObjectWithResize'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayContainsObject'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='@' declared_type='id' name='object'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccArrayDoubleCapacity'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayEnsureExtraCapacity'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='I' declared_type='NSUInteger' name='extra'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayFastRemoveObject'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayFastRemoveObjectAtIndex'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='I' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayFree'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayFullRemoveArray'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='minusArr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayGetIndexOfObject'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='@' declared_type='id' name='object'/>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='ccArrayInsertObjectAtIndex'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='@' declared_type='id' name='object'/>
<arg type='I' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayMakeObjectPerformSelectorWithArrayObjects'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type=':' declared_type='SEL' name='sel'/>
<arg type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayMakeObjectsPerformSelector'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type=':' declared_type='SEL' name='sel'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayMakeObjectsPerformSelectorWithObject'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type=':' declared_type='SEL' name='sel'/>
<arg type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayNew'>
<arg type='I' declared_type='NSUInteger' name='capacity'/>
<retval type='^{ccArray=II^@}' declared_type='ccArray*'/>
</function>
<function name='ccArrayRemoveAllObjects'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayRemoveArray'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='minusArr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayRemoveObject'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayRemoveObjectAtIndex'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='I' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayShrink'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArraySwapObjectsAtIndexes'>
<arg type='^{ccArray=II^@}' declared_type='ccArray*' name='arr'/>
<arg type='I' declared_type='NSUInteger' name='index1'/>
<arg type='I' declared_type='NSUInteger' name='index2'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayAppendArray'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='plusArr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayAppendArrayWithResize'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='plusArr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayAppendValue'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='@' declared_type='CCARRAY_ID' name='value'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayAppendValueWithResize'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='@' declared_type='CCARRAY_ID' name='value'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayContainsValue'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='@' declared_type='CCARRAY_ID' name='value'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccCArrayDoubleCapacity'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayEnsureExtraCapacity'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='I' declared_type='NSUInteger' name='extra'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayFastRemoveValueAtIndex'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='I' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayFree'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayFullRemoveArray'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='minusArr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayGetIndexOfValue'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='@' declared_type='CCARRAY_ID' name='value'/>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='ccCArrayInsertValueAtIndex'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='@' declared_type='CCARRAY_ID' name='value'/>
<arg type='I' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayNew'>
<arg type='I' declared_type='NSUInteger' name='capacity'/>
<retval type='^{ccArray=II^@}' declared_type='ccCArray*'/>
</function>
<function name='ccCArrayRemoveAllValues'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayRemoveArray'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='minusArr'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayRemoveValue'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='@' declared_type='CCARRAY_ID' name='value'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayRemoveValueAtIndex'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='I' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCardinalSplineAt'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='p0'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='p1'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='p2'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='p3'/>
<arg type='f' declared_type='CGFloat' name='tension'/>
<arg type='f' declared_type='ccTime' name='t'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccDrawCardinalSpline'>
<arg type='@' declared_type='CCPointArray*' name='config'/>
<arg type='f' declared_type='CGFloat' name='tension'/>
<arg type='I' declared_type='NSUInteger' name='segments'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawCatmullRom'>
<arg type='@' declared_type='CCPointArray*' name='arrayOfControlPoints'/>
<arg type='I' declared_type='NSUInteger' name='segments'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawCircle'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='center'/>
<arg type='f' declared_type='float' name='radius'/>
<arg type='f' declared_type='float' name='angle'/>
<arg type='I' declared_type='NSUInteger' name='segments'/>
<arg type='B' declared_type='BOOL' name='drawLineToCenter'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawColor4B'>
<arg type='C' declared_type='GLubyte' name='r'/>
<arg type='C' declared_type='GLubyte' name='g'/>
<arg type='C' declared_type='GLubyte' name='b'/>
<arg type='C' declared_type='GLubyte' name='a'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawColor4F'>
<arg type='f' declared_type='GLfloat' name='r'/>
<arg type='f' declared_type='GLfloat' name='g'/>
<arg type='f' declared_type='GLfloat' name='b'/>
<arg type='f' declared_type='GLfloat' name='a'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawCubicBezier'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='origin'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='control1'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='control2'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='destination'/>
<arg type='I' declared_type='NSUInteger' name='segments'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawLine'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='origin'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='destination'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawPoint'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='point'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawPoints'>
<arg const='true' type='^{CGPoint=ff}' declared_type='CGPoint*' name='points'/>
<arg type='I' declared_type='NSUInteger' name='numberOfPoints'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawPoly'>
<arg const='true' type='^{CGPoint=ff}' declared_type='CGPoint*' name='vertices'/>
<arg type='I' declared_type='NSUInteger' name='numOfVertices'/>
<arg type='B' declared_type='BOOL' name='closePolygon'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawQuadBezier'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='origin'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='control'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='destination'/>
<arg type='I' declared_type='NSUInteger' name='segments'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawRect'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='origin'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='destination'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawSolidPoly'>
<arg const='true' type='^{CGPoint=ff}' declared_type='CGPoint*' name='poli'/>
<arg type='I' declared_type='NSUInteger' name='numberOfPoints'/>
<arg type='{ccColor4F=ffff}' declared_type='ccColor4F' name='color'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawSolidRect'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='origin'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='destination'/>
<arg type='{ccColor4F=ffff}' declared_type='ccColor4F' name='color'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLActiveTexture'>
<arg type='I' declared_type='GLenum' name='textureEnum'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLBindTexture2D'>
<arg type='I' declared_type='GLuint' name='textureId'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLBlendFunc'>
<arg type='I' declared_type='GLenum' name='sfactor'/>
<arg type='I' declared_type='GLenum' name='dfactor'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLDeleteProgram'>
<arg type='I' declared_type='GLuint' name='program'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLDeleteTexture'>
<arg type='I' declared_type='GLuint' name='textureId'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLEnable'>
<arg type='i' declared_type='ccGLServerState' name='flags'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLEnableVertexAttribs'>
<arg type='I' declared_type='unsigned int' name='flags'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLGetActiveTexture'>
<retval type='I' declared_type='GLenum'/>
</function>
<function name='ccGLInvalidateStateCache'>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLUniformModelViewProjectionMatrix'>
<arg type='@' declared_type='CCGLProgram*' name='program'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLUseProgram'>
<arg type='I' declared_type='GLuint' name='program'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccInflateCCZFile'>
<arg const='true' type='*' declared_type='char*' name='filename'/>
<arg type='^*' declared_type='unsigned char**' name='out'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccInflateGZipFile'>
<arg const='true' type='*' declared_type='char*' name='filename'/>
<arg type='^*' declared_type='unsigned char**' name='out'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccInflateMemory'>
<arg type='*' declared_type='unsigned char*' name='in'/>
<arg type='I' declared_type='unsigned int' name='inLength'/>
<arg type='^*' declared_type='unsigned char**' name='out'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccInflateMemoryWithHint'>
<arg type='*' declared_type='unsigned char*' name='in'/>
<arg type='I' declared_type='unsigned int' name='inLength'/>
<arg type='^*' declared_type='unsigned char**' name='out'/>
<arg type='I' declared_type='unsigned int' name='outLenghtHint'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccLoadFileIntoMemory'>
<arg const='true' type='*' declared_type='char*' name='filename'/>
<arg type='^*' declared_type='unsigned char**' name='out'/>
<retval type='i' declared_type='NSInteger'/>
</function>
<function name='ccNextPOT'>
<arg type='L' declared_type='unsigned long' name='value'/>
<retval type='L' declared_type='unsigned long'/>
</function>
<function name='ccPointSize'>
<arg type='f' declared_type='GLfloat' name='pointSize'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccSetProjectionMatrixDirty'>
<retval type='v' declared_type='void'/>
</function>
<function name='ccVertexLineIntersect'>
<arg type='f' declared_type='float' name='Ax'/>
<arg type='f' declared_type='float' name='Ay'/>
<arg type='f' declared_type='float' name='Bx'/>
<arg type='f' declared_type='float' name='By'/>
<arg type='f' declared_type='float' name='Cx'/>
<arg type='f' declared_type='float' name='Cy'/>
<arg type='f' declared_type='float' name='Dx'/>
<arg type='f' declared_type='float' name='Dy'/>
<arg type='^f' declared_type='float*' name='T'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccVertexLineToPolygon'>
<arg type='^{CGPoint=ff}' declared_type='CGPoint*' name='points'/>
<arg type='f' declared_type='float' name='stroke'/>
<arg type='^{_ccVertex2F=ff}' declared_type='ccVertex2F*' name='vertices'/>
<arg type='I' declared_type='NSUInteger' name='offset'/>
<arg type='I' declared_type='NSUInteger' name='nuPoints'/>
<retval type='v' declared_type='void'/>
</function>
<function name='cc_insertionSort'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='arr'/>
<arg type='^?' declared_type='cc_comparator' name='comparator' function_pointer='true'>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='v' declared_type='void'/>
</function>
<function name='cc_mergesortL'>
<arg type='^{ccArray=II^@}' declared_type='ccCArray*' name='array'/>
<arg type='L' declared_type='size_t' name='width'/>
<arg type='^?' declared_type='cc_comparator' name='comparator' function_pointer='true'>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='i' declared_type='int'/>
</function>
<function name='cc_pointerswap'>
<arg type='^v' declared_type='void*' name='a'/>
<arg type='^v' declared_type='void*' name='b'/>
<arg type='L' declared_type='size_t' name='width'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccc3' inline='true'>
<arg const='true' type='C' declared_type='GLubyte' name='r'/>
<arg const='true' type='C' declared_type='GLubyte' name='g'/>
<arg const='true' type='C' declared_type='GLubyte' name='b'/>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</function>
<function name='ccc4' inline='true'>
<arg const='true' type='C' declared_type='GLubyte' name='r'/>
<arg const='true' type='C' declared_type='GLubyte' name='g'/>
<arg const='true' type='C' declared_type='GLubyte' name='b'/>
<arg const='true' type='C' declared_type='GLubyte' name='o'/>
<retval type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
</function>
<function name='ccc4FEqual' inline='true'>
<arg type='{ccColor4F=ffff}' declared_type='ccColor4F' name='a'/>
<arg type='{ccColor4F=ffff}' declared_type='ccColor4F' name='b'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccc4FFromccc3B' inline='true'>
<arg type='{_ccColor3B=CCC}' declared_type='ccColor3B' name='c'/>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</function>
<function name='ccc4FFromccc4B' inline='true'>
<arg type='{_ccColor4B=CCCC}' declared_type='ccColor4B' name='c'/>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</function>
<function name='ccc4f' inline='true'>
<arg const='true' type='f' declared_type='GLfloat' name='r'/>
<arg const='true' type='f' declared_type='GLfloat' name='g'/>
<arg const='true' type='f' declared_type='GLfloat' name='b'/>
<arg const='true' type='f' declared_type='GLfloat' name='a'/>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</function>
<function name='ccg' inline='true'>
<arg const='true' type='i' declared_type='NSInteger' name='x'/>
<arg const='true' type='i' declared_type='NSInteger' name='y'/>
<retval type='{_ccGridSize=ii}' declared_type='ccGridSize'/>
</function>
<function name='ccpAdd' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v1'/>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v2'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpAngle'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='a'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='b'/>
<retval type='f' declared_type='float'/>
</function>
<function name='ccpAngleSigned'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='a'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='b'/>
<retval type='f' declared_type='float'/>
</function>
<function name='ccpClamp'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='p'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='from'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='to'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpCompMult'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='a'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='b'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpCompOp'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='p'/>
<arg type='^?' declared_type='float (*)(float)' name='opFunc' function_pointer='true'>
<arg type='f' declared_type='float'/>
<retval type='f' declared_type='float'/>
</arg>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpCross' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v1'/>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v2'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpDistance'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v1'/>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v2'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpDistanceSQ' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='p1'/>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='p2'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpDot' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v1'/>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v2'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpForAngle'>
<arg const='true' type='f' declared_type='CGFloat' name='a'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpFromSize'>
<arg type='{CGSize=ff}' declared_type='CGSize' name='s'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpFuzzyEqual'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='a'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='b'/>
<arg type='f' declared_type='float' name='variance'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccpIntersectPoint'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='A'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='B'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='C'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='D'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpLength'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpLengthSQ' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpLerp'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='a'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='b'/>
<arg type='f' declared_type='float' name='alpha'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpLineIntersect'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='p1'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='p2'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='p3'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='p4'/>
<arg type='^f' declared_type='float*' name='s'/>
<arg type='^f' declared_type='float*' name='t'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccpMidpoint' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v1'/>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v2'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpMult' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v'/>
<arg const='true' type='f' declared_type='CGFloat' name='s'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpNeg' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpNormalize'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpPerp' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpProject' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v1'/>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v2'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpRPerp' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpRotate' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v1'/>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v2'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpRotateByAngle'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='v'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='pivot'/>
<arg type='f' declared_type='float' name='angle'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpSegmentIntersect'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='A'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='B'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='C'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='D'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccpSub' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v1'/>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v2'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpToAngle'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpUnrotate' inline='true'>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v1'/>
<arg const='true' type='{CGPoint=ff}' declared_type='CGPoint' name='v2'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='clampf'>
<arg type='f' declared_type='float' name='value'/>
<arg type='f' declared_type='float' name='min_inclusive'/>
<arg type='f' declared_type='float' name='max_inclusive'/>
<retval type='f' declared_type='float'/>
</function>
<function name='cocos2dVersion'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='kmAABBAssign'>
<arg type='^{kmAABB={kmVec3=fff}{kmVec3=fff}}' declared_type='kmAABB*' name='pOut'/>
<arg const='true' type='^{kmAABB={kmVec3=fff}{kmVec3=fff}}' declared_type='kmAABB*' name='pIn'/>
<retval const='true' type='^{kmAABB={kmVec3=fff}{kmVec3=fff}}' declared_type='kmAABB*'/>
</function>
<function name='kmAABBContainsPoint'>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pPoint'/>
<arg const='true' type='^{kmAABB={kmVec3=fff}{kmVec3=fff}}' declared_type='kmAABB*' name='pBox'/>
<retval const='true' type='i' declared_type='int'/>
</function>
<function name='kmAABBScale'>
<arg type='^{kmAABB={kmVec3=fff}{kmVec3=fff}}' declared_type='kmAABB*' name='pOut'/>
<arg const='true' type='^{kmAABB={kmVec3=fff}{kmVec3=fff}}' declared_type='kmAABB*' name='pIn'/>
<arg type='f' declared_type='float' name='s'/>
<retval const='true' type='^{kmAABB={kmVec3=fff}{kmVec3=fff}}' declared_type='kmAABB*'/>
</function>
<function name='kmAlmostEqual'>
<arg type='f' declared_type='float' name='lhs'/>
<arg type='f' declared_type='float' name='rhs'/>
<retval type='C' declared_type='unsigned char'/>
</function>
<function name='kmDegreesToRadians'>
<arg type='f' declared_type='float' name='degrees'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmGLFreeAll'>
<retval type='v' declared_type='void'/>
</function>
<function name='kmGLGetMatrix'>
<arg type='I' declared_type='kmGLEnum' name='mode'/>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<retval type='v' declared_type='void'/>
</function>
<function name='kmGLLoadIdentity'>
<retval type='v' declared_type='void'/>
</function>
<function name='kmGLLoadMatrix'>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pIn'/>
<retval type='v' declared_type='void'/>
</function>
<function name='kmGLMatrixMode'>
<arg type='I' declared_type='kmGLEnum' name='mode'/>
<retval type='v' declared_type='void'/>
</function>
<function name='kmGLMultMatrix'>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pIn'/>
<retval type='v' declared_type='void'/>
</function>
<function name='kmGLPopMatrix'>
<retval type='v' declared_type='void'/>
</function>
<function name='kmGLPushMatrix'>
<retval type='v' declared_type='void'/>
</function>
<function name='kmGLRotatef'>
<arg type='f' declared_type='float' name='angle'/>
<arg type='f' declared_type='float' name='x'/>
<arg type='f' declared_type='float' name='y'/>
<arg type='f' declared_type='float' name='z'/>
<retval type='v' declared_type='void'/>
</function>
<function name='kmGLScalef'>
<arg type='f' declared_type='float' name='x'/>
<arg type='f' declared_type='float' name='y'/>
<arg type='f' declared_type='float' name='z'/>
<retval type='v' declared_type='void'/>
</function>
<function name='kmGLTranslatef'>
<arg type='f' declared_type='float' name='x'/>
<arg type='f' declared_type='float' name='y'/>
<arg type='f' declared_type='float' name='z'/>
<retval type='v' declared_type='void'/>
</function>
<function name='kmMat3Adjugate'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pIn'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3AreEqual'>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pM1'/>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pM2'/>
<retval const='true' type='i' declared_type='int'/>
</function>
<function name='kmMat3Assign'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pIn'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3Determinant'>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pIn'/>
<retval const='true' type='f' declared_type='float'/>
</function>
<function name='kmMat3Fill'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='^f' declared_type='float*' name='pMat'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3Identity'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3Inverse'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='f' declared_type='float' name='pDeterminate'/>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pM'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3IsIdentity'>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pIn'/>
<retval const='true' type='i' declared_type='int'/>
</function>
<function name='kmMat3Multiply'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pM1'/>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pM2'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3Rotation'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='f' declared_type='float' name='radians'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3RotationAxisAngle'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='axis'/>
<arg type='f' declared_type='float' name='radians'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3RotationQuaternion'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='struct kmQuaternion*' name='pIn'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3RotationToAxisAngle'>
<arg type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pAxis'/>
<arg type='^f' declared_type='float*' name='radians'/>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pIn'/>
<retval const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*'/>
</function>
<function name='kmMat3RotationX'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='f' declared_type='float' name='radians'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3RotationY'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='f' declared_type='float' name='radians'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3RotationZ'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='f' declared_type='float' name='radians'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3ScalarMultiply'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pM'/>
<arg const='true' type='f' declared_type='float' name='pFactor'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3Scaling'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='f' declared_type='float' name='x'/>
<arg const='true' type='f' declared_type='float' name='y'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3Translation'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='f' declared_type='float' name='x'/>
<arg const='true' type='f' declared_type='float' name='y'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat3Transpose'>
<arg type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pOut'/>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*' name='pIn'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='kmMat3*'/>
</function>
<function name='kmMat4AreEqual'>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pM1'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pM2'/>
<retval const='true' type='i' declared_type='int'/>
</function>
<function name='kmMat4Assign'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pIn'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4ExtractPlane'>
<arg type='^{kmPlane=ffff}' declared_type='struct kmPlane*' name='pOut'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pIn'/>
<arg const='true' type='I' declared_type='unsigned int' name='plane'/>
<retval const='true' type='^{kmPlane=ffff}' declared_type='struct kmPlane*'/>
</function>
<function name='kmMat4ExtractRotation'>
<arg type='^{kmMat3=[9f]}' declared_type='struct kmMat3*' name='pOut'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pIn'/>
<retval const='true' type='^{kmMat3=[9f]}' declared_type='struct kmMat3*'/>
</function>
<function name='kmMat4Fill'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='^f' declared_type='float*' name='pMat'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4GetForwardVec3'>
<arg type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pOut'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pIn'/>
<retval const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*'/>
</function>
<function name='kmMat4GetRightVec3'>
<arg type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pOut'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pIn'/>
<retval const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*'/>
</function>
<function name='kmMat4GetUpVec3'>
<arg type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pOut'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pIn'/>
<retval const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*'/>
</function>
<function name='kmMat4Identity'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4Inverse'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pM'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4IsIdentity'>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pIn'/>
<retval const='true' type='i' declared_type='int'/>
</function>
<function name='kmMat4LookAt'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pEye'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pCenter'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pUp'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4Multiply'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pM1'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pM2'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4OrthographicProjection'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg type='f' declared_type='float' name='left'/>
<arg type='f' declared_type='float' name='right'/>
<arg type='f' declared_type='float' name='bottom'/>
<arg type='f' declared_type='float' name='top'/>
<arg type='f' declared_type='float' name='nearVal'/>
<arg type='f' declared_type='float' name='farVal'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4PerspectiveProjection'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg type='f' declared_type='float' name='fovY'/>
<arg type='f' declared_type='float' name='aspect'/>
<arg type='f' declared_type='float' name='zNear'/>
<arg type='f' declared_type='float' name='zFar'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4RotationAxisAngle'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='axis'/>
<arg type='f' declared_type='float' name='radians'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4RotationPitchYawRoll'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='f' declared_type='float' name='pitch'/>
<arg const='true' type='f' declared_type='float' name='yaw'/>
<arg const='true' type='f' declared_type='float' name='roll'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4RotationQuaternion'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='struct kmQuaternion*' name='pQ'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4RotationToAxisAngle'>
<arg type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pAxis'/>
<arg type='^f' declared_type='float*' name='radians'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pIn'/>
<retval const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*'/>
</function>
<function name='kmMat4RotationTranslation'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='struct kmMat3*' name='rotation'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='translation'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4RotationX'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='f' declared_type='float' name='radians'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4RotationY'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='f' declared_type='float' name='radians'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4RotationZ'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='f' declared_type='float' name='radians'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4Scaling'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='f' declared_type='float' name='x'/>
<arg const='true' type='f' declared_type='float' name='y'/>
<arg const='true' type='f' declared_type='float' name='z'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4Translation'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='f' declared_type='float' name='x'/>
<arg const='true' type='f' declared_type='float' name='y'/>
<arg const='true' type='f' declared_type='float' name='z'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmMat4Transpose'>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pIn'/>
<retval const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*'/>
</function>
<function name='kmPlaneClassifyPoint'>
<arg const='true' type='^{kmPlane=ffff}' declared_type='kmPlane*' name='pIn'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pP'/>
<retval const='true' type='i' declared_type='POINT_CLASSIFICATION'/>
</function>
<function name='kmPlaneDot'>
<arg const='true' type='^{kmPlane=ffff}' declared_type='kmPlane*' name='pP'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='struct kmVec4*' name='pV'/>
<retval const='true' type='f' declared_type='float'/>
</function>
<function name='kmPlaneDotCoord'>
<arg const='true' type='^{kmPlane=ffff}' declared_type='kmPlane*' name='pP'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pV'/>
<retval const='true' type='f' declared_type='float'/>
</function>
<function name='kmPlaneDotNormal'>
<arg const='true' type='^{kmPlane=ffff}' declared_type='kmPlane*' name='pP'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pV'/>
<retval const='true' type='f' declared_type='float'/>
</function>
<function name='kmPlaneFromPointNormal'>
<arg type='^{kmPlane=ffff}' declared_type='kmPlane*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pPoint'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pNormal'/>
<retval const='true' type='^{kmPlane=ffff}' declared_type='kmPlane*'/>
</function>
<function name='kmPlaneFromPoints'>
<arg type='^{kmPlane=ffff}' declared_type='kmPlane*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='p1'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='p2'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='p3'/>
<retval const='true' type='^{kmPlane=ffff}' declared_type='kmPlane*'/>
</function>
<function name='kmPlaneIntersectLine'>
<arg type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pOut'/>
<arg const='true' type='^{kmPlane=ffff}' declared_type='kmPlane*' name='pP'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pV1'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pV2'/>
<retval const='true' type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmPlaneNormalize'>
<arg type='^{kmPlane=ffff}' declared_type='kmPlane*' name='pOut'/>
<arg const='true' type='^{kmPlane=ffff}' declared_type='kmPlane*' name='pP'/>
<retval const='true' type='^{kmPlane=ffff}' declared_type='kmPlane*'/>
</function>
<function name='kmPlaneScale'>
<arg type='^{kmPlane=ffff}' declared_type='kmPlane*' name='pOut'/>
<arg const='true' type='^{kmPlane=ffff}' declared_type='kmPlane*' name='pP'/>
<arg type='f' declared_type='float' name='s'/>
<retval const='true' type='^{kmPlane=ffff}' declared_type='kmPlane*'/>
</function>
<function name='kmQuaternionAdd'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pQ1'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pQ2'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionAssign'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pIn'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionConjugate'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pIn'/>
<retval const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionDot'>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='q1'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='q2'/>
<retval const='true' type='f' declared_type='float'/>
</function>
<function name='kmQuaternionExp'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pIn'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionIdentity'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionInverse'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pIn'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionIsIdentity'>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pIn'/>
<retval type='i' declared_type='int'/>
</function>
<function name='kmQuaternionLength'>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pIn'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmQuaternionLengthSq'>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pIn'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmQuaternionLn'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pIn'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionMultiply'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='q1'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='q2'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionMultiplyVec3'>
<arg type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pOut'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='q'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='v'/>
<retval type='^{kmVec3=fff}' declared_type='struct kmVec3*'/>
</function>
<function name='kmQuaternionNormalize'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pIn'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionRotationAxis'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pV'/>
<arg type='f' declared_type='float' name='angle'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionRotationBetweenVec3'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='vec1'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='vec2'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='fallback'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionRotationMatrix'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='struct kmMat3*' name='pIn'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionRotationYawPitchRoll'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg type='f' declared_type='float' name='yaw'/>
<arg type='f' declared_type='float' name='pitch'/>
<arg type='f' declared_type='float' name='roll'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionScale'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pIn'/>
<arg type='f' declared_type='float' name='s'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionSlerp'>
<arg type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pOut'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='q1'/>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='q2'/>
<arg type='f' declared_type='float' name='t'/>
<retval type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*'/>
</function>
<function name='kmQuaternionToAxisAngle'>
<arg const='true' type='^{kmQuaternion=ffff}' declared_type='kmQuaternion*' name='pIn'/>
<arg type='^{kmVec3=fff}' declared_type='struct kmVec3*' name='pVector'/>
<arg type='^f' declared_type='float*' name='pAngle'/>
<retval type='v' declared_type='void'/>
</function>
<function name='kmRadiansToDegrees'>
<arg type='f' declared_type='float' name='radians'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmRay2Fill'>
<arg type='^{kmRay2={kmVec2=ff}{kmVec2=ff}}' declared_type='kmRay2*' name='ray'/>
<arg type='f' declared_type='float' name='px'/>
<arg type='f' declared_type='float' name='py'/>
<arg type='f' declared_type='float' name='vx'/>
<arg type='f' declared_type='float' name='vy'/>
<retval type='v' declared_type='void'/>
</function>
<function name='kmRay2IntersectCircle'>
<arg const='true' type='^{kmRay2={kmVec2=ff}{kmVec2=ff}}' declared_type='kmRay2*' name='ray'/>
<arg const='true' type='{kmVec2=ff}' declared_type='kmVec2' name='centre'/>
<arg const='true' type='f' declared_type='float' name='radius'/>
<arg type='^{kmVec2=ff}' declared_type='kmVec2*' name='intersection'/>
<retval type='C' declared_type='unsigned char'/>
</function>
<function name='kmRay2IntersectLineSegment'>
<arg const='true' type='^{kmRay2={kmVec2=ff}{kmVec2=ff}}' declared_type='kmRay2*' name='ray'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='p1'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='p2'/>
<arg type='^{kmVec2=ff}' declared_type='kmVec2*' name='intersection'/>
<retval type='C' declared_type='unsigned char'/>
</function>
<function name='kmRay2IntersectTriangle'>
<arg const='true' type='^{kmRay2={kmVec2=ff}{kmVec2=ff}}' declared_type='kmRay2*' name='ray'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='p1'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='p2'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='p3'/>
<arg type='^{kmVec2=ff}' declared_type='kmVec2*' name='intersection'/>
<arg type='^{kmVec2=ff}' declared_type='kmVec2*' name='normal_out'/>
<retval type='C' declared_type='unsigned char'/>
</function>
<function name='kmSQR'>
<arg type='f' declared_type='float' name='s'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmVec2Add'>
<arg type='^{kmVec2=ff}' declared_type='kmVec2*' name='pOut'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='pV1'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='pV2'/>
<retval type='^{kmVec2=ff}' declared_type='kmVec2*'/>
</function>
<function name='kmVec2AreEqual'>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='p1'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='p2'/>
<retval type='i' declared_type='int'/>
</function>
<function name='kmVec2Dot'>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='pV1'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='pV2'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmVec2Fill'>
<arg type='^{kmVec2=ff}' declared_type='kmVec2*' name='pOut'/>
<arg type='f' declared_type='float' name='x'/>
<arg type='f' declared_type='float' name='y'/>
<retval type='^{kmVec2=ff}' declared_type='kmVec2*'/>
</function>
<function name='kmVec2Length'>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='pIn'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmVec2LengthSq'>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='pIn'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmVec2Normalize'>
<arg type='^{kmVec2=ff}' declared_type='kmVec2*' name='pOut'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='pIn'/>
<retval type='^{kmVec2=ff}' declared_type='kmVec2*'/>
</function>
<function name='kmVec2Scale'>
<arg type='^{kmVec2=ff}' declared_type='kmVec2*' name='pOut'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='pIn'/>
<arg const='true' type='f' declared_type='float' name='s'/>
<retval type='^{kmVec2=ff}' declared_type='kmVec2*'/>
</function>
<function name='kmVec2Subtract'>
<arg type='^{kmVec2=ff}' declared_type='kmVec2*' name='pOut'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='pV1'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='pV2'/>
<retval type='^{kmVec2=ff}' declared_type='kmVec2*'/>
</function>
<function name='kmVec2Transform'>
<arg type='^{kmVec2=ff}' declared_type='kmVec2*' name='pOut'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='pV1'/>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='struct kmMat3*' name='pM'/>
<retval type='^{kmVec2=ff}' declared_type='kmVec2*'/>
</function>
<function name='kmVec2TransformCoord'>
<arg type='^{kmVec2=ff}' declared_type='kmVec2*' name='pOut'/>
<arg const='true' type='^{kmVec2=ff}' declared_type='kmVec2*' name='pV'/>
<arg const='true' type='^{kmMat3=[9f]}' declared_type='struct kmMat3*' name='pM'/>
<retval type='^{kmVec2=ff}' declared_type='kmVec2*'/>
</function>
<function name='kmVec3Add'>
<arg type='^{kmVec3=fff}' declared_type='kmVec3*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pV1'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pV2'/>
<retval type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmVec3AreEqual'>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='p1'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='p2'/>
<retval type='i' declared_type='int'/>
</function>
<function name='kmVec3Assign'>
<arg type='^{kmVec3=fff}' declared_type='kmVec3*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pIn'/>
<retval type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmVec3Cross'>
<arg type='^{kmVec3=fff}' declared_type='kmVec3*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pV1'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pV2'/>
<retval type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmVec3Dot'>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pV1'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pV2'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmVec3Fill'>
<arg type='^{kmVec3=fff}' declared_type='kmVec3*' name='pOut'/>
<arg type='f' declared_type='float' name='x'/>
<arg type='f' declared_type='float' name='y'/>
<arg type='f' declared_type='float' name='z'/>
<retval type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmVec3InverseTransform'>
<arg type='^{kmVec3=fff}' declared_type='kmVec3*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pV'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='struct kmMat4*' name='pM'/>
<retval type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmVec3InverseTransformNormal'>
<arg type='^{kmVec3=fff}' declared_type='kmVec3*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pVect'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='struct kmMat4*' name='pM'/>
<retval type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmVec3Length'>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pIn'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmVec3LengthSq'>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pIn'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmVec3Normalize'>
<arg type='^{kmVec3=fff}' declared_type='kmVec3*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pIn'/>
<retval type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmVec3Scale'>
<arg type='^{kmVec3=fff}' declared_type='kmVec3*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pIn'/>
<arg const='true' type='f' declared_type='float' name='s'/>
<retval type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmVec3Subtract'>
<arg type='^{kmVec3=fff}' declared_type='kmVec3*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pV1'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pV2'/>
<retval type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmVec3Transform'>
<arg type='^{kmVec3=fff}' declared_type='kmVec3*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pV1'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='struct kmMat4*' name='pM'/>
<retval type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmVec3TransformCoord'>
<arg type='^{kmVec3=fff}' declared_type='kmVec3*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pV'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='struct kmMat4*' name='pM'/>
<retval type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmVec3TransformNormal'>
<arg type='^{kmVec3=fff}' declared_type='kmVec3*' name='pOut'/>
<arg const='true' type='^{kmVec3=fff}' declared_type='kmVec3*' name='pV'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='struct kmMat4*' name='pM'/>
<retval type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmVec3Zero'>
<arg type='^{kmVec3=fff}' declared_type='kmVec3*' name='pOut'/>
<retval type='^{kmVec3=fff}' declared_type='kmVec3*'/>
</function>
<function name='kmVec4Add'>
<arg type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pOut'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pV1'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pV2'/>
<retval type='^{kmVec4=ffff}' declared_type='kmVec4*'/>
</function>
<function name='kmVec4AreEqual'>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='p1'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='p2'/>
<retval type='i' declared_type='int'/>
</function>
<function name='kmVec4Assign'>
<arg type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pOut'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pIn'/>
<retval type='^{kmVec4=ffff}' declared_type='kmVec4*'/>
</function>
<function name='kmVec4Dot'>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pV1'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pV2'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmVec4Fill'>
<arg type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pOut'/>
<arg type='f' declared_type='float' name='x'/>
<arg type='f' declared_type='float' name='y'/>
<arg type='f' declared_type='float' name='z'/>
<arg type='f' declared_type='float' name='w'/>
<retval type='^{kmVec4=ffff}' declared_type='kmVec4*'/>
</function>
<function name='kmVec4Length'>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pIn'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmVec4LengthSq'>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pIn'/>
<retval type='f' declared_type='float'/>
</function>
<function name='kmVec4Lerp'>
<arg type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pOut'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pV1'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pV2'/>
<arg type='f' declared_type='float' name='t'/>
<retval type='^{kmVec4=ffff}' declared_type='kmVec4*'/>
</function>
<function name='kmVec4Normalize'>
<arg type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pOut'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pIn'/>
<retval type='^{kmVec4=ffff}' declared_type='kmVec4*'/>
</function>
<function name='kmVec4Scale'>
<arg type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pOut'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pIn'/>
<arg const='true' type='f' declared_type='float' name='s'/>
<retval type='^{kmVec4=ffff}' declared_type='kmVec4*'/>
</function>
<function name='kmVec4Subtract'>
<arg type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pOut'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pV1'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pV2'/>
<retval type='^{kmVec4=ffff}' declared_type='kmVec4*'/>
</function>
<function name='kmVec4Transform'>
<arg type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pOut'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pV'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='struct kmMat4*' name='pM'/>
<retval type='^{kmVec4=ffff}' declared_type='kmVec4*'/>
</function>
<function name='kmVec4TransformArray'>
<arg type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pOut'/>
<arg type='I' declared_type='unsigned int' name='outStride'/>
<arg const='true' type='^{kmVec4=ffff}' declared_type='kmVec4*' name='pV'/>
<arg type='I' declared_type='unsigned int' name='vStride'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='struct kmMat4*' name='pM'/>
<arg type='I' declared_type='unsigned int' name='count'/>
<retval type='^{kmVec4=ffff}' declared_type='kmVec4*'/>
</function>
<function name='km_mat4_stack_initialize'>
<arg type='^{km_mat4_stack=ii^{kmMat4}^{kmMat4}}' declared_type='km_mat4_stack*' name='stack'/>
<retval type='v' declared_type='void'/>
</function>
<function name='km_mat4_stack_pop'>
<arg type='^{km_mat4_stack=ii^{kmMat4}^{kmMat4}}' declared_type='km_mat4_stack*' name='stack'/>
<arg type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='pOut'/>
<retval type='v' declared_type='void'/>
</function>
<function name='km_mat4_stack_push'>
<arg type='^{km_mat4_stack=ii^{kmMat4}^{kmMat4}}' declared_type='km_mat4_stack*' name='stack'/>
<arg const='true' type='^{kmMat4=[16f]}' declared_type='kmMat4*' name='item'/>
<retval type='v' declared_type='void'/>
</function>
<function name='km_mat4_stack_release'>
<arg type='^{km_mat4_stack=ii^{kmMat4}^{kmMat4}}' declared_type='km_mat4_stack*' name='stack'/>
<retval type='v' declared_type='void'/>
</function>
<function name='max'>
<arg type='f' declared_type='float' name='lhs'/>
<arg type='f' declared_type='float' name='rhs'/>
<retval type='f' declared_type='float'/>
</function>
<function name='min'>
<arg type='f' declared_type='float' name='lhs'/>
<arg type='f' declared_type='float' name='rhs'/>
<retval type='f' declared_type='float'/>
</function>
<function name='sortByPriority'>
<arg type='@' declared_type='id' name='first'/>
<arg type='@' declared_type='id' name='second'/>
<arg type='^v' declared_type='void*' name='context'/>
<retval type='i' declared_type='NSComparisonResult'/>
</function>
<function name='tgaDestroy'>
<arg type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*' name='info'/>
<retval type='v' declared_type='void'/>
</function>
<function name='tgaLoad'>
<arg const='true' type='*' declared_type='char*' name='filename'/>
<retval type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*'/>
</function>
<function name='tgaLoadHeader'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*' name='file'/>
<arg type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*' name='info'/>
<retval type='v' declared_type='void'/>
</function>
<function name='tgaLoadImageData'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*' name='file'/>
<arg type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*' name='info'/>
<retval type='v' declared_type='void'/>
</function>
<function name='tgaRGBtogreyscale'>
<arg type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*' name='info'/>
<retval type='v' declared_type='void'/>
</function>
<function_alias name='glBindVertexArray' original='glBindVertexArrayOES'/>
<function_alias name='glClearDepth' original='glClearDepthf'/>
<function_alias name='glDeleteVertexArrays' original='glDeleteVertexArraysOES'/>
<function_alias name='glGenVertexArrays' original='glGenVertexArraysOES'/>
<class name='CCAccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg type='@' index='0' declared_type='CCAction*' name='action'/>
<arg type='f' index='1' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:duration:'>
<arg type='@' index='0' declared_type='CCAction*' name='action'/>
<arg type='f' index='1' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg type='f' index='0' declared_type='float' name='rate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAccelDeccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg type='@' index='0' declared_type='CCAction*' name='action'/>
<arg type='f' index='1' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:duration:'>
<arg type='@' index='0' declared_type='CCAction*' name='action'/>
<arg type='f' index='1' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg type='f' index='0' declared_type='float' name='rate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAction'>
<method selector='action' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='copyWithZone:'>
<arg type='^{_NSZone=}' index='0' declared_type='NSZone*' name='zone'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDone'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='originalTarget'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setTag:'>
<arg type='i' index='0' declared_type='NSInteger' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startWithTarget:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='step:'>
<arg type='f' index='0' declared_type='ccTime' name='dt'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tag'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
<method selector='update:'>
<arg type='f' index='0' declared_type='ccTime' name='time'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCActionEase'>
<method selector='actionWithAction:' class_method='true'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='action'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='action'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCActionInterval'>
<method selector='actionWithDuration:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='elapsed'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='initWithDuration:'>
<arg type='f' index='0' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDone'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reverse'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCActionManager'>
<method selector='addAction:target:paused:'>
<arg type='@' index='0' declared_type='CCAction*' name='action'/>
<arg type='@' index='1' declared_type='id' name='target'/>
<arg type='B' index='2' declared_type='BOOL' name='paused'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getActionByTag:target:'>
<arg type='i' index='0' declared_type='NSInteger' name='tag'/>
<arg type='@' index='1' declared_type='id' name='target'/>
<retval type='@' declared_type='CCAction*'/>
</method>
<method selector='numberOfRunningActionsInTarget:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='pauseAllRunningActions'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='pauseTarget:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAction:'>
<arg type='@' index='0' declared_type='CCAction*' name='action'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeActionByTag:target:'>
<arg type='i' index='0' declared_type='NSInteger' name='tag'/>
<arg type='@' index='1' declared_type='id' name='target'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActionsFromTarget:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTarget:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTargets:'>
<arg type='@' index='0' declared_type='NSSet*' name='targetsToResume'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval type='@' declared_type='CCActionManager*'/>
</method>
</class>
<class name='CCActionTween'>
<method selector='actionWithDuration:key:from:to:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='aDuration'/>
<arg type='@' index='1' declared_type='NSString*' name='key'/>
<arg type='f' index='2' declared_type='float' name='from'/>
<arg type='f' index='3' declared_type='float' name='to'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:key:from:to:'>
<arg type='f' index='0' declared_type='ccTime' name='aDuration'/>
<arg type='@' index='1' declared_type='NSString*' name='key'/>
<arg type='f' index='2' declared_type='float' name='from'/>
<arg type='f' index='3' declared_type='float' name='to'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCAnimate'>
<method selector='actionWithAnimation:' class_method='true'>
<arg type='@' index='0' declared_type='CCAnimation*' name='animation'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actionWithAnimation:restoreOriginalFrame:' class_method='true'>
<arg type='@' index='0' declared_type='CCAnimation*' name='animation'/>
<arg type='B' index='1' declared_type='BOOL' name='restoreOriginalFrame'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actionWithDuration:animation:restoreOriginalFrame:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='@' index='1' declared_type='CCAnimation*' name='animation'/>
<arg type='B' index='2' declared_type='BOOL' name='restoreOriginalFrame'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='animation'>
<retval type='@' declared_type='CCAnimation*'/>
</method>
<method selector='initWithAnimation:'>
<arg type='@' index='0' declared_type='CCAnimation*' name='animation'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAnimation:restoreOriginalFrame:'>
<arg type='@' index='0' declared_type='CCAnimation*' name='a'/>
<arg type='B' index='1' declared_type='BOOL' name='restoreOriginalFrame'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:animation:restoreOriginalFrame:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='@' index='1' declared_type='CCAnimation*' name='animation'/>
<arg type='B' index='2' declared_type='BOOL' name='restoreOriginalFrame'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAnimation:'>
<arg type='@' index='0' declared_type='CCAnimation*' name='animation'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAnimation'>
<method selector='addFrame:'>
<arg type='@' index='0' declared_type='CCSpriteFrame*' name='frame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addFrameWithFilename:'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addFrameWithTexture:rect:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFrame:'>
<arg type='@' index='0' declared_type='CCSpriteFrame*' name='frame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFrameWithFilename:'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFrameWithTexture:rect:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='animation' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='animationWithAnimationFrames:delayPerUnit:loops:' class_method='true'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfAnimationFrames'/>
<arg type='f' index='1' declared_type='float' name='delayPerUnit'/>
<arg type='I' index='2' declared_type='NSUInteger' name='loops'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='animationWithFrames:' class_method='true'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfSpriteFrameNames'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='animationWithFrames:delay:' class_method='true'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfSpriteFrameNames'/>
<arg type='f' index='1' declared_type='float' name='delay'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='animationWithSpriteFrames:' class_method='true'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfSpriteFrameNames'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='animationWithSpriteFrames:delay:' class_method='true'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfSpriteFrameNames'/>
<arg type='f' index='1' declared_type='float' name='delay'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='delayPerUnit'>
<retval type='f' declared_type='float'/>
</method>
<method selector='duration'>
<retval type='f' declared_type='float'/>
</method>
<method selector='frames'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='initWithAnimationFrames:delayPerUnit:loops:'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfAnimationFrames'/>
<arg type='f' index='1' declared_type='float' name='delayPerUnit'/>
<arg type='I' index='2' declared_type='NSUInteger' name='loops'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrames:'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfSpriteFrameNames'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrames:delay:'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfSpriteFrameNames'/>
<arg type='f' index='1' declared_type='float' name='delay'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrames:'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfSpriteFrameNames'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrames:delay:'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfSpriteFrameNames'/>
<arg type='f' index='1' declared_type='float' name='delay'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='loops'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='restoreOriginalFrame'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDelayPerUnit:'>
<arg type='f' index='0' declared_type='float' name='delayPerUnit'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrames:'>
<arg type='@' index='0' declared_type='NSMutableArray*' name='frames'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLoops:'>
<arg type='I' index='0' declared_type='NSUInteger' name='loops'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRestoreOriginalFrame:'>
<arg type='B' index='0' declared_type='BOOL' name='restoreOriginalFrame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='totalDelayUnits'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='CCAnimationCache'>
<method selector='addAnimation:name:'>
<arg type='@' index='0' declared_type='CCAnimation*' name='animation'/>
<arg type='@' index='1' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAnimationsWithDictionary:'>
<arg type='@' index='0' declared_type='NSDictionary*' name='dictionary'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAnimationsWithFile:'>
<arg type='@' index='0' declared_type='NSString*' name='plist'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='animationByName:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='CCAnimation*'/>
</method>
<method selector='purgeSharedAnimationCache' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAnimationByName:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedAnimationCache' class_method='true'>
<retval type='@' declared_type='CCAnimationCache*'/>
</method>
</class>
<class name='CCAnimationFrame'>
<method selector='delayUnits'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithSpriteFrame:delayUnits:userInfo:'>
<arg type='@' index='0' declared_type='CCSpriteFrame*' name='spriteFrame'/>
<arg type='f' index='1' declared_type='float' name='delayUnits'/>
<arg type='@' index='2' declared_type='NSDictionary*' name='userInfo'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelayUnits:'>
<arg type='f' index='0' declared_type='float' name='delayUnits'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpriteFrame:'>
<arg type='@' index='0' declared_type='CCSpriteFrame*' name='spriteFrame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInfo:'>
<arg type='@' index='0' declared_type='NSDictionary*' name='userInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spriteFrame'>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='CCArray'>
<method selector='addObject:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromArray:'>
<arg type='@' index='0' declared_type='CCArray*' name='otherArray'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromNSArray:'>
<arg type='@' index='0' declared_type='NSArray*' name='otherArray'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='array' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayWithArray:' class_method='true'>
<arg type='@' index='0' declared_type='CCArray*' name='otherArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayWithCapacity:' class_method='true'>
<arg type='I' index='0' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayWithNSArray:' class_method='true'>
<arg type='@' index='0' declared_type='NSArray*' name='otherArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='capacity'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='containsObject:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='exchangeObject:withObject:'>
<arg type='@' index='0' declared_type='id' name='object1'/>
<arg type='@' index='1' declared_type='id' name='object2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index1'/>
<arg type='I' index='1' declared_type='NSUInteger' name='index2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fastRemoveObject:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fastRemoveObjectAtIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getNSArray'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='indexOfObject:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithArray:'>
<arg type='@' index='0' declared_type='CCArray*' name='otherArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' index='0' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNSArray:'>
<arg type='@' index='0' declared_type='NSArray*' name='otherArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertObject:atIndex:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<arg type='I' index='1' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertionSort:'>
<arg type=':' index='0' declared_type='SEL' name='selector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertionSortUsingCFuncComparator:'>
<arg type='^?' index='0' declared_type='int (*)(void *, void *)' name='comparator' function_pointer='true'>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEqualToArray:'>
<arg type='@' index='0' declared_type='CCArray*' name='otherArray'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeObjectPerformSelectorWithArrayObjects:selector:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<arg type=':' index='1' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg type=':' index='0' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg type=':' index='0' declared_type='SEL' name='aSelector'/>
<arg type='@' index='1' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mergesortLUsingCFuncComparator:'>
<arg type='^?' index='0' declared_type='int (*)(void *, void *)' name='comparator' function_pointer='true'>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectAtIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='qsortUsingCFuncComparator:'>
<arg type='^?' index='0' declared_type='int (*)(void *, void *)' name='comparator' function_pointer='true'>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='randomObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='reduceMemoryFootprint'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeLastObject'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInArray:'>
<arg type='@' index='0' declared_type='CCArray*' name='otherArray'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<arg type='@' index='1' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reverseObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg type='^?' index='0' declared_type='NSInteger (*)(id, id, void *)' name='compare' function_pointer='true'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='i' declared_type='NSInteger'/>
</arg>
<arg type='^v' index='1' declared_type='void*' name='context'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAtlasNode'>
<method selector='atlasWithTileFile:tileWidth:tileHeight:itemsToRender:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='tile'/>
<arg type='I' index='1' declared_type='NSUInteger' name='w'/>
<arg type='I' index='2' declared_type='NSUInteger' name='h'/>
<arg type='I' index='3' declared_type='NSUInteger' name='c'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithTileFile:tileWidth:tileHeight:itemsToRender:'>
<arg type='@' index='0' declared_type='NSString*' name='tile'/>
<arg type='I' index='1' declared_type='NSUInteger' name='w'/>
<arg type='I' index='2' declared_type='NSUInteger' name='h'/>
<arg type='I' index='3' declared_type='NSUInteger' name='c'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='quadsToDraw'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setBlendFunc:'>
<arg type='{_ccBlendFunc=II}' index='0' declared_type='ccBlendFunc' name='blendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg type='{_ccColor3B=CCC}' index='0' declared_type='ccColor3B' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg type='C' index='0' declared_type='GLubyte' name='opacity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQuadsToDraw:'>
<arg type='I' index='0' declared_type='NSUInteger' name='quadsToDraw'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg type='@' index='0' declared_type='CCTextureAtlas*' name='textureAtlas'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
<method selector='updateAtlasValues'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCBMFontConfiguration'>
<method selector='atlasName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='configurationWithFNTFile:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='FNTfile'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFNTfile:'>
<arg type='@' index='0' declared_type='NSString*' name='FNTfile'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAtlasName:'>
<arg type='@' index='0' declared_type='NSString*' name='atlasName'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCBezierBy'>
<method selector='actionWithDuration:bezier:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='t'/>
<arg type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' index='1' declared_type='ccBezierConfig' name='c'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:bezier:'>
<arg type='f' index='0' declared_type='ccTime' name='t'/>
<arg type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' index='1' declared_type='ccBezierConfig' name='c'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCBlink'>
<method selector='actionWithDuration:blinks:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='I' index='1' declared_type='NSUInteger' name='blinks'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:blinks:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='I' index='1' declared_type='NSUInteger' name='blinks'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallBlock'>
<method selector='actionWithBlock:' class_method='true'>
<arg type='@?' index='0' declared_type='void (^)()' name='block' function_pointer='true'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:'>
<arg type='@?' index='0' declared_type='void (^)()' name='block' function_pointer='true'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallBlockN'>
<method selector='actionWithBlock:' class_method='true'>
<arg type='@?' index='0' declared_type='void (^)(CCNode *)' name='block' function_pointer='true'>
<arg type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:'>
<arg type='@?' index='0' declared_type='void (^)(CCNode *)' name='block' function_pointer='true'>
<arg type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallBlockO'>
<method selector='actionWithBlock:object:' class_method='true'>
<arg type='@?' index='0' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@' index='1' declared_type='id' name='object'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:object:'>
<arg type='@?' index='0' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@' index='1' declared_type='id' name='object'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='object'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObject:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCallFunc'>
<method selector='actionWithTarget:selector:' class_method='true'>
<arg type='@' index='0' declared_type='id' name='t'/>
<arg type=':' index='1' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTarget:selector:'>
<arg type='@' index='0' declared_type='id' name='t'/>
<arg type=':' index='1' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setTargetCallback:'>
<arg type='@' index='0' declared_type='id' name='targetCallback'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='targetCallback'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallFuncND'>
<method selector='actionWithTarget:selector:data:' class_method='true'>
<arg type='@' index='0' declared_type='id' name='t'/>
<arg type=':' index='1' declared_type='SEL' name='s'/>
<arg type='^v' index='2' declared_type='void*' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='callbackMethod'>
<retval type='^?' declared_type='CC_CALLBACK_ND' function_pointer='true'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='initWithTarget:selector:data:'>
<arg type='@' index='0' declared_type='id' name='t'/>
<arg type=':' index='1' declared_type='SEL' name='s'/>
<arg type='^v' index='2' declared_type='void*' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCallbackMethod:'>
<arg type='^?' index='0' declared_type='CC_CALLBACK_ND' name='callbackMethod' function_pointer='true'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCallFuncO'>
<method selector='actionWithTarget:selector:object:' class_method='true'>
<arg type='@' index='0' declared_type='id' name='t'/>
<arg type=':' index='1' declared_type='SEL' name='s'/>
<arg type='@' index='2' declared_type='id' name='object'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg type='@' index='0' declared_type='id' name='t'/>
<arg type=':' index='1' declared_type='SEL' name='s'/>
<arg type='@' index='2' declared_type='id' name='object'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='object'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObject:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCamera'>
<method selector='centerX:centerY:centerZ:'>
<arg type='^f' index='0' declared_type='float*' name='x'/>
<arg type='^f' index='1' declared_type='float*' name='y'/>
<arg type='^f' index='2' declared_type='float*' name='z'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dirty'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='eyeX:eyeY:eyeZ:'>
<arg type='^f' index='0' declared_type='float*' name='x'/>
<arg type='^f' index='1' declared_type='float*' name='y'/>
<arg type='^f' index='2' declared_type='float*' name='z'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getZEye' class_method='true'>
<retval type='f' declared_type='float'/>
</method>
<method selector='locate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='restore'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCenterX:centerY:centerZ:'>
<arg type='f' index='0' declared_type='float' name='x'/>
<arg type='f' index='1' declared_type='float' name='y'/>
<arg type='f' index='2' declared_type='float' name='z'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDirty:'>
<arg type='B' index='0' declared_type='BOOL' name='dirty'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEyeX:eyeY:eyeZ:'>
<arg type='f' index='0' declared_type='float' name='x'/>
<arg type='f' index='1' declared_type='float' name='y'/>
<arg type='f' index='2' declared_type='float' name='z'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUpX:upY:upZ:'>
<arg type='f' index='0' declared_type='float' name='x'/>
<arg type='f' index='1' declared_type='float' name='y'/>
<arg type='f' index='2' declared_type='float' name='z'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='upX:upY:upZ:'>
<arg type='^f' index='0' declared_type='float*' name='x'/>
<arg type='^f' index='1' declared_type='float*' name='y'/>
<arg type='^f' index='2' declared_type='float*' name='z'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCardinalSplineTo'>
<method selector='actionWithDuration:points:tension:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='@' index='1' declared_type='CCPointArray*' name='points'/>
<arg type='f' index='2' declared_type='CGFloat' name='tension'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:points:tension:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='@' index='1' declared_type='CCPointArray*' name='points'/>
<arg type='f' index='2' declared_type='CGFloat' name='tension'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='points'>
<retval type='@' declared_type='CCPointArray*'/>
</method>
<method selector='setPoints:'>
<arg type='@' index='0' declared_type='CCPointArray*' name='points'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCatmullRomBy'>
<method selector='actionWithDuration:points:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='dt'/>
<arg type='@' index='1' declared_type='CCPointArray*' name='points'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:points:'>
<arg type='f' index='0' declared_type='ccTime' name='dt'/>
<arg type='@' index='1' declared_type='CCPointArray*' name='points'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCatmullRomTo'>
<method selector='actionWithDuration:points:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='dt'/>
<arg type='@' index='1' declared_type='CCPointArray*' name='points'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:points:'>
<arg type='f' index='0' declared_type='ccTime' name='dt'/>
<arg type='@' index='1' declared_type='CCPointArray*' name='points'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCConfiguration'>
<method selector='OSVersion'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='checkForGLExtension:'>
<arg type='@' index='0' declared_type='NSString*' name='searchName'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='maxModelviewStackDepth'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='maxTextureSize'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='maxTextureUnits'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='sharedConfiguration' class_method='true'>
<retval type='@' declared_type='CCConfiguration*'/>
</method>
<method selector='supportsBGRA8888'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsDiscardFramebuffer'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsNPOT'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsPVRTC'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsShareableVAO'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCDeccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg type='@' index='0' declared_type='CCAction*' name='action'/>
<arg type='f' index='1' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:duration:'>
<arg type='@' index='0' declared_type='CCAction*' name='action'/>
<arg type='f' index='1' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg type='f' index='0' declared_type='float' name='rate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCDirector'>
<method selector='actionManager'>
<retval type='@' declared_type='CCActionManager*'/>
</method>
<method selector='animationInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='contentScaleFactor'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='convertToGL:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='p'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertToUI:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='p'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='createStatsLabel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='displayStats'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawScene'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableRetinaDisplay:'>
<arg type='B' index='0' declared_type='BOOL' name='enableRetina'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='end'>
<retval type='v' declared_type='void'/>
</method>
<method selector='getZEye'>
<retval type='f' declared_type='float'/>
</method>
<method selector='isAnimating'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPaused'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='nextDeltaTimeZero'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='notificationNode'>
<retval type='@' declared_type='id'/>
</method>
<method selector='openGLView'>
<retval type='@' declared_type='CCGLView*'/>
</method>
<method selector='pause'>
<retval type='v' declared_type='void'/>
</method>
<method selector='popScene'>
<retval type='v' declared_type='void'/>
</method>
<method selector='popToRootScene'>
<retval type='v' declared_type='void'/>
</method>
<method selector='projection'>
<retval type='i' declared_type='ccDirectorProjection'/>
</method>
<method selector='purgeCachedData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='pushScene:'>
<arg type='@' index='0' declared_type='CCScene*' name='scene'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceScene:'>
<arg type='@' index='0' declared_type='CCScene*' name='scene'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reshapeProjection:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='newWindowSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runWithScene:'>
<arg type='@' index='0' declared_type='CCScene*' name='scene'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runningScene'>
<retval type='@' declared_type='CCScene*'/>
</method>
<method selector='runningThread'>
<retval type='@' declared_type='NSThread*'/>
</method>
<method selector='scheduler'>
<retval type='@' declared_type='CCScheduler*'/>
</method>
<method selector='secondsPerFrame'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='sendCleanupToScene'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setActionManager:'>
<arg type='@' index='0' declared_type='CCActionManager*' name='actionManager'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlphaBlending:'>
<arg type='B' index='0' declared_type='BOOL' name='on'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnimationInterval:'>
<arg type='d' index='0' declared_type='NSTimeInterval' name='animationInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentScaleFactor:'>
<arg type='f' index='0' declared_type='CGFloat' name='scaleFactor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' index='0' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDepthTest:'>
<arg type='B' index='0' declared_type='BOOL' name='on'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFPS:'>
<arg type='B' index='0' declared_type='BOOL' name='display'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayStats:'>
<arg type='B' index='0' declared_type='BOOL' name='displayStats'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGLDefaultValues'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNextDeltaTimeZero:'>
<arg type='B' index='0' declared_type='BOOL' name='nextDeltaTimeZero'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotificationNode:'>
<arg type='@' index='0' declared_type='id' name='notificationNode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpenGLView:'>
<arg type='@' index='0' declared_type='CCGLView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProjection:'>
<arg type='i' index='0' declared_type='ccDirectorProjection' name='projection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScheduler:'>
<arg type='@' index='0' declared_type='CCScheduler*' name='scheduler'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTouchDispatcher:'>
<arg type='@' index='0' declared_type='CCTouchDispatcher*' name='touchDispatcher'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedDirector' class_method='true'>
<retval type='@' declared_type='CCDirector*'/>
</method>
<method selector='startAnimation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAnimation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='totalFrames'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='touchDispatcher'>
<retval type='@' declared_type='CCTouchDispatcher*'/>
</method>
<method selector='winSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='winSizeInPixels'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='CCDirectorDisplayLink'>
<method selector='mainLoop:'>
<arg type='@' index='0' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCES2Renderer'>
<method selector='colorRenderbuffer'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='context'>
<retval type='@' declared_type='EAGLContext*'/>
</method>
<method selector='defaultFramebuffer'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='msaaColorbuffer'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='msaaFramebuffer'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='resizeFromLayer:'>
<arg type='@' index='0' declared_type='CAEAGLLayer*' name='layer'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCEaseElastic'>
<method selector='actionWithAction:period:' class_method='true'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='action'/>
<arg type='f' index='1' declared_type='float' name='period'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:period:'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='action'/>
<arg type='f' index='1' declared_type='float' name='period'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='period'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setPeriod:'>
<arg type='f' index='0' declared_type='float' name='period'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseRateAction'>
<method selector='actionWithAction:rate:' class_method='true'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='action'/>
<arg type='f' index='1' declared_type='float' name='rate'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:rate:'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='action'/>
<arg type='f' index='1' declared_type='float' name='rate'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg type='f' index='0' declared_type='float' name='rate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFadeTo'>
<method selector='actionWithDuration:opacity:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='C' index='1' declared_type='GLubyte' name='opactiy'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:opacity:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='C' index='1' declared_type='GLubyte' name='opacity'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFileUtils'>
<method selector='bundle'>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='enableFallbackSuffixes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager'>
<retval type='@' declared_type='NSFileManager*'/>
</method>
<method selector='fullPathFromRelativePath:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='relPath'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fullPathFromRelativePath:'>
<arg type='@' index='0' declared_type='NSString*' name='relPath'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fullPathFromRelativePath:resolutionType:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='relPath'/>
<arg type='^i' index='1' declared_type='ccResolutionType*' name='resolutionType'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fullPathFromRelativePath:resolutionType:'>
<arg type='@' index='0' declared_type='NSString*' name='relPath'/>
<arg type='^i' index='1' declared_type='ccResolutionType*' name='resolutionType'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='iPadFileExistsAtPath:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPadFileExistsAtPath:'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPadRetinaDisplayFileExistsAtPath:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPadRetinaDisplayFileExistsAtPath:'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPadRetinaDisplaySuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='iPadSuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='iPhoneRetinaDisplayFileExistsAtPath:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPhoneRetinaDisplayFileExistsAtPath:'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPhoneRetinaDisplaySuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='purgeCachedEntries'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSuffixFromFile:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='path'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='removeSuffixFromFile:'>
<arg type='@' index='0' declared_type='NSString*' name='path'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setBundle:'>
<arg type='@' index='0' declared_type='NSBundle*' name='bundle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnableFallbackSuffixes:'>
<arg type='B' index='0' declared_type='BOOL' name='enableFallbackSuffixes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFileManager:'>
<arg type='@' index='0' declared_type='NSFileManager*' name='fileManager'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRetinaDisplaySuffix:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='suffix'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setiPadRetinaDisplaySuffix:'>
<arg type='@' index='0' declared_type='NSString*' name='iPadRetinaDisplaySuffix'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setiPadSuffix:'>
<arg type='@' index='0' declared_type='NSString*' name='iPadSuffix'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setiPhoneRetinaDisplaySuffix:'>
<arg type='@' index='0' declared_type='NSString*' name='iPhoneRetinaDisplaySuffix'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedFileUtils' class_method='true'>
<retval type='@' declared_type='CCFileUtils*'/>
</method>
</class>
<class name='CCFiniteTimeAction'>
<method selector='duration'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='reverse'>
<retval type='@' declared_type='CCFiniteTimeAction*'/>
</method>
<method selector='setDuration:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFlipX'>
<method selector='actionWithFlipX:' class_method='true'>
<arg type='B' index='0' declared_type='BOOL' name='x'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFlipX:'>
<arg type='B' index='0' declared_type='BOOL' name='x'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFlipX3D'>
<method selector='actionWithDuration:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:'>
<arg type='f' index='0' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFlipY'>
<method selector='actionWithFlipY:' class_method='true'>
<arg type='B' index='0' declared_type='BOOL' name='y'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFlipY:'>
<arg type='B' index='0' declared_type='BOOL' name='y'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFollow'>
<method selector='actionWithTarget:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='followedNode'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actionWithTarget:worldBoundary:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='followedNode'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='boundarySet'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithTarget:'>
<arg type='@' index='0' declared_type='CCNode*' name='followedNode'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:worldBoundary:'>
<arg type='@' index='0' declared_type='CCNode*' name='followedNode'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setBoundarySet:'>
<arg type='B' index='0' declared_type='BOOL' name='boundarySet'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCGLProgram'>
<method selector='addAttribute:index:'>
<arg type='@' index='0' declared_type='NSString*' name='attributeName'/>
<arg type='I' index='1' declared_type='GLuint' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fragmentShaderLog'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithVertexShaderByteArray:fragmentShaderByteArray:'>
<arg const='true' type='*' index='0' declared_type='GLchar*' name='vShaderByteArray'/>
<arg const='true' type='*' index='1' declared_type='GLchar*' name='fShaderByteArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithVertexShaderFilename:fragmentShaderFilename:'>
<arg type='@' index='0' declared_type='NSString*' name='vShaderFilename'/>
<arg type='@' index='1' declared_type='NSString*' name='fShaderFilename'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='link'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='programLog'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setUniformForModelViewProjectionMatrix'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:with2fv:count:'>
<arg type='I' index='0' declared_type='NSUInteger' name='location'/>
<arg type='^f' index='1' declared_type='GLfloat*' name='floats'/>
<arg type='I' index='2' declared_type='NSUInteger' name='numberOfArrays'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:with3fv:count:'>
<arg type='I' index='0' declared_type='NSUInteger' name='location'/>
<arg type='^f' index='1' declared_type='GLfloat*' name='floats'/>
<arg type='I' index='2' declared_type='NSUInteger' name='numberOfArrays'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:with4fv:count:'>
<arg type='I' index='0' declared_type='NSUInteger' name='location'/>
<arg type='^v' index='1' declared_type='GLvoid*' name='floats'/>
<arg type='I' index='2' declared_type='NSUInteger' name='numberOfArrays'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:'>
<arg type='I' index='0' declared_type='NSUInteger' name='location'/>
<arg type='f' index='1' declared_type='GLfloat' name='f1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:f2:'>
<arg type='I' index='0' declared_type='NSUInteger' name='location'/>
<arg type='f' index='1' declared_type='GLfloat' name='f1'/>
<arg type='f' index='2' declared_type='GLfloat' name='f2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:'>
<arg type='I' index='0' declared_type='NSUInteger' name='location'/>
<arg type='f' index='1' declared_type='GLfloat' name='f1'/>
<arg type='f' index='2' declared_type='GLfloat' name='f2'/>
<arg type='f' index='3' declared_type='GLfloat' name='f3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:f4:'>
<arg type='I' index='0' declared_type='NSUInteger' name='location'/>
<arg type='f' index='1' declared_type='GLfloat' name='f1'/>
<arg type='f' index='2' declared_type='GLfloat' name='f2'/>
<arg type='f' index='3' declared_type='GLfloat' name='f3'/>
<arg type='f' index='4' declared_type='GLfloat' name='f4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withI1:'>
<arg type='I' index='0' declared_type='NSUInteger' name='location'/>
<arg type='i' index='1' declared_type='GLint' name='i1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withMatrix4fv:count:'>
<arg type='I' index='0' declared_type='NSUInteger' name='location'/>
<arg type='^v' index='1' declared_type='GLvoid*' name='matrix_array'/>
<arg type='I' index='2' declared_type='NSUInteger' name='numberOfMatrix'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateUniforms'>
<retval type='v' declared_type='void'/>
</method>
<method selector='use'>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertexShaderLog'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CCGLView'>
<method selector='context'>
<retval type='@' declared_type='EAGLContext*'/>
</method>
<method selector='convertPointFromViewToSurface:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='point'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertRectFromViewToSurface:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='rect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='depthFormat'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='initWithFrame:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='frame'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrame:pixelFormat:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='frame'/>
<arg type='@' index='1' declared_type='NSString*' name='format'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrame:pixelFormat:depthFormat:preserveBackbuffer:sharegroup:multiSampling:numberOfSamples:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='frame'/>
<arg type='@' index='1' declared_type='NSString*' name='format'/>
<arg type='I' index='2' declared_type='GLuint' name='depth'/>
<arg type='B' index='3' declared_type='BOOL' name='retained'/>
<arg type='@' index='4' declared_type='EAGLSharegroup*' name='sharegroup'/>
<arg type='B' index='5' declared_type='BOOL' name='sampling'/>
<arg type='I' index='6' declared_type='unsigned int' name='nSamples'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lockOpenGLContext'>
<retval type='v' declared_type='void'/>
</method>
<method selector='multiSampling'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pixelFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setMultiSampling:'>
<arg type='B' index='0' declared_type='BOOL' name='multiSampling'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTouchDelegate:'>
<arg type='@' index='0' declared_type='id' name='touchDelegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='surfaceSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='swapBuffers'>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchDelegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='unlockOpenGLContext'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWithFrame:' class_method='true'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='frame'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='viewWithFrame:pixelFormat:' class_method='true'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='frame'/>
<arg type='@' index='1' declared_type='NSString*' name='format'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='viewWithFrame:pixelFormat:depthFormat:' class_method='true'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='frame'/>
<arg type='@' index='1' declared_type='NSString*' name='format'/>
<arg type='I' index='2' declared_type='GLuint' name='depth'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='viewWithFrame:pixelFormat:depthFormat:preserveBackbuffer:sharegroup:multiSampling:numberOfSamples:' class_method='true'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='frame'/>
<arg type='@' index='1' declared_type='NSString*' name='format'/>
<arg type='I' index='2' declared_type='GLuint' name='depth'/>
<arg type='B' index='3' declared_type='BOOL' name='retained'/>
<arg type='@' index='4' declared_type='EAGLSharegroup*' name='sharegroup'/>
<arg type='B' index='5' declared_type='BOOL' name='multisampling'/>
<arg type='I' index='6' declared_type='unsigned int' name='samples'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCGrabber'>
<method selector='afterRender:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beforeRender:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='grab:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCGrid3D'>
<method selector='originalVertex:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='pos'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
<method selector='setVertex:vertex:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='pos'/>
<arg type='{_ccVertex3F=fff}' index='1' declared_type='ccVertex3F' name='vertex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertex:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='pos'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
</class>
<class name='CCGrid3DAction'>
<method selector='originalVertex:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='pos'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
<method selector='setVertex:vertex:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='pos'/>
<arg type='{_ccVertex3F=fff}' index='1' declared_type='ccVertex3F' name='vertex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertex:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='pos'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
</class>
<class name='CCGridAction'>
<method selector='actionWithSize:duration:' class_method='true'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='size'/>
<arg type='f' index='1' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='grid'>
<retval type='@' declared_type='CCGridBase*'/>
</method>
<method selector='gridSize'>
<retval type='{_ccGridSize=ii}' declared_type='ccGridSize'/>
</method>
<method selector='initWithSize:duration:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='1' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setGridSize:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='gridSize'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCGridBase'>
<method selector='active'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='afterDraw:'>
<arg type='@' index='0' declared_type='CCNode*' name='target'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beforeDraw'>
<retval type='v' declared_type='void'/>
</method>
<method selector='blit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='calculateVertexPoints'>
<retval type='v' declared_type='void'/>
</method>
<method selector='grabber'>
<retval type='@' declared_type='CCGrabber*'/>
</method>
<method selector='gridSize'>
<retval type='{_ccGridSize=ii}' declared_type='ccGridSize'/>
</method>
<method selector='gridWithSize:' class_method='true'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='gridSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='gridWithSize:texture:flippedTexture:' class_method='true'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='gridSize'/>
<arg type='@' index='1' declared_type='CCTexture2D*' name='texture'/>
<arg type='B' index='2' declared_type='BOOL' name='flipped'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSize:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='gridSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSize:texture:flippedTexture:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='gridSize'/>
<arg type='@' index='1' declared_type='CCTexture2D*' name='texture'/>
<arg type='B' index='2' declared_type='BOOL' name='flipped'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isTextureFlipped'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reuse'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reuseGrid'>
<retval type='i' declared_type='int'/>
</method>
<method selector='setActive:'>
<arg type='B' index='0' declared_type='BOOL' name='active'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGrabber:'>
<arg type='@' index='0' declared_type='CCGrabber*' name='grabber'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsTextureFlipped:'>
<arg type='B' index='0' declared_type='BOOL' name='isTextureFlipped'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReuseGrid:'>
<arg type='i' index='0' declared_type='int' name='reuseGrid'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShaderProgram:'>
<arg type='@' index='0' declared_type='CCGLProgram*' name='shaderProgram'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStep:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='step'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shaderProgram'>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='step'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
</class>
<class name='CCJumpBy'>
<method selector='actionWithDuration:position:height:jumps:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='{CGPoint=ff}' index='1' declared_type='CGPoint' name='position'/>
<arg type='f' index='2' declared_type='ccTime' name='height'/>
<arg type='I' index='3' declared_type='NSUInteger' name='jumps'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:position:height:jumps:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='{CGPoint=ff}' index='1' declared_type='CGPoint' name='position'/>
<arg type='f' index='2' declared_type='ccTime' name='height'/>
<arg type='I' index='3' declared_type='NSUInteger' name='jumps'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCJumpTiles3D'>
<method selector='actionWithJumps:amplitude:grid:duration:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='j'/>
<arg type='f' index='1' declared_type='float' name='amp'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithJumps:amplitude:grid:duration:'>
<arg type='i' index='0' declared_type='int' name='j'/>
<arg type='f' index='1' declared_type='float' name='amp'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg type='f' index='0' declared_type='float' name='amplitude'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg type='f' index='0' declared_type='float' name='amplitudeRate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLabelAtlas'>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='NSString*' name='charmapfile'/>
<arg type='I' index='2' declared_type='NSUInteger' name='w'/>
<arg type='I' index='3' declared_type='NSUInteger' name='h'/>
<arg type='I' index='4' declared_type='NSUInteger' name='firstElement'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fntFile:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='NSString*' name='fontFile'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:charMapFile:itemWidth:itemHeight:startCharMap:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='NSString*' name='charmapfile'/>
<arg type='I' index='2' declared_type='NSUInteger' name='w'/>
<arg type='I' index='3' declared_type='NSUInteger' name='h'/>
<arg type='I' index='4' declared_type='NSUInteger' name='firstElement'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:fntFile:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='NSString*' name='fontFile'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCLabelBMFont'>
<method selector='alignment'>
<retval type='i' declared_type='CCTextAlignment'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='createFontChars'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fntFile'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithString:fntFile:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='NSString*' name='fntFile'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fntFile:width:alignment:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='NSString*' name='fntFile'/>
<arg type='f' index='2' declared_type='float' name='width'/>
<arg type='i' index='3' declared_type='CCTextAlignment' name='alignment'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fntFile:width:alignment:imageOffset:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='NSString*' name='fntFile'/>
<arg type='f' index='2' declared_type='float' name='width'/>
<arg type='i' index='3' declared_type='CCTextAlignment' name='alignment'/>
<arg type='{CGPoint=ff}' index='4' declared_type='CGPoint' name='offset'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:fntFile:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='NSString*' name='fntFile'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:fntFile:width:alignment:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='NSString*' name='fntFile'/>
<arg type='f' index='2' declared_type='float' name='width'/>
<arg type='i' index='3' declared_type='CCTextAlignment' name='alignment'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:fntFile:width:alignment:imageOffset:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='NSString*' name='fntFile'/>
<arg type='f' index='2' declared_type='float' name='width'/>
<arg type='i' index='3' declared_type='CCTextAlignment' name='alignment'/>
<arg type='{CGPoint=ff}' index='4' declared_type='CGPoint' name='offset'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='purgeCachedData' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlignment:'>
<arg type='i' index='0' declared_type='CCTextAlignment' name='alignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg type='{_ccColor3B=CCC}' index='0' declared_type='ccColor3B' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFntFile:'>
<arg type='@' index='0' declared_type='NSString*' name='fntFile'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg type='C' index='0' declared_type='GLubyte' name='opacity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidth:'>
<arg type='f' index='0' declared_type='float' name='width'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLabelTTF'>
<method selector='dimensions'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontSize'>
<retval type='f' declared_type='float'/>
</method>
<method selector='horizontalAlignment'>
<retval type='i' declared_type='CCTextAlignment'/>
</method>
<method selector='initWithString:dimensions:alignment:fontName:fontSize:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='@' index='3' declared_type='NSString*' name='name'/>
<arg type='f' index='4' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:alignment:lineBreakMode:fontName:fontSize:'>
<arg type='@' index='0' declared_type='NSString*' name='str'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='i' index='3' declared_type='CCLineBreakMode' name='lineBreakMode'/>
<arg type='@' index='4' declared_type='NSString*' name='name'/>
<arg type='f' index='5' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:fontName:fontSize:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='@' index='3' declared_type='NSString*' name='name'/>
<arg type='f' index='4' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:lineBreakMode:fontName:fontSize:'>
<arg type='@' index='0' declared_type='NSString*' name='str'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='i' index='3' declared_type='CCLineBreakMode' name='lineBreakMode'/>
<arg type='@' index='4' declared_type='NSString*' name='name'/>
<arg type='f' index='5' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='i' index='3' declared_type='CCVerticalTextAlignment' name='vertAlignment'/>
<arg type='@' index='4' declared_type='NSString*' name='name'/>
<arg type='f' index='5' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:'>
<arg type='@' index='0' declared_type='NSString*' name='str'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='i' index='3' declared_type='CCVerticalTextAlignment' name='vAlignment'/>
<arg type='i' index='4' declared_type='CCLineBreakMode' name='lineBreakMode'/>
<arg type='@' index='5' declared_type='NSString*' name='name'/>
<arg type='f' index='6' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='NSString*' name='name'/>
<arg type='f' index='2' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:dimensions:alignment:fontName:fontSize:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='@' index='3' declared_type='NSString*' name='name'/>
<arg type='f' index='4' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:dimensions:alignment:lineBreakMode:fontName:fontSize:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='i' index='3' declared_type='CCLineBreakMode' name='lineBreakMode'/>
<arg type='@' index='4' declared_type='NSString*' name='name'/>
<arg type='f' index='5' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:fontName:fontSize:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='@' index='3' declared_type='NSString*' name='name'/>
<arg type='f' index='4' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:lineBreakMode:fontName:fontSize:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='i' index='3' declared_type='CCLineBreakMode' name='lineBreakMode'/>
<arg type='@' index='4' declared_type='NSString*' name='name'/>
<arg type='f' index='5' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='i' index='3' declared_type='CCVerticalTextAlignment' name='vertAlignment'/>
<arg type='@' index='4' declared_type='NSString*' name='name'/>
<arg type='f' index='5' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='i' index='3' declared_type='CCVerticalTextAlignment' name='vertAlignment'/>
<arg type='i' index='4' declared_type='CCLineBreakMode' name='lineBreakMode'/>
<arg type='@' index='5' declared_type='NSString*' name='name'/>
<arg type='f' index='6' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:fontName:fontSize:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='NSString*' name='name'/>
<arg type='f' index='2' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDimensions:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='dimensions'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontName:'>
<arg type='@' index='0' declared_type='NSString*' name='fontName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontSize:'>
<arg type='f' index='0' declared_type='float' name='fontSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHorizontalAlignment:'>
<arg type='i' index='0' declared_type='CCTextAlignment' name='horizontalAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg type='@' index='0' declared_type='NSString*' name='str'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalAlignment:'>
<arg type='i' index='0' declared_type='CCVerticalTextAlignment' name='verticalAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='verticalAlignment'>
<retval type='i' declared_type='CCVerticalTextAlignment'/>
</method>
</class>
<class name='CCLayer'>
<method selector='isAccelerometerEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTouchEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='registerWithTouchDispatcher'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsAccelerometerEnabled:'>
<arg type='B' index='0' declared_type='BOOL' name='isAccelerometerEnabled'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsTouchEnabled:'>
<arg type='B' index='0' declared_type='BOOL' name='isTouchEnabled'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLayerColor'>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='changeHeight:'>
<arg type='f' index='0' declared_type='GLfloat' name='h'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeWidth:'>
<arg type='f' index='0' declared_type='GLfloat' name='w'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeWidth:height:'>
<arg type='f' index='0' declared_type='GLfloat' name='w'/>
<arg type='f' index='1' declared_type='GLfloat' name='h'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithColor:'>
<arg type='{_ccColor4B=CCCC}' index='0' declared_type='ccColor4B' name='color'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithColor:width:height:'>
<arg type='{_ccColor4B=CCCC}' index='0' declared_type='ccColor4B' name='color'/>
<arg type='f' index='1' declared_type='GLfloat' name='w'/>
<arg type='f' index='2' declared_type='GLfloat' name='h'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerWithColor:' class_method='true'>
<arg type='{_ccColor4B=CCCC}' index='0' declared_type='ccColor4B' name='color'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerWithColor:width:height:' class_method='true'>
<arg type='{_ccColor4B=CCCC}' index='0' declared_type='ccColor4B' name='color'/>
<arg type='f' index='1' declared_type='GLfloat' name='w'/>
<arg type='f' index='2' declared_type='GLfloat' name='h'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='setBlendFunc:'>
<arg type='{_ccBlendFunc=II}' index='0' declared_type='ccBlendFunc' name='blendFunc'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLayerGradient'>
<method selector='compressedInterpolation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='endColor'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='endOpacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='initWithColor:fadingTo:'>
<arg type='{_ccColor4B=CCCC}' index='0' declared_type='ccColor4B' name='start'/>
<arg type='{_ccColor4B=CCCC}' index='1' declared_type='ccColor4B' name='end'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithColor:fadingTo:alongVector:'>
<arg type='{_ccColor4B=CCCC}' index='0' declared_type='ccColor4B' name='start'/>
<arg type='{_ccColor4B=CCCC}' index='1' declared_type='ccColor4B' name='end'/>
<arg type='{CGPoint=ff}' index='2' declared_type='CGPoint' name='v'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerWithColor:fadingTo:' class_method='true'>
<arg type='{_ccColor4B=CCCC}' index='0' declared_type='ccColor4B' name='start'/>
<arg type='{_ccColor4B=CCCC}' index='1' declared_type='ccColor4B' name='end'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerWithColor:fadingTo:alongVector:' class_method='true'>
<arg type='{_ccColor4B=CCCC}' index='0' declared_type='ccColor4B' name='start'/>
<arg type='{_ccColor4B=CCCC}' index='1' declared_type='ccColor4B' name='end'/>
<arg type='{CGPoint=ff}' index='2' declared_type='CGPoint' name='v'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCompressedInterpolation:'>
<arg type='B' index='0' declared_type='BOOL' name='compressedInterpolation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndColor:'>
<arg type='{_ccColor3B=CCC}' index='0' declared_type='ccColor3B' name='endColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndOpacity:'>
<arg type='C' index='0' declared_type='GLubyte' name='endOpacity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartColor:'>
<arg type='{_ccColor3B=CCC}' index='0' declared_type='ccColor3B' name='startColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartOpacity:'>
<arg type='C' index='0' declared_type='GLubyte' name='startOpacity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVector:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='vector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startColor'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='startOpacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='vector'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
</class>
<class name='CCLayerMultiplex'>
<method selector='initWithLayers:vaList:'>
<arg type='@' index='0' declared_type='CCLayer*' name='layer'/>
<arg type='*' index='1' declared_type='va_list' name='params'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerWithLayers:' sentinel='0' class_method='true' variadic='true'>
<arg type='@' index='0' declared_type='CCLayer*' name='layer'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='switchTo:'>
<arg type='I' index='0' declared_type='unsigned int' name='n'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='switchToAndReleaseMe:'>
<arg type='I' index='0' declared_type='unsigned int' name='n'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLens3D'>
<method selector='actionWithPosition:radius:grid:duration:' class_method='true'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='pos'/>
<arg type='f' index='1' declared_type='float' name='r'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPosition:radius:grid:duration:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='pos'/>
<arg type='f' index='1' declared_type='float' name='r'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lensEffect'>
<retval type='f' declared_type='float'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setLensEffect:'>
<arg type='f' index='0' declared_type='float' name='lensEffect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='position'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLiquid'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='wav'/>
<arg type='f' index='1' declared_type='float' name='amp'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg type='i' index='0' declared_type='int' name='wav'/>
<arg type='f' index='1' declared_type='float' name='amp'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg type='f' index='0' declared_type='float' name='amplitude'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg type='f' index='0' declared_type='float' name='amplitudeRate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenu'>
<method selector='alignItemsHorizontally'>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsHorizontallyWithPadding:'>
<arg type='f' index='0' declared_type='float' name='padding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsInColumns:' sentinel='0' variadic='true'>
<arg type='@' index='0' declared_type='NSNumber*' name='columns'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsInColumns:vaList:'>
<arg type='@' index='0' declared_type='NSNumber*' name='columns'/>
<arg type='*' index='1' declared_type='va_list' name='args'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsInRows:' sentinel='0' variadic='true'>
<arg type='@' index='0' declared_type='NSNumber*' name='rows'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsInRows:vaList:'>
<arg type='@' index='0' declared_type='NSNumber*' name='rows'/>
<arg type='*' index='1' declared_type='va_list' name='args'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsVertically'>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsVerticallyWithPadding:'>
<arg type='f' index='0' declared_type='float' name='padding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='enabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithArray:'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfItems'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithItems:vaList:'>
<arg type='@' index='0' declared_type='CCMenuItem*' name='item'/>
<arg type='*' index='1' declared_type='va_list' name='args'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='menuWithArray:' class_method='true'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfItems'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='menuWithItems:' sentinel='0' class_method='true' variadic='true'>
<arg type='@' index='0' declared_type='CCMenuItem*' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='setEnabled:'>
<arg type='B' index='0' declared_type='BOOL' name='enabled'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHandlerPriority:'>
<arg type='i' index='0' declared_type='NSInteger' name='newPriority'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItem'>
<method selector='activate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='cleanup'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:'>
<arg type='@?' index='0' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<arg type=':' index='1' declared_type='SEL' name='selector'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelected'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='itemWithBlock:' class_method='true'>
<arg type='@?' index='0' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithTarget:selector:' class_method='true'>
<arg type='@' index='0' declared_type='id' name='target'/>
<arg type=':' index='1' declared_type='SEL' name='selector'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='selected'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlock:'>
<arg type='@?' index='0' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsEnabled:'>
<arg type='B' index='0' declared_type='BOOL' name='enabled'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:selector:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<arg type=':' index='1' declared_type='SEL' name='selector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unselected'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemAtlasFont'>
<method selector='initFromString:charMapFile:itemWidth:itemHeight:startCharMap:block:'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='charMapFile'/>
<arg type='i' index='2' declared_type='int' name='itemWidth'/>
<arg type='i' index='3' declared_type='int' name='itemHeight'/>
<arg type='c' index='4' declared_type='char' name='startCharMap'/>
<arg type='@?' index='5' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFromString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='charMapFile'/>
<arg type='i' index='2' declared_type='int' name='itemWidth'/>
<arg type='i' index='3' declared_type='int' name='itemHeight'/>
<arg type='c' index='4' declared_type='char' name='startCharMap'/>
<arg type='@' index='5' declared_type='id' name='rec'/>
<arg type=':' index='6' declared_type='SEL' name='cb'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='charMapFile'/>
<arg type='i' index='2' declared_type='int' name='itemWidth'/>
<arg type='i' index='3' declared_type='int' name='itemHeight'/>
<arg type='c' index='4' declared_type='char' name='startCharMap'/>
<arg type='@?' index='5' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='charMapFile'/>
<arg type='i' index='2' declared_type='int' name='itemWidth'/>
<arg type='i' index='3' declared_type='int' name='itemHeight'/>
<arg type='c' index='4' declared_type='char' name='startCharMap'/>
<arg type='@' index='5' declared_type='id' name='target'/>
<arg type=':' index='6' declared_type='SEL' name='selector'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromString:charMapFile:itemWidth:itemHeight:startCharMap:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='charMapFile'/>
<arg type='i' index='2' declared_type='int' name='itemWidth'/>
<arg type='i' index='3' declared_type='int' name='itemHeight'/>
<arg type='c' index='4' declared_type='char' name='startCharMap'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromString:charMapFile:itemWidth:itemHeight:startCharMap:block:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='charMapFile'/>
<arg type='i' index='2' declared_type='int' name='itemWidth'/>
<arg type='i' index='3' declared_type='int' name='itemHeight'/>
<arg type='c' index='4' declared_type='char' name='startCharMap'/>
<arg type='@?' index='5' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='charMapFile'/>
<arg type='i' index='2' declared_type='int' name='itemWidth'/>
<arg type='i' index='3' declared_type='int' name='itemHeight'/>
<arg type='c' index='4' declared_type='char' name='startCharMap'/>
<arg type='@' index='5' declared_type='id' name='rec'/>
<arg type=':' index='6' declared_type='SEL' name='cb'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='charMapFile'/>
<arg type='i' index='2' declared_type='int' name='itemWidth'/>
<arg type='i' index='3' declared_type='int' name='itemHeight'/>
<arg type='c' index='4' declared_type='char' name='startCharMap'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='charMapFile'/>
<arg type='i' index='2' declared_type='int' name='itemWidth'/>
<arg type='i' index='3' declared_type='int' name='itemHeight'/>
<arg type='c' index='4' declared_type='char' name='startCharMap'/>
<arg type='@?' index='5' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='charMapFile'/>
<arg type='i' index='2' declared_type='int' name='itemWidth'/>
<arg type='i' index='3' declared_type='int' name='itemHeight'/>
<arg type='c' index='4' declared_type='char' name='startCharMap'/>
<arg type='@' index='5' declared_type='id' name='target'/>
<arg type=':' index='6' declared_type='SEL' name='selector'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCMenuItemFont'>
<method selector='fontName' class_method='true'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontSize' class_method='true'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='fontSize'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='initFromString:block:'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@?' index='1' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFromString:target:selector:'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='id' name='r'/>
<arg type=':' index='2' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:block:'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@?' index='1' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:target:selector:'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='id' name='r'/>
<arg type=':' index='2' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromString:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromString:block:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@?' index='1' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromString:target:selector:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='id' name='r'/>
<arg type=':' index='2' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithString:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithString:block:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@?' index='1' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithString:target:selector:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='id' name='r'/>
<arg type=':' index='2' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setFontName:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='n'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontName:'>
<arg type='@' index='0' declared_type='NSString*' name='n'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontSize:' class_method='true'>
<arg type='I' index='0' declared_type='NSUInteger' name='s'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontSize:'>
<arg type='I' index='0' declared_type='NSUInteger' name='s'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemImage'>
<method selector='initFromNormalImage:selectedImage:disabledImage:block:'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<arg type='@' index='2' declared_type='NSString*' name='value3'/>
<arg type='@?' index='3' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFromNormalImage:selectedImage:disabledImage:target:selector:'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<arg type='@' index='2' declared_type='NSString*' name='value3'/>
<arg type='@' index='3' declared_type='id' name='r'/>
<arg type=':' index='4' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNormalImage:selectedImage:disabledImage:block:'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<arg type='@' index='2' declared_type='NSString*' name='value3'/>
<arg type='@?' index='3' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNormalImage:selectedImage:disabledImage:target:selector:'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<arg type='@' index='2' declared_type='NSString*' name='value3'/>
<arg type='@' index='3' declared_type='id' name='r'/>
<arg type=':' index='4' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromNormalImage:selectedImage:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromNormalImage:selectedImage:block:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<arg type='@?' index='2' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromNormalImage:selectedImage:disabledImage:block:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<arg type='@' index='2' declared_type='NSString*' name='value3'/>
<arg type='@?' index='3' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromNormalImage:selectedImage:disabledImage:target:selector:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<arg type='@' index='2' declared_type='NSString*' name='value3'/>
<arg type='@' index='3' declared_type='id' name='r'/>
<arg type=':' index='4' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromNormalImage:selectedImage:target:selector:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<arg type='@' index='2' declared_type='id' name='r'/>
<arg type=':' index='3' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalImage:selectedImage:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalImage:selectedImage:block:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<arg type='@?' index='2' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalImage:selectedImage:disabledImage:block:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<arg type='@' index='2' declared_type='NSString*' name='value3'/>
<arg type='@?' index='3' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalImage:selectedImage:disabledImage:target:selector:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<arg type='@' index='2' declared_type='NSString*' name='value3'/>
<arg type='@' index='3' declared_type='id' name='r'/>
<arg type=':' index='4' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalImage:selectedImage:target:selector:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='value'/>
<arg type='@' index='1' declared_type='NSString*' name='value2'/>
<arg type='@' index='2' declared_type='id' name='r'/>
<arg type=':' index='3' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDisabledSpriteFrame:'>
<arg type='@' index='0' declared_type='CCSpriteFrame*' name='frame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNormalSpriteFrame:'>
<arg type='@' index='0' declared_type='CCSpriteFrame*' name='frame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedSpriteFrame:'>
<arg type='@' index='0' declared_type='CCSpriteFrame*' name='frame'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemLabel'>
<method selector='disabledColor'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithLabel:block:'>
<arg type='@' index='0' declared_type='CCNode*' name='label'/>
<arg type='@?' index='1' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLabel:target:selector:'>
<arg type='@' index='0' declared_type='CCNode*' name='label'/>
<arg type='@' index='1' declared_type='id' name='target'/>
<arg type=':' index='2' declared_type='SEL' name='selector'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithLabel:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='label'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithLabel:block:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='label'/>
<arg type='@?' index='1' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithLabel:target:selector:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='label'/>
<arg type='@' index='1' declared_type='id' name='target'/>
<arg type=':' index='2' declared_type='SEL' name='selector'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='label'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='setDisabledColor:'>
<arg type='{_ccColor3B=CCC}' index='0' declared_type='ccColor3B' name='disabledColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsEnabled:'>
<arg type='B' index='0' declared_type='BOOL' name='enabled'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabel:'>
<arg type='@' index='0' declared_type='CCNode*' name='label'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg type='@' index='0' declared_type='NSString*' name='label'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemSprite'>
<method selector='disabledImage'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='initFromNormalSprite:selectedSprite:disabledSprite:block:'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<arg type='@' index='2' declared_type='CCNode*' name='disabledSprite'/>
<arg type='@?' index='3' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFromNormalSprite:selectedSprite:disabledSprite:target:selector:'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<arg type='@' index='2' declared_type='CCNode*' name='disabledSprite'/>
<arg type='@' index='3' declared_type='id' name='target'/>
<arg type=':' index='4' declared_type='SEL' name='selector'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:block:'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<arg type='@' index='2' declared_type='CCNode*' name='disabledSprite'/>
<arg type='@?' index='3' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:target:selector:'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<arg type='@' index='2' declared_type='CCNode*' name='disabledSprite'/>
<arg type='@' index='3' declared_type='id' name='target'/>
<arg type=':' index='4' declared_type='SEL' name='selector'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromNormalSprite:selectedSprite:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromNormalSprite:selectedSprite:block:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<arg type='@?' index='2' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromNormalSprite:selectedSprite:disabledSprite:block:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<arg type='@' index='2' declared_type='CCNode*' name='disabledSprite'/>
<arg type='@?' index='3' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromNormalSprite:selectedSprite:disabledSprite:target:selector:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<arg type='@' index='2' declared_type='CCNode*' name='disabledSprite'/>
<arg type='@' index='3' declared_type='id' name='target'/>
<arg type=':' index='4' declared_type='SEL' name='selector'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemFromNormalSprite:selectedSprite:target:selector:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<arg type='@' index='2' declared_type='id' name='target'/>
<arg type=':' index='3' declared_type='SEL' name='selector'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:block:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<arg type='@?' index='2' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:disabledSprite:block:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<arg type='@' index='2' declared_type='CCNode*' name='disabledSprite'/>
<arg type='@?' index='3' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:disabledSprite:target:selector:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<arg type='@' index='2' declared_type='CCNode*' name='disabledSprite'/>
<arg type='@' index='3' declared_type='id' name='target'/>
<arg type=':' index='4' declared_type='SEL' name='selector'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:target:selector:' class_method='true'>
<arg type='@' index='0' declared_type='CCNode*' name='normalSprite'/>
<arg type='@' index='1' declared_type='CCNode*' name='selectedSprite'/>
<arg type='@' index='2' declared_type='id' name='target'/>
<arg type=':' index='3' declared_type='SEL' name='selector'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='normalImage'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='selectedImage'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='setDisabledImage:'>
<arg type='@' index='0' declared_type='CCNode*' name='disabledImage'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNormalImage:'>
<arg type='@' index='0' declared_type='CCNode*' name='normalImage'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedImage:'>
<arg type='@' index='0' declared_type='CCNode*' name='selectedImage'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemToggle'>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithItems:block:'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfItems'/>
<arg type='@?' index='1' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:items:vaList:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<arg type=':' index='1' declared_type='SEL' name='selector'/>
<arg type='@' index='2' declared_type='CCMenuItem*' name='item'/>
<arg type='*' index='3' declared_type='va_list' name='args'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithItems:block:' class_method='true'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfItems'/>
<arg type='@?' index='1' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithTarget:selector:items:' sentinel='0' class_method='true' variadic='true'>
<arg type='@' index='0' declared_type='id' name='target'/>
<arg type=':' index='1' declared_type='SEL' name='selector'/>
<arg type='@' index='2' declared_type='CCMenuItem*' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='selectedIndex'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='selectedItem'>
<retval type='@' declared_type='CCMenuItem*'/>
</method>
<method selector='setSelectedIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='selectedIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubItems:'>
<arg type='@' index='0' declared_type='NSMutableArray*' name='subItems'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='subItems'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
</class>
<class name='CCMotionStreak'>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='initWithFade:minSeg:width:color:texture:'>
<arg type='f' index='0' declared_type='float' name='fade'/>
<arg type='f' index='1' declared_type='float' name='minSeg'/>
<arg type='f' index='2' declared_type='float' name='stroke'/>
<arg type='{_ccColor3B=CCC}' index='3' declared_type='ccColor3B' name='color'/>
<arg type='@' index='4' declared_type='CCTexture2D*' name='texture'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFade:minSeg:width:color:textureFilename:'>
<arg type='f' index='0' declared_type='float' name='fade'/>
<arg type='f' index='1' declared_type='float' name='minSeg'/>
<arg type='f' index='2' declared_type='float' name='stroke'/>
<arg type='{_ccColor3B=CCC}' index='3' declared_type='ccColor3B' name='color'/>
<arg type='@' index='4' declared_type='NSString*' name='path'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFastMode'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reset'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg type='{_ccBlendFunc=II}' index='0' declared_type='ccBlendFunc' name='blendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFastMode:'>
<arg type='B' index='0' declared_type='BOOL' name='fastMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='streakWithFade:minSeg:width:color:texture:' class_method='true'>
<arg type='f' index='0' declared_type='float' name='fade'/>
<arg type='f' index='1' declared_type='float' name='minSeg'/>
<arg type='f' index='2' declared_type='float' name='stroke'/>
<arg type='{_ccColor3B=CCC}' index='3' declared_type='ccColor3B' name='color'/>
<arg type='@' index='4' declared_type='CCTexture2D*' name='texture'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='streakWithFade:minSeg:width:color:textureFilename:' class_method='true'>
<arg type='f' index='0' declared_type='float' name='fade'/>
<arg type='f' index='1' declared_type='float' name='minSeg'/>
<arg type='f' index='2' declared_type='float' name='stroke'/>
<arg type='{_ccColor3B=CCC}' index='3' declared_type='ccColor3B' name='color'/>
<arg type='@' index='4' declared_type='NSString*' name='path'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='tintWithColor:'>
<arg type='{_ccColor3B=CCC}' index='0' declared_type='ccColor3B' name='colors'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMoveBy'>
<method selector='actionWithDuration:position:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='{CGPoint=ff}' index='1' declared_type='CGPoint' name='deltaPosition'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:position:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='{CGPoint=ff}' index='1' declared_type='CGPoint' name='deltaPosition'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCMoveTo'>
<method selector='actionWithDuration:position:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='{CGPoint=ff}' index='1' declared_type='CGPoint' name='position'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:position:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='{CGPoint=ff}' index='1' declared_type='CGPoint' name='position'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCNode'>
<method selector='actionManager'>
<retval type='@' declared_type='CCActionManager*'/>
</method>
<method selector='addChild:'>
<arg type='@' index='0' declared_type='CCNode*' name='node'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addChild:z:'>
<arg type='@' index='0' declared_type='CCNode*' name='node'/>
<arg type='i' index='1' declared_type='NSInteger' name='z'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addChild:z:tag:'>
<arg type='@' index='0' declared_type='CCNode*' name='node'/>
<arg type='i' index='1' declared_type='NSInteger' name='z'/>
<arg type='i' index='2' declared_type='NSInteger' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='anchorPoint'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='anchorPointInPoints'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='boundingBox'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='camera'>
<retval type='@' declared_type='CCCamera*'/>
</method>
<method selector='children'>
<retval type='@' declared_type='CCArray*'/>
</method>
<method selector='cleanup'>
<retval type='v' declared_type='void'/>
</method>
<method selector='contentSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='convertToNodeSpace:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='worldPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertToNodeSpaceAR:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='worldPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertToWorldSpace:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='nodePoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertToWorldSpaceAR:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='nodePoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertTouchToNodeSpace:'>
<arg type='@' index='0' declared_type='UITouch*' name='touch'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertTouchToNodeSpaceAR:'>
<arg type='@' index='0' declared_type='UITouch*' name='touch'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='draw'>
<retval type='v' declared_type='void'/>
</method>
<method selector='getActionByTag:'>
<arg type='i' index='0' declared_type='NSInteger' name='tag'/>
<retval type='@' declared_type='CCAction*'/>
</method>
<method selector='getChildByTag:'>
<arg type='i' index='0' declared_type='NSInteger' name='tag'/>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='glServerState'>
<retval type='i' declared_type='ccGLServerState'/>
</method>
<method selector='grid'>
<retval type='@' declared_type='CCGridBase*'/>
</method>
<method selector='ignoreAnchorPointForPosition'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isRelativeAnchorPoint'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRunning'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='node' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='nodeToParentTransform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='nodeToWorldTransform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='numberOfRunningActions'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='onEnter'>
<retval type='v' declared_type='void'/>
</method>
<method selector='onEnterTransitionDidFinish'>
<retval type='v' declared_type='void'/>
</method>
<method selector='onExit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='onExitTransitionDidStart'>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderOfArrival'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='parent'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='parentToNodeTransform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='pauseSchedulerAndActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='removeAllChildrenWithCleanup:'>
<arg type='B' index='0' declared_type='BOOL' name='cleanup'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChild:cleanup:'>
<arg type='@' index='0' declared_type='CCNode*' name='node'/>
<arg type='B' index='1' declared_type='BOOL' name='cleanup'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChildByTag:cleanup:'>
<arg type='i' index='0' declared_type='NSInteger' name='tag'/>
<arg type='B' index='1' declared_type='BOOL' name='cleanup'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFromParentAndCleanup:'>
<arg type='B' index='0' declared_type='BOOL' name='cleanup'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reorderChild:z:'>
<arg type='@' index='0' declared_type='CCNode*' name='child'/>
<arg type='i' index='1' declared_type='NSInteger' name='zOrder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeSchedulerAndActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotation'>
<retval type='f' declared_type='float'/>
</method>
<method selector='runAction:'>
<arg type='@' index='0' declared_type='CCAction*' name='action'/>
<retval type='@' declared_type='CCAction*'/>
</method>
<method selector='scale'>
<retval type='f' declared_type='float'/>
</method>
<method selector='scaleX'>
<retval type='f' declared_type='float'/>
</method>
<method selector='scaleY'>
<retval type='f' declared_type='float'/>
</method>
<method selector='schedule:'>
<arg type=':' index='0' declared_type='SEL' name='s'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='schedule:interval:'>
<arg type=':' index='0' declared_type='SEL' name='s'/>
<arg type='f' index='1' declared_type='ccTime' name='seconds'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='schedule:interval:repeat:delay:'>
<arg type=':' index='0' declared_type='SEL' name='selector'/>
<arg type='f' index='1' declared_type='ccTime' name='interval'/>
<arg type='I' index='2' declared_type='uint' name='repeat'/>
<arg type='f' index='3' declared_type='ccTime' name='delay'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleOnce:delay:'>
<arg type=':' index='0' declared_type='SEL' name='selector'/>
<arg type='f' index='1' declared_type='ccTime' name='delay'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleUpdate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleUpdateWithPriority:'>
<arg type='i' index='0' declared_type='NSInteger' name='priority'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduler'>
<retval type='@' declared_type='CCScheduler*'/>
</method>
<method selector='setActionManager:'>
<arg type='@' index='0' declared_type='CCActionManager*' name='actionManager'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnchorPoint:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='anchorPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentSize:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='contentSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGlServerState:'>
<arg type='i' index='0' declared_type='ccGLServerState' name='glServerState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGrid:'>
<arg type='@' index='0' declared_type='CCGridBase*' name='grid'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIgnoreAnchorPointForPosition:'>
<arg type='B' index='0' declared_type='BOOL' name='ignoreAnchorPointForPosition'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsRelativeAnchorPoint:'>
<arg type='B' index='0' declared_type='BOOL' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrderOfArrival:'>
<arg type='I' index='0' declared_type='NSUInteger' name='orderOfArrival'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParent:'>
<arg type='@' index='0' declared_type='CCNode*' name='parent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='position'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotation:'>
<arg type='f' index='0' declared_type='float' name='rotation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScale:'>
<arg type='f' index='0' declared_type='float' name='scale'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScaleX:'>
<arg type='f' index='0' declared_type='float' name='scaleX'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScaleY:'>
<arg type='f' index='0' declared_type='float' name='scaleY'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScheduler:'>
<arg type='@' index='0' declared_type='CCScheduler*' name='scheduler'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShaderProgram:'>
<arg type='@' index='0' declared_type='CCGLProgram*' name='shaderProgram'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSkewX:'>
<arg type='f' index='0' declared_type='float' name='skewX'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSkewY:'>
<arg type='f' index='0' declared_type='float' name='skewY'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:'>
<arg type='i' index='0' declared_type='NSInteger' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserData:'>
<arg type='^v' index='0' declared_type='void*' name='userData'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserObject:'>
<arg type='@' index='0' declared_type='id' name='userObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVertexZ:'>
<arg type='f' index='0' declared_type='float' name='vertexZ'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVisible:'>
<arg type='B' index='0' declared_type='BOOL' name='visible'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setZOrder:'>
<arg type='I' index='0' declared_type='NSUInteger' name='z'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shaderProgram'>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='skewX'>
<retval type='f' declared_type='float'/>
</method>
<method selector='skewY'>
<retval type='f' declared_type='float'/>
</method>
<method selector='sortAllChildren'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAction:'>
<arg type='@' index='0' declared_type='CCAction*' name='action'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopActionByTag:'>
<arg type='i' index='0' declared_type='NSInteger' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAllActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tag'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='transform'>
<retval type='v' declared_type='void'/>
</method>
<method selector='transformAncestors'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unschedule:'>
<arg type=':' index='0' declared_type='SEL' name='s'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleAllSelectors'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleUpdate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='userData'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='userObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='vertexZ'>
<retval type='f' declared_type='float'/>
</method>
<method selector='visible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='visit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='worldToNodeTransform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='zOrder'>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='CCOrbitCamera'>
<method selector='actionWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:' class_method='true'>
<arg type='f' index='0' declared_type='float' name='t'/>
<arg type='f' index='1' declared_type='float' name='r'/>
<arg type='f' index='2' declared_type='float' name='dr'/>
<arg type='f' index='3' declared_type='float' name='z'/>
<arg type='f' index='4' declared_type='float' name='dz'/>
<arg type='f' index='5' declared_type='float' name='x'/>
<arg type='f' index='6' declared_type='float' name='dx'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:'>
<arg type='f' index='0' declared_type='float' name='t'/>
<arg type='f' index='1' declared_type='float' name='r'/>
<arg type='f' index='2' declared_type='float' name='dr'/>
<arg type='f' index='3' declared_type='float' name='z'/>
<arg type='f' index='4' declared_type='float' name='dz'/>
<arg type='f' index='5' declared_type='float' name='x'/>
<arg type='f' index='6' declared_type='float' name='dx'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='sphericalRadius:zenith:azimuth:'>
<arg type='^f' index='0' declared_type='float*' name='r'/>
<arg type='^f' index='1' declared_type='float*' name='zenith'/>
<arg type='^f' index='2' declared_type='float*' name='azimuth'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCParallaxNode'>
<method selector='addChild:z:parallaxRatio:positionOffset:'>
<arg type='@' index='0' declared_type='CCNode*' name='node'/>
<arg type='i' index='1' declared_type='NSInteger' name='z'/>
<arg type='{CGPoint=ff}' index='2' declared_type='CGPoint' name='c'/>
<arg type='{CGPoint=ff}' index='3' declared_type='CGPoint' name='positionOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parallaxArray'>
<retval type='^{ccArray=II^@}' declared_type='ccArray*'/>
</method>
<method selector='setParallaxArray:'>
<arg type='^{ccArray=II^@}' index='0' declared_type='ccArray*' name='parallaxArray'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCParticleBatchNode'>
<method selector='addChild:z:tag:'>
<arg type='@' index='0' declared_type='CCParticleSystem*' name='child'/>
<arg type='i' index='1' declared_type='NSInteger' name='z'/>
<arg type='i' index='2' declared_type='NSInteger' name='aTag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='batchNodeWithFile:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='imageFile'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='batchNodeWithFile:capacity:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='fileImage'/>
<arg type='I' index='1' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='batchNodeWithTexture:' class_method='true'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='tex'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='batchNodeWithTexture:capacity:' class_method='true'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='tex'/>
<arg type='I' index='1' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='disableParticle:'>
<arg type='I' index='0' declared_type='NSUInteger' name='particleIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithFile:capacity:'>
<arg type='@' index='0' declared_type='NSString*' name='fileImage'/>
<arg type='I' index='1' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='tex'/>
<arg type='I' index='1' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg type='@' index='0' declared_type='CCParticleSystem*' name='pSystem'/>
<arg type='I' index='1' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChild:cleanup:'>
<arg type='@' index='0' declared_type='CCParticleSystem*' name='pSystem'/>
<arg type='B' index='1' declared_type='BOOL' name='doCleanUp'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg type='{_ccBlendFunc=II}' index='0' declared_type='ccBlendFunc' name='blendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg type='@' index='0' declared_type='CCTextureAtlas*' name='textureAtlas'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
</class>
<class name='CCParticleSystem'>
<method selector='active'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='angle'>
<retval type='f' declared_type='float'/>
</method>
<method selector='angleVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='atlasIndex'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='autoRemoveOnFinish'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='batchNode'>
<retval type='@' declared_type='CCParticleBatchNode*'/>
</method>
<method selector='blendAdditive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='duration'>
<retval type='f' declared_type='float'/>
</method>
<method selector='emissionRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='emitterMode'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='endColor'>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='endColorVar'>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='endRadius'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endRadiusVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSize'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSizeVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSpin'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSpinVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='gravity'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithDictionary:'>
<arg type='@' index='0' declared_type='NSDictionary*' name='dictionary'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFile:'>
<arg type='@' index='0' declared_type='NSString*' name='plistFile'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTotalParticles:'>
<arg type='I' index='0' declared_type='NSUInteger' name='numberOfParticles'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFull'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='life'>
<retval type='f' declared_type='float'/>
</method>
<method selector='lifeVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='particleCount'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='particleWithFile:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='plistFile'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='posVar'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='positionType'>
<retval type='i' declared_type='tCCPositionType'/>
</method>
<method selector='postStep'>
<retval type='v' declared_type='void'/>
</method>
<method selector='radialAccel'>
<retval type='f' declared_type='float'/>
</method>
<method selector='radialAccelVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='resetSystem'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotatePerSecond'>
<retval type='f' declared_type='float'/>
</method>
<method selector='rotatePerSecondVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setAngle:'>
<arg type='f' index='0' declared_type='float' name='angle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngleVar:'>
<arg type='f' index='0' declared_type='float' name='angleVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAtlasIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='atlasIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoRemoveOnFinish:'>
<arg type='B' index='0' declared_type='BOOL' name='autoRemoveOnFinish'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBatchNode:'>
<arg type='@' index='0' declared_type='CCParticleBatchNode*' name='batchNode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendAdditive:'>
<arg type='B' index='0' declared_type='BOOL' name='blendAdditive'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg type='{_ccBlendFunc=II}' index='0' declared_type='ccBlendFunc' name='blendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDuration:'>
<arg type='f' index='0' declared_type='float' name='duration'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEmissionRate:'>
<arg type='f' index='0' declared_type='float' name='emissionRate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEmitterMode:'>
<arg type='i' index='0' declared_type='NSInteger' name='emitterMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndColor:'>
<arg type='{ccColor4F=ffff}' index='0' declared_type='ccColor4F' name='endColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndColorVar:'>
<arg type='{ccColor4F=ffff}' index='0' declared_type='ccColor4F' name='endColorVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndRadius:'>
<arg type='f' index='0' declared_type='float' name='endRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndRadiusVar:'>
<arg type='f' index='0' declared_type='float' name='endRadiusVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSize:'>
<arg type='f' index='0' declared_type='float' name='endSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSizeVar:'>
<arg type='f' index='0' declared_type='float' name='endSizeVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSpin:'>
<arg type='f' index='0' declared_type='float' name='endSpin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSpinVar:'>
<arg type='f' index='0' declared_type='float' name='endSpinVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGravity:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='gravity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLife:'>
<arg type='f' index='0' declared_type='float' name='life'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLifeVar:'>
<arg type='f' index='0' declared_type='float' name='lifeVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg type='B' index='0' declared_type='BOOL' name='opacityModifyRGB'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosVar:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='posVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositionType:'>
<arg type='i' index='0' declared_type='tCCPositionType' name='positionType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRadialAccel:'>
<arg type='f' index='0' declared_type='float' name='radialAccel'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRadialAccelVar:'>
<arg type='f' index='0' declared_type='float' name='radialAccelVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotatePerSecond:'>
<arg type='f' index='0' declared_type='float' name='rotatePerSecond'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotatePerSecondVar:'>
<arg type='f' index='0' declared_type='float' name='rotatePerSecondVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourcePosition:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='sourcePosition'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpeed:'>
<arg type='f' index='0' declared_type='float' name='speed'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpeedVar:'>
<arg type='f' index='0' declared_type='float' name='speedVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartColor:'>
<arg type='{ccColor4F=ffff}' index='0' declared_type='ccColor4F' name='startColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartColorVar:'>
<arg type='{ccColor4F=ffff}' index='0' declared_type='ccColor4F' name='startColorVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartRadius:'>
<arg type='f' index='0' declared_type='float' name='startRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartRadiusVar:'>
<arg type='f' index='0' declared_type='float' name='startRadiusVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSize:'>
<arg type='f' index='0' declared_type='float' name='startSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSizeVar:'>
<arg type='f' index='0' declared_type='float' name='startSizeVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSpin:'>
<arg type='f' index='0' declared_type='float' name='startSpin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSpinVar:'>
<arg type='f' index='0' declared_type='float' name='startSpinVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTangentialAccel:'>
<arg type='f' index='0' declared_type='float' name='tangentialAccel'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTangentialAccelVar:'>
<arg type='f' index='0' declared_type='float' name='tangentialAccelVar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTotalParticles:'>
<arg type='I' index='0' declared_type='NSUInteger' name='totalParticles'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourcePosition'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='speed'>
<retval type='f' declared_type='float'/>
</method>
<method selector='speedVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startColor'>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='startColorVar'>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='startRadius'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startRadiusVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSize'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSizeVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSpin'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSpinVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='stopSystem'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tangentialAccel'>
<retval type='f' declared_type='float'/>
</method>
<method selector='tangentialAccelVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='totalParticles'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='update:'>
<arg type='f' index='0' declared_type='ccTime' name='dt'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateQuadWithParticle:newPosition:'>
<arg type='^{sCCParticle={CGPoint=ff}{CGPoint=ff}{ccColor4F=ffff}{ccColor4F=ffff}fffffI(?={?={CGPoint=ff}ff}{?=ffff})}' index='0' declared_type='tCCParticle*' name='particle'/>
<arg type='{CGPoint=ff}' index='1' declared_type='CGPoint' name='pos'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateWithNoTime'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCParticleSystemQuad'>
<method selector='initIndices'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initTexCoordsWithRect:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFrame:'>
<arg type='@' index='0' declared_type='CCSpriteFrame*' name='spriteFrame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:withRect:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCPlace'>
<method selector='actionWithPosition:' class_method='true'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='pos'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPosition:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='pos'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCPointArray'>
<method selector='addControlPoint:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='controlPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='arrayWithCapacity:' class_method='true'>
<arg type='I' index='0' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='controlPoints'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='getControlPointAtIndex:'>
<arg type='i' index='0' declared_type='NSInteger' name='index'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' index='0' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertControlPoint:atIndex:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='controlPoint'/>
<arg type='I' index='1' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeControlPointAtIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceControlPoint:atIndex:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='controlPoint'/>
<arg type='I' index='1' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reverse'>
<retval type='@' declared_type='CCPointArray*'/>
</method>
<method selector='reverseInline'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlPoints:'>
<arg type='@' index='0' declared_type='NSMutableArray*' name='controlPoints'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCProfiler'>
<method selector='createAndAddTimerWithName:'>
<arg type='@' index='0' declared_type='NSString*' name='timerName'/>
<retval type='@' declared_type='CCProfilingTimer*'/>
</method>
<method selector='displayTimers'>
<retval type='v' declared_type='void'/>
</method>
<method selector='releaseAllTimers'>
<retval type='v' declared_type='void'/>
</method>
<method selector='releaseTimer:'>
<arg type='@' index='0' declared_type='NSString*' name='timerName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedProfiler' class_method='true'>
<retval type='@' declared_type='CCProfiler*'/>
</method>
</class>
<class name='CCProfilingTimer'>
<method selector='reset'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCProgressFromTo'>
<method selector='actionWithDuration:from:to:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='f' index='1' declared_type='float' name='fromPercentage'/>
<arg type='f' index='2' declared_type='float' name='toPercentage'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:from:to:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='f' index='1' declared_type='float' name='fromPercentage'/>
<arg type='f' index='2' declared_type='float' name='toPercentage'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCProgressTimer'>
<method selector='barChangeRate'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithSprite:'>
<arg type='@' index='0' declared_type='CCSprite*' name='sprite'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='midpoint'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='percentage'>
<retval type='f' declared_type='float'/>
</method>
<method selector='progressWithSprite:' class_method='true'>
<arg type='@' index='0' declared_type='CCSprite*' name='sprite'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='reverseDirection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setBarChangeRate:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='barChangeRate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg type='{_ccColor3B=CCC}' index='0' declared_type='ccColor3B' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMidpoint:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='midpoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg type='C' index='0' declared_type='GLubyte' name='opacity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPercentage:'>
<arg type='f' index='0' declared_type='float' name='percentage'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReverseDirection:'>
<arg type='B' index='0' declared_type='BOOL' name='reverseDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSprite:'>
<arg type='@' index='0' declared_type='CCSprite*' name='sprite'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setType:'>
<arg type='i' index='0' declared_type='CCProgressTimerType' name='type'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sprite'>
<retval type='@' declared_type='CCSprite*'/>
</method>
<method selector='type'>
<retval type='i' declared_type='CCProgressTimerType'/>
</method>
<method selector='vertexData'>
<retval type='^{_ccV2F_C4B_T2F={_ccVertex2F=ff}{_ccColor4B=CCCC}{_ccTex2F=ff}}' declared_type='ccV2F_C4B_T2F*'/>
</method>
<method selector='vertexDataCount'>
<retval type='i' declared_type='int'/>
</method>
</class>
<class name='CCProgressTo'>
<method selector='actionWithDuration:percent:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='f' index='1' declared_type='float' name='percent'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:percent:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='f' index='1' declared_type='float' name='percent'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCRenderTexture'>
<method selector='begin'>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginWithClear:g:b:a:'>
<arg type='f' index='0' declared_type='float' name='r'/>
<arg type='f' index='1' declared_type='float' name='g'/>
<arg type='f' index='2' declared_type='float' name='b'/>
<arg type='f' index='3' declared_type='float' name='a'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginWithClear:g:b:a:depth:'>
<arg type='f' index='0' declared_type='float' name='r'/>
<arg type='f' index='1' declared_type='float' name='g'/>
<arg type='f' index='2' declared_type='float' name='b'/>
<arg type='f' index='3' declared_type='float' name='a'/>
<arg type='f' index='4' declared_type='float' name='depthValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginWithClear:g:b:a:depth:stencil:'>
<arg type='f' index='0' declared_type='float' name='r'/>
<arg type='f' index='1' declared_type='float' name='g'/>
<arg type='f' index='2' declared_type='float' name='b'/>
<arg type='f' index='3' declared_type='float' name='a'/>
<arg type='f' index='4' declared_type='float' name='depthValue'/>
<arg type='i' index='5' declared_type='int' name='stencilValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clear:g:b:a:'>
<arg type='f' index='0' declared_type='float' name='r'/>
<arg type='f' index='1' declared_type='float' name='g'/>
<arg type='f' index='2' declared_type='float' name='b'/>
<arg type='f' index='3' declared_type='float' name='a'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearDepth:'>
<arg type='f' index='0' declared_type='float' name='depthValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearStencil:'>
<arg type='i' index='0' declared_type='int' name='stencilValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='end'>
<retval type='v' declared_type='void'/>
</method>
<method selector='getUIImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='getUIImageFromBuffer'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='initWithWidth:height:pixelFormat:'>
<arg type='i' index='0' declared_type='int' name='w'/>
<arg type='i' index='1' declared_type='int' name='h'/>
<arg type='i' index='2' declared_type='CCTexture2DPixelFormat' name='format'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWidth:height:pixelFormat:depthStencilFormat:'>
<arg type='i' index='0' declared_type='int' name='w'/>
<arg type='i' index='1' declared_type='int' name='h'/>
<arg type='i' index='2' declared_type='CCTexture2DPixelFormat' name='format'/>
<arg type='I' index='3' declared_type='GLuint' name='depthStencilFormat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='newCGImage'>
<retval type='^{CGImage=}' declared_type='CGImageRef'/>
</method>
<method selector='renderTextureWithWidth:height:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='w'/>
<arg type='i' index='1' declared_type='int' name='h'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='renderTextureWithWidth:height:pixelFormat:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='w'/>
<arg type='i' index='1' declared_type='int' name='h'/>
<arg type='i' index='2' declared_type='CCTexture2DPixelFormat' name='format'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='renderTextureWithWidth:height:pixelFormat:depthStencilFormat:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='w'/>
<arg type='i' index='1' declared_type='int' name='h'/>
<arg type='i' index='2' declared_type='CCTexture2DPixelFormat' name='format'/>
<arg type='I' index='3' declared_type='GLuint' name='depthStencilFormat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='saveBuffer:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='saveBuffer:format:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<arg type='i' index='1' declared_type='int' name='format'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='saveToFile:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='saveToFile:format:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<arg type='i' index='1' declared_type='tCCImageFormat' name='format'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setSprite:'>
<arg type='@' index='0' declared_type='CCSprite*' name='sprite'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sprite'>
<retval type='@' declared_type='CCSprite*'/>
</method>
</class>
<class name='CCRepeat'>
<method selector='actionWithAction:times:' class_method='true'>
<arg type='@' index='0' declared_type='CCFiniteTimeAction*' name='action'/>
<arg type='I' index='1' declared_type='NSUInteger' name='times'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:times:'>
<arg type='@' index='0' declared_type='CCFiniteTimeAction*' name='action'/>
<arg type='I' index='1' declared_type='NSUInteger' name='times'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerAction'>
<retval type='@' declared_type='CCFiniteTimeAction*'/>
</method>
<method selector='setInnerAction:'>
<arg type='@' index='0' declared_type='CCFiniteTimeAction*' name='innerAction'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCRepeatForever'>
<method selector='actionWithAction:' class_method='true'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='action'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='action'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerAction'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='setInnerAction:'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='innerAction'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCReuseGrid'>
<method selector='actionWithTimes:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='times'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimes:'>
<arg type='i' index='0' declared_type='int' name='times'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCReverseTime'>
<method selector='actionWithAction:' class_method='true'>
<arg type='@' index='0' declared_type='CCFiniteTimeAction*' name='action'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:'>
<arg type='@' index='0' declared_type='CCFiniteTimeAction*' name='action'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCRipple3D'>
<method selector='actionWithPosition:radius:waves:amplitude:grid:duration:' class_method='true'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='pos'/>
<arg type='f' index='1' declared_type='float' name='r'/>
<arg type='i' index='2' declared_type='int' name='wav'/>
<arg type='f' index='3' declared_type='float' name='amp'/>
<arg type='{_ccGridSize=ii}' index='4' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='5' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithPosition:radius:waves:amplitude:grid:duration:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='pos'/>
<arg type='f' index='1' declared_type='float' name='r'/>
<arg type='i' index='2' declared_type='int' name='wav'/>
<arg type='f' index='3' declared_type='float' name='amp'/>
<arg type='{_ccGridSize=ii}' index='4' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='5' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setAmplitude:'>
<arg type='f' index='0' declared_type='float' name='amplitude'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg type='f' index='0' declared_type='float' name='amplitudeRate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='position'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCRotateBy'>
<method selector='actionWithDuration:angle:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='f' index='1' declared_type='float' name='deltaAngle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:angle:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='f' index='1' declared_type='float' name='deltaAngle'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCRotateTo'>
<method selector='actionWithDuration:angle:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='f' index='1' declared_type='float' name='angle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:angle:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='f' index='1' declared_type='float' name='angle'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCScaleTo'>
<method selector='actionWithDuration:scale:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='f' index='1' declared_type='float' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actionWithDuration:scaleX:scaleY:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='f' index='1' declared_type='float' name='sx'/>
<arg type='f' index='2' declared_type='float' name='sy'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:scale:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='f' index='1' declared_type='float' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:scaleX:scaleY:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='f' index='1' declared_type='float' name='sx'/>
<arg type='f' index='2' declared_type='float' name='sy'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCScheduler'>
<method selector='isTargetPaused:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pauseAllTargets'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='pauseAllTargetsWithMinPriority:'>
<arg type='i' index='0' declared_type='NSInteger' name='minPriority'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='pauseTarget:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTarget:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTargets:'>
<arg type='@' index='0' declared_type='NSSet*' name='targetsToResume'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleSelector:forTarget:interval:paused:'>
<arg type=':' index='0' declared_type='SEL' name='selector'/>
<arg type='@' index='1' declared_type='id' name='target'/>
<arg type='f' index='2' declared_type='ccTime' name='interval'/>
<arg type='B' index='3' declared_type='BOOL' name='paused'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleSelector:forTarget:interval:paused:repeat:delay:'>
<arg type=':' index='0' declared_type='SEL' name='selector'/>
<arg type='@' index='1' declared_type='id' name='target'/>
<arg type='f' index='2' declared_type='ccTime' name='interval'/>
<arg type='B' index='3' declared_type='BOOL' name='paused'/>
<arg type='I' index='4' declared_type='uint' name='repeat'/>
<arg type='f' index='5' declared_type='ccTime' name='delay'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleUpdateForTarget:priority:paused:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<arg type='i' index='1' declared_type='NSInteger' name='priority'/>
<arg type='B' index='2' declared_type='BOOL' name='paused'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeScale:'>
<arg type='f' index='0' declared_type='ccTime' name='timeScale'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedScheduler' class_method='true'>
<retval type='@' declared_type='CCScheduler*'/>
</method>
<method selector='timeScale'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='unscheduleAllSelectors'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleAllSelectorsForTarget:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleAllSelectorsWithMinPriority:'>
<arg type='i' index='0' declared_type='NSInteger' name='minPriority'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleSelector:forTarget:'>
<arg type=':' index='0' declared_type='SEL' name='selector'/>
<arg type='@' index='1' declared_type='id' name='target'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleUpdateForTarget:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='update:'>
<arg type='f' index='0' declared_type='ccTime' name='dt'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCSequence'>
<method selector='actionOne:two:' class_method='true'>
<arg type='@' index='0' declared_type='CCFiniteTimeAction*' name='actionOne'/>
<arg type='@' index='1' declared_type='CCFiniteTimeAction*' name='actionTwo'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actionWithArray:' class_method='true'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfActions'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actions:' sentinel='0' class_method='true' variadic='true'>
<arg type='@' index='0' declared_type='CCFiniteTimeAction*' name='action1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actionsWithArray:' class_method='true'>
<arg type='@' index='0' declared_type='NSArray*' name='actions'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initOne:two:'>
<arg type='@' index='0' declared_type='CCFiniteTimeAction*' name='actionOne'/>
<arg type='@' index='1' declared_type='CCFiniteTimeAction*' name='actionTwo'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShaderCache'>
<method selector='addProgram:forKey:'>
<arg type='@' index='0' declared_type='CCGLProgram*' name='program'/>
<arg type='@' index='1' declared_type='NSString*' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadDefaultShaders'>
<retval type='v' declared_type='void'/>
</method>
<method selector='programForKey:'>
<arg type='@' index='0' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='purgeSharedShaderCache' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedShaderCache' class_method='true'>
<retval type='@' declared_type='CCShaderCache*'/>
</method>
</class>
<class name='CCShaky3D'>
<method selector='actionWithRange:shakeZ:grid:duration:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='range'/>
<arg type='B' index='1' declared_type='BOOL' name='shakeZ'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg type='i' index='0' declared_type='int' name='range'/>
<arg type='B' index='1' declared_type='BOOL' name='shakeZ'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShakyTiles3D'>
<method selector='actionWithRange:shakeZ:grid:duration:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='range'/>
<arg type='B' index='1' declared_type='BOOL' name='shakeZ'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg type='i' index='0' declared_type='int' name='range'/>
<arg type='B' index='1' declared_type='BOOL' name='shakeZ'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShatteredTiles3D'>
<method selector='actionWithRange:shatterZ:grid:duration:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='range'/>
<arg type='B' index='1' declared_type='BOOL' name='shatterZ'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRange:shatterZ:grid:duration:'>
<arg type='i' index='0' declared_type='int' name='range'/>
<arg type='B' index='1' declared_type='BOOL' name='shatterZ'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShuffleTiles'>
<method selector='actionWithSeed:grid:duration:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='s'/>
<arg type='{_ccGridSize=ii}' index='1' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='2' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg type='i' index='0' declared_type='int' name='s'/>
<arg type='{_ccGridSize=ii}' index='1' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='2' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSkewTo'>
<method selector='actionWithDuration:skewX:skewY:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='t'/>
<arg type='f' index='1' declared_type='float' name='sx'/>
<arg type='f' index='2' declared_type='float' name='sy'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:skewX:skewY:'>
<arg type='f' index='0' declared_type='ccTime' name='t'/>
<arg type='f' index='1' declared_type='float' name='sx'/>
<arg type='f' index='2' declared_type='float' name='sy'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSpawn'>
<method selector='actionOne:two:' class_method='true'>
<arg type='@' index='0' declared_type='CCFiniteTimeAction*' name='one'/>
<arg type='@' index='1' declared_type='CCFiniteTimeAction*' name='two'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actionWithArray:' class_method='true'>
<arg type='@' index='0' declared_type='NSArray*' name='arrayOfActions'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actions:' sentinel='0' class_method='true' variadic='true'>
<arg type='@' index='0' declared_type='CCFiniteTimeAction*' name='action1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actionsWithArray:' class_method='true'>
<arg type='@' index='0' declared_type='NSArray*' name='actions'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initOne:two:'>
<arg type='@' index='0' declared_type='CCFiniteTimeAction*' name='one'/>
<arg type='@' index='1' declared_type='CCFiniteTimeAction*' name='two'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSpeed'>
<method selector='actionWithAction:speed:' class_method='true'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='action'/>
<arg type='f' index='1' declared_type='float' name='value'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:speed:'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='action'/>
<arg type='f' index='1' declared_type='float' name='value'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerAction'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='setInnerAction:'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='innerAction'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpeed:'>
<arg type='f' index='0' declared_type='float' name='speed'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='speed'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='CCSplitCols'>
<method selector='actionWithCols:duration:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='cols'/>
<arg type='f' index='1' declared_type='ccTime' name='duration'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCols:duration:'>
<arg type='i' index='0' declared_type='int' name='cols'/>
<arg type='f' index='1' declared_type='ccTime' name='duration'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSplitRows'>
<method selector='actionWithRows:duration:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='rows'/>
<arg type='f' index='1' declared_type='ccTime' name='duration'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRows:duration:'>
<arg type='i' index='0' declared_type='int' name='rows'/>
<arg type='f' index='1' declared_type='ccTime' name='duration'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSprite'>
<method selector='atlasIndex'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='batchNode'>
<retval type='@' declared_type='CCSpriteBatchNode*'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='dirty'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='displayFrame'>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
<method selector='displayedFrame'>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
<method selector='flipX'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='flipY'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithBatchNode:rect:'>
<arg type='@' index='0' declared_type='CCSpriteBatchNode*' name='node'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCGImage:key:'>
<arg type='^{CGImage=}' index='0' declared_type='CGImageRef' name='image'/>
<arg type='@' index='1' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFile:'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFile:rect:'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrame:'>
<arg type='@' index='0' declared_type='CCSpriteFrame*' name='spriteFrame'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrameName:'>
<arg type='@' index='0' declared_type='NSString*' name='spriteFrameName'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rect:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rect:rotated:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<arg type='B' index='2' declared_type='BOOL' name='rotated'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFrameDisplayed:'>
<arg type='@' index='0' declared_type='CCSpriteFrame*' name='frame'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='offsetPosition'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='quad'>
<retval type='{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad'/>
</method>
<method selector='setAtlasIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='atlasIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBatchNode:'>
<arg type='@' index='0' declared_type='CCSpriteBatchNode*' name='batchNode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg type='{_ccBlendFunc=II}' index='0' declared_type='ccBlendFunc' name='blendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg type='{_ccColor3B=CCC}' index='0' declared_type='ccColor3B' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDirty:'>
<arg type='B' index='0' declared_type='BOOL' name='dirty'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFrame:'>
<arg type='@' index='0' declared_type='CCSpriteFrame*' name='newFrame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFrameWithAnimationName:index:'>
<arg type='@' index='0' declared_type='NSString*' name='animationName'/>
<arg type='i' index='1' declared_type='int' name='frameIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFlipX:'>
<arg type='B' index='0' declared_type='BOOL' name='flipX'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFlipY:'>
<arg type='B' index='0' declared_type='BOOL' name='flipY'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg type='C' index='0' declared_type='GLubyte' name='opacity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg type='@' index='0' declared_type='CCTextureAtlas*' name='textureAtlas'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureRect:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureRect:rotated:untrimmedSize:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='rect'/>
<arg type='B' index='1' declared_type='BOOL' name='rotated'/>
<arg type='{CGSize=ff}' index='2' declared_type='CGSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVertexRect:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spriteWithBatchNode:rect:' class_method='true'>
<arg type='@' index='0' declared_type='CCSpriteBatchNode*' name='node'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='spriteWithCGImage:key:' class_method='true'>
<arg type='^{CGImage=}' index='0' declared_type='CGImageRef' name='image'/>
<arg type='@' index='1' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='spriteWithFile:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='spriteWithFile:rect:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='spriteWithSpriteFrame:' class_method='true'>
<arg type='@' index='0' declared_type='CCSpriteFrame*' name='spriteFrame'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='spriteWithSpriteFrameName:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='spriteFrameName'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='spriteWithTexture:' class_method='true'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='spriteWithTexture:rect:' class_method='true'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
<method selector='textureRect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='textureRectRotated'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='updateTransform'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCSpriteBatchNode'>
<method selector='addQuadFromSprite:quadIndex:'>
<arg type='@' index='0' declared_type='CCSprite*' name='sprite'/>
<arg type='I' index='1' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteWithoutQuad:z:tag:'>
<arg type='@' index='0' declared_type='CCSprite*' name='child'/>
<arg type='I' index='1' declared_type='NSUInteger' name='z'/>
<arg type='i' index='2' declared_type='NSInteger' name='aTag'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='appendChild:'>
<arg type='@' index='0' declared_type='CCSprite*' name='sprite'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='atlasIndexForChild:atZ:'>
<arg type='@' index='0' declared_type='CCSprite*' name='sprite'/>
<arg type='i' index='1' declared_type='NSInteger' name='z'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='batchNodeWithFile:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='fileImage'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='batchNodeWithFile:capacity:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='fileImage'/>
<arg type='I' index='1' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='batchNodeWithTexture:' class_method='true'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='tex'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='batchNodeWithTexture:capacity:' class_method='true'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='tex'/>
<arg type='I' index='1' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='descendants'>
<retval type='@' declared_type='CCArray*'/>
</method>
<method selector='increaseAtlasCapacity'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithFile:capacity:'>
<arg type='@' index='0' declared_type='NSString*' name='fileImage'/>
<arg type='I' index='1' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='tex'/>
<arg type='I' index='1' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg type='@' index='0' declared_type='CCSprite*' name='child'/>
<arg type='I' index='1' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rebuildIndexInOrder:atlasIndex:'>
<arg type='@' index='0' declared_type='CCSprite*' name='parent'/>
<arg type='I' index='1' declared_type='NSUInteger' name='index'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='removeChild:cleanup:'>
<arg type='@' index='0' declared_type='CCSprite*' name='sprite'/>
<arg type='B' index='1' declared_type='BOOL' name='doCleanup'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChildAtIndex:cleanup:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<arg type='B' index='1' declared_type='BOOL' name='doCleanup'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFromAtlas:'>
<arg type='@' index='0' declared_type='CCSprite*' name='sprite'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reorderBatch:'>
<arg type='B' index='0' declared_type='BOOL' name='reorder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg type='{_ccBlendFunc=II}' index='0' declared_type='ccBlendFunc' name='blendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg type='@' index='0' declared_type='CCTextureAtlas*' name='textureAtlas'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
</class>
<class name='CCSpriteFrame'>
<method selector='frameWithTexture:rect:' class_method='true'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='frameWithTexture:rectInPixels:rotated:offset:originalSize:' class_method='true'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<arg type='B' index='2' declared_type='BOOL' name='rotated'/>
<arg type='{CGPoint=ff}' index='3' declared_type='CGPoint' name='offset'/>
<arg type='{CGSize=ff}' index='4' declared_type='CGSize' name='originalSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='frameWithTextureFilename:rect:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='frameWithTextureFilename:rectInPixels:rotated:offset:originalSize:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<arg type='B' index='2' declared_type='BOOL' name='rotated'/>
<arg type='{CGPoint=ff}' index='3' declared_type='CGPoint' name='offset'/>
<arg type='{CGSize=ff}' index='4' declared_type='CGSize' name='originalSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rect:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rectInPixels:rotated:offset:originalSize:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<arg type='B' index='2' declared_type='BOOL' name='rotated'/>
<arg type='{CGPoint=ff}' index='3' declared_type='CGPoint' name='offset'/>
<arg type='{CGSize=ff}' index='4' declared_type='CGSize' name='originalSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTextureFilename:rect:'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTextureFilename:rectInPixels:rotated:offset:originalSize:'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect' name='rect'/>
<arg type='B' index='2' declared_type='BOOL' name='rotated'/>
<arg type='{CGPoint=ff}' index='3' declared_type='CGPoint' name='offset'/>
<arg type='{CGSize=ff}' index='4' declared_type='CGSize' name='originalSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='offset'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='offsetInPixels'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='originalSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='originalSizeInPixels'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='rect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='rectInPixels'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='rotated'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setOffset:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='offset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffsetInPixels:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='offsetInPixels'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOriginalSize:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='originalSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOriginalSizeInPixels:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='originalSizeInPixels'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRect:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRectInPixels:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='rectInPixels'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotated:'>
<arg type='B' index='0' declared_type='BOOL' name='rotated'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='textureFilename'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CCSpriteFrameCache'>
<method selector='addSpriteFrame:name:'>
<arg type='@' index='0' declared_type='CCSpriteFrame*' name='frame'/>
<arg type='@' index='1' declared_type='NSString*' name='frameName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithDictionary:textureFile:'>
<arg type='@' index='0' declared_type='NSDictionary*' name='dictionary'/>
<arg type='@' index='1' declared_type='NSString*' name='filename'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:'>
<arg type='@' index='0' declared_type='NSString*' name='plist'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:texture:'>
<arg type='@' index='0' declared_type='NSString*' name='plist'/>
<arg type='@' index='1' declared_type='CCTexture2D*' name='texture'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:textureFile:'>
<arg type='@' index='0' declared_type='NSString*' name='plist'/>
<arg type='@' index='1' declared_type='NSString*' name='filename'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:textureFilename:'>
<arg type='@' index='0' declared_type='NSString*' name='plist'/>
<arg type='@' index='1' declared_type='NSString*' name='filename'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='purgeSharedSpriteFrameCache' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFrameByName:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFrames'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFramesFromFile:'>
<arg type='@' index='0' declared_type='NSString*' name='plist'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFramesFromTexture:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeUnusedSpriteFrames'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedSpriteFrameCache' class_method='true'>
<retval type='@' declared_type='CCSpriteFrameCache*'/>
</method>
<method selector='spriteFrameByName:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
</class>
<class name='CCTMXLayer'>
<method selector='addChild:z:tag:'>
<arg type='@' index='0' declared_type='CCNode*' name='node'/>
<arg type='i' index='1' declared_type='NSInteger' name='z'/>
<arg type='i' index='2' declared_type='NSInteger' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTilesetInfo:layerInfo:mapInfo:'>
<arg type='@' index='0' declared_type='CCTMXTilesetInfo*' name='tilesetInfo'/>
<arg type='@' index='1' declared_type='CCTMXLayerInfo*' name='layerInfo'/>
<arg type='@' index='2' declared_type='CCTMXMapInfo*' name='mapInfo'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='layerOrientation'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='layerSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='layerWithTilesetInfo:layerInfo:mapInfo:' class_method='true'>
<arg type='@' index='0' declared_type='CCTMXTilesetInfo*' name='tilesetInfo'/>
<arg type='@' index='1' declared_type='CCTMXLayerInfo*' name='layerInfo'/>
<arg type='@' index='2' declared_type='CCTMXMapInfo*' name='mapInfo'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapTileSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='positionAt:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='tileCoordinate'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='propertyNamed:'>
<arg type='@' index='0' declared_type='NSString*' name='propertyName'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='releaseMap'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTileAt:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='tileCoordinate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerName:'>
<arg type='@' index='0' declared_type='NSString*' name='layerName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerOrientation:'>
<arg type='I' index='0' declared_type='NSUInteger' name='layerOrientation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerSize:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='layerSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapTileSize:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='mapTileSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg type='@' index='0' declared_type='NSMutableArray*' name='properties'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileGID:at:'>
<arg type='I' index='0' declared_type='uint32_t' name='gid'/>
<arg type='{CGPoint=ff}' index='1' declared_type='CGPoint' name='tileCoordinate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileGID:at:withFlags:'>
<arg type='I' index='0' declared_type='uint32_t' name='gid'/>
<arg type='{CGPoint=ff}' index='1' declared_type='CGPoint' name='pos'/>
<arg type='i' index='2' declared_type='ccTMXTileFlags' name='flags'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTiles:'>
<arg type='^I' index='0' declared_type='uint32_t*' name='tiles'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileset:'>
<arg type='@' index='0' declared_type='CCTMXTilesetInfo*' name='tileset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setupTiles'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileAt:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='tileCoordinate'/>
<retval type='@' declared_type='CCSprite*'/>
</method>
<method selector='tileGIDAt:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='tileCoordinate'/>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='tileGIDAt:withFlags:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='pos'/>
<arg type='^i' index='1' declared_type='ccTMXTileFlags*' name='flags'/>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='tiles'>
<retval type='^I' declared_type='uint32_t*'/>
</method>
<method selector='tileset'>
<retval type='@' declared_type='CCTMXTilesetInfo*'/>
</method>
</class>
<class name='CCTMXLayerInfo'>
<method selector='layerSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='maxGID'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='minGID'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='offset'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='unsigned char'/>
</method>
<method selector='ownTiles'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='setLayerSize:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='layerSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxGID:'>
<arg type='I' index='0' declared_type='unsigned int' name='maxGID'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinGID:'>
<arg type='I' index='0' declared_type='unsigned int' name='minGID'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffset:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='offset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg type='C' index='0' declared_type='unsigned char' name='opacity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOwnTiles:'>
<arg type='B' index='0' declared_type='BOOL' name='ownTiles'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg type='@' index='0' declared_type='NSMutableDictionary*' name='properties'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTiles:'>
<arg type='^I' index='0' declared_type='unsigned int*' name='tiles'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVisible:'>
<arg type='B' index='0' declared_type='BOOL' name='visible'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tiles'>
<retval type='^I' declared_type='unsigned int*'/>
</method>
<method selector='visible'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCTMXMapInfo'>
<method selector='filename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='formatWithTMXFile:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='tmxFile'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='formatWithXML:resourcePath:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='tmxString'/>
<arg type='@' index='1' declared_type='NSString*' name='resourcePath'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTMXFile:'>
<arg type='@' index='0' declared_type='NSString*' name='tmxFile'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg type='@' index='0' declared_type='NSString*' name='tmxString'/>
<arg type='@' index='1' declared_type='NSString*' name='resourcePath'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layers'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='mapSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='objectGroups'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='orientation'>
<retval type='i' declared_type='int'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='resources'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setFilename:'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayers:'>
<arg type='@' index='0' declared_type='NSMutableArray*' name='layers'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapSize:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='mapSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectGroups:'>
<arg type='@' index='0' declared_type='NSMutableArray*' name='objectGroups'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrientation:'>
<arg type='i' index='0' declared_type='int' name='orientation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg type='@' index='0' declared_type='NSMutableDictionary*' name='properties'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResources:'>
<arg type='@' index='0' declared_type='NSString*' name='resources'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileProperties:'>
<arg type='@' index='0' declared_type='NSMutableDictionary*' name='tileProperties'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileSize:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='tileSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTilesets:'>
<arg type='@' index='0' declared_type='NSMutableArray*' name='tilesets'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileProperties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='tileSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='tilesets'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
</class>
<class name='CCTMXObjectGroup'>
<method selector='groupName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectNamed:'>
<arg type='@' index='0' declared_type='NSString*' name='objectName'/>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='objects'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='positionOffset'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='propertyNamed:'>
<arg type='@' index='0' declared_type='NSString*' name='propertyName'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setGroupName:'>
<arg type='@' index='0' declared_type='NSString*' name='groupName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjects:'>
<arg type='@' index='0' declared_type='NSMutableArray*' name='objects'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositionOffset:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='positionOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg type='@' index='0' declared_type='NSMutableDictionary*' name='properties'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTMXTiledMap'>
<method selector='initWithTMXFile:'>
<arg type='@' index='0' declared_type='NSString*' name='tmxFile'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg type='@' index='0' declared_type='NSString*' name='tmxString'/>
<arg type='@' index='1' declared_type='NSString*' name='resourcePath'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerNamed:'>
<arg type='@' index='0' declared_type='NSString*' name='layerName'/>
<retval type='@' declared_type='CCTMXLayer*'/>
</method>
<method selector='mapOrientation'>
<retval type='i' declared_type='int'/>
</method>
<method selector='mapSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='objectGroupNamed:'>
<arg type='@' index='0' declared_type='NSString*' name='groupName'/>
<retval type='@' declared_type='CCTMXObjectGroup*'/>
</method>
<method selector='objectGroups'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='propertiesForGID:'>
<arg type='I' index='0' declared_type='unsigned int' name='GID'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='propertyNamed:'>
<arg type='@' index='0' declared_type='NSString*' name='propertyName'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObjectGroups:'>
<arg type='@' index='0' declared_type='NSMutableArray*' name='objectGroups'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg type='@' index='0' declared_type='NSMutableDictionary*' name='properties'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='tiledMapWithTMXFile:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='tmxFile'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='tiledMapWithXML:resourcePath:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='tmxString'/>
<arg type='@' index='1' declared_type='NSString*' name='resourcePath'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTMXTilesetInfo'>
<method selector='firstGid'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='imageSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='margin'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='rectForGID:'>
<arg type='I' index='0' declared_type='unsigned int' name='gid'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='setFirstGid:'>
<arg type='I' index='0' declared_type='unsigned int' name='firstGid'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageSize:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='imageSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMargin:'>
<arg type='I' index='0' declared_type='unsigned int' name='margin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceImage:'>
<arg type='@' index='0' declared_type='NSString*' name='sourceImage'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpacing:'>
<arg type='I' index='0' declared_type='unsigned int' name='spacing'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileSize:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='tileSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceImage'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='spacing'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='tileSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='CCTargetedAction'>
<method selector='actionWithTarget:action:' class_method='true'>
<arg type='@' index='0' declared_type='id' name='target'/>
<arg type='@' index='1' declared_type='CCFiniteTimeAction*' name='action'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='forcedTarget'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:action:'>
<arg type='@' index='0' declared_type='id' name='target'/>
<arg type='@' index='1' declared_type='CCFiniteTimeAction*' name='action'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setForcedTarget:'>
<arg type='@' index='0' declared_type='id' name='forcedTarget'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTargetedTouchHandler'>
<method selector='claimedTouches'>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method selector='handlerWithDelegate:priority:swallowsTouches:' class_method='true'>
<arg type='@' index='0' declared_type='id' name='aDelegate'/>
<arg type='i' index='1' declared_type='int' name='priority'/>
<arg type='B' index='2' declared_type='BOOL' name='swallowsTouches'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDelegate:priority:swallowsTouches:'>
<arg type='@' index='0' declared_type='id' name='aDelegate'/>
<arg type='i' index='1' declared_type='int' name='priority'/>
<arg type='B' index='2' declared_type='BOOL' name='swallowsTouches'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setSwallowsTouches:'>
<arg type='B' index='0' declared_type='BOOL' name='swallowsTouches'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='swallowsTouches'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCTexture2D'>
<method selector='PVRImagesHavePremultipliedAlpha:' class_method='true'>
<arg type='B' index='0' declared_type='BOOL' name='haveAlphaPremultiplied'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='bitsPerPixelForFormat'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='bitsPerPixelForFormat:' class_method='true'>
<arg type='i' index='0' declared_type='CCTexture2DPixelFormat' name='format'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='contentSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='contentSizeInPixels'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='defaultAlphaPixelFormat' class_method='true'>
<retval type='i' declared_type='CCTexture2DPixelFormat'/>
</method>
<method selector='drawAtPoint:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='point'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInRect:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='generateMipmap'>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasPremultipliedAlpha'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithCGImage:resolutionType:'>
<arg type='^{CGImage=}' index='0' declared_type='CGImageRef' name='cgImage'/>
<arg type='i' index='1' declared_type='ccResolutionType' name='resolution'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:pixelFormat:pixelsWide:pixelsHigh:contentSize:'>
<arg const='true' type='^v' index='0' declared_type='void*' name='data'/>
<arg type='i' index='1' declared_type='CCTexture2DPixelFormat' name='pixelFormat'/>
<arg type='I' index='2' declared_type='NSUInteger' name='width'/>
<arg type='I' index='3' declared_type='NSUInteger' name='height'/>
<arg type='{CGSize=ff}' index='4' declared_type='CGSize' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPVRFile:'>
<arg type='@' index='0' declared_type='NSString*' name='file'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:alignment:fontName:fontSize:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='@' index='3' declared_type='NSString*' name='name'/>
<arg type='f' index='4' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:alignment:lineBreakMode:fontName:fontSize:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='i' index='3' declared_type='CCLineBreakMode' name='lineBreakMode'/>
<arg type='@' index='4' declared_type='NSString*' name='name'/>
<arg type='f' index='5' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='i' index='3' declared_type='CCVerticalTextAlignment' name='vertAlignment'/>
<arg type='@' index='4' declared_type='NSString*' name='name'/>
<arg type='f' index='5' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='dimensions'/>
<arg type='i' index='2' declared_type='CCTextAlignment' name='alignment'/>
<arg type='i' index='3' declared_type='CCVerticalTextAlignment' name='vertAlignment'/>
<arg type='i' index='4' declared_type='CCLineBreakMode' name='lineBreakMode'/>
<arg type='@' index='5' declared_type='NSString*' name='name'/>
<arg type='f' index='6' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='NSString*' name='name'/>
<arg type='f' index='2' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='keepData:length:'>
<arg type='^v' index='0' declared_type='void*' name='data'/>
<arg type='I' index='1' declared_type='NSUInteger' name='length'/>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='maxS'>
<retval type='f' declared_type='GLfloat'/>
</method>
<method selector='maxT'>
<retval type='f' declared_type='GLfloat'/>
</method>
<method selector='name'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='pixelFormat'>
<retval type='i' declared_type='CCTexture2DPixelFormat'/>
</method>
<method selector='pixelsHigh'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='pixelsWide'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='releaseData:'>
<arg type='^v' index='0' declared_type='void*' name='data'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resolutionType'>
<retval type='i' declared_type='ccResolutionType'/>
</method>
<method selector='setAliasTexParameters'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAntiAliasTexParameters'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultAlphaPixelFormat:' class_method='true'>
<arg type='i' index='0' declared_type='CCTexture2DPixelFormat' name='format'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxS:'>
<arg type='f' index='0' declared_type='GLfloat' name='maxS'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxT:'>
<arg type='f' index='0' declared_type='GLfloat' name='maxT'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResolutionType:'>
<arg type='i' index='0' declared_type='ccResolutionType' name='resolutionType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShaderProgram:'>
<arg type='@' index='0' declared_type='CCGLProgram*' name='shaderProgram'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexParameters:'>
<arg type='^{_ccTexParams=IIII}' index='0' declared_type='ccTexParams*' name='texParams'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shaderProgram'>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='stringForFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CCTextureAtlas'>
<method selector='capacity'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='drawNumberOfQuads:'>
<arg type='I' index='0' declared_type='NSUInteger' name='n'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawNumberOfQuads:fromIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='n'/>
<arg type='I' index='1' declared_type='NSUInteger' name='start'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawQuads'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillWithEmptyQuadsFromIndex:amount:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<arg type='I' index='1' declared_type='NSUInteger' name='amount'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='increaseTotalQuadsWith:'>
<arg type='I' index='0' declared_type='NSUInteger' name='amount'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithFile:capacity:'>
<arg type='@' index='0' declared_type='NSString*' name='file'/>
<arg type='I' index='1' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='tex'/>
<arg type='I' index='1' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertQuad:atIndex:'>
<arg type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' index='0' declared_type='ccV3F_C4B_T2F_Quad*' name='quad'/>
<arg type='I' index='1' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertQuadFromIndex:atIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='fromIndex'/>
<arg type='I' index='1' declared_type='NSUInteger' name='newIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertQuads:atIndex:amount:'>
<arg type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' index='0' declared_type='ccV3F_C4B_T2F_Quad*' name='quads'/>
<arg type='I' index='1' declared_type='NSUInteger' name='index'/>
<arg type='I' index='2' declared_type='NSUInteger' name='amount'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveQuadsFromIndex:amount:atIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='oldIndex'/>
<arg type='I' index='1' declared_type='NSUInteger' name='amount'/>
<arg type='I' index='2' declared_type='NSUInteger' name='newIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveQuadsFromIndex:to:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<arg type='I' index='1' declared_type='NSUInteger' name='newIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='quads'>
<retval type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad*'/>
</method>
<method selector='removeAllQuads'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeQuadAtIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeQuadsAtIndex:amount:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<arg type='I' index='1' declared_type='NSUInteger' name='amount'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resizeCapacity:'>
<arg type='I' index='0' declared_type='NSUInteger' name='n'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setQuads:'>
<arg type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' index='0' declared_type='ccV3F_C4B_T2F_Quad*' name='quads'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='textureAtlasWithFile:capacity:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='file'/>
<arg type='I' index='1' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='textureAtlasWithTexture:capacity:' class_method='true'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='tex'/>
<arg type='I' index='1' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='totalQuads'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='updateQuad:atIndex:'>
<arg type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' index='0' declared_type='ccV3F_C4B_T2F_Quad*' name='quad'/>
<arg type='I' index='1' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTextureCache'>
<method selector='addCGImage:forKey:'>
<arg type='^{CGImage=}' index='0' declared_type='CGImageRef' name='image'/>
<arg type='@' index='1' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='addImage:'>
<arg type='@' index='0' declared_type='NSString*' name='fileimage'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='addImageAsync:target:selector:'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<arg type='@' index='1' declared_type='id' name='target'/>
<arg type=':' index='2' declared_type='SEL' name='selector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addImageAsync:withBlock:'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<arg type='@?' index='1' declared_type='void (^)(CCTexture2D *)' name='block' function_pointer='true'>
<arg type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPVRImage:'>
<arg type='@' index='0' declared_type='NSString*' name='filename'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='dumpCachedTextureInfo'>
<retval type='v' declared_type='void'/>
</method>
<method selector='purgeSharedTextureCache' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllTextures'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTexture:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='tex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTextureForKey:'>
<arg type='@' index='0' declared_type='NSString*' name='textureKeyName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeUnusedTextures'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedTextureCache' class_method='true'>
<retval type='@' declared_type='CCTextureCache*'/>
</method>
<method selector='textureForKey:'>
<arg type='@' index='0' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
</class>
<class name='CCTexturePVR'>
<method selector='format'>
<retval type='i' declared_type='CCTexture2DPixelFormat'/>
</method>
<method selector='hasAlpha'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='height'>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg type='@' index='0' declared_type='NSString*' name='path'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg type='@' index='0' declared_type='NSURL*' name='url'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='numberOfMipmaps'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='pvrTextureWithContentsOfFile:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='path'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='pvrTextureWithContentsOfURL:' class_method='true'>
<arg type='@' index='0' declared_type='NSURL*' name='url'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='retainName'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setRetainName:'>
<arg type='B' index='0' declared_type='BOOL' name='retainName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='width'>
<retval type='I' declared_type='uint32_t'/>
</method>
</class>
<class name='CCTileMapAtlas'>
<method selector='initWithTileFile:mapFile:tileWidth:tileHeight:'>
<arg type='@' index='0' declared_type='NSString*' name='tile'/>
<arg type='@' index='1' declared_type='NSString*' name='map'/>
<arg type='i' index='2' declared_type='int' name='w'/>
<arg type='i' index='3' declared_type='int' name='h'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='releaseMap'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTile:at:'>
<arg type='{_ccColor3B=CCC}' index='0' declared_type='ccColor3B' name='tile'/>
<arg type='{_ccGridSize=ii}' index='1' declared_type='ccGridSize' name='position'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tgaInfo'>
<retval type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*'/>
</method>
<method selector='tileAt:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='position'/>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='tileMapAtlasWithTileFile:mapFile:tileWidth:tileHeight:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='tile'/>
<arg type='@' index='1' declared_type='NSString*' name='map'/>
<arg type='i' index='2' declared_type='int' name='w'/>
<arg type='i' index='3' declared_type='int' name='h'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTiledGrid3D'>
<method selector='originalTile:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='pos'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
<method selector='setTile:coords:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='pos'/>
<arg type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' index='1' declared_type='ccQuad3' name='coords'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tile:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='pos'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
</class>
<class name='CCTiledGrid3DAction'>
<method selector='originalTile:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='pos'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
<method selector='setTile:coords:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='pos'/>
<arg type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' index='1' declared_type='ccQuad3' name='coords'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tile:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='pos'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
</class>
<class name='CCTimer'>
<method selector='initWithTarget:selector:'>
<arg type='@' index='0' declared_type='id' name='t'/>
<arg type=':' index='1' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:interval:repeat:delay:'>
<arg type='@' index='0' declared_type='id' name='t'/>
<arg type=':' index='1' declared_type='SEL' name='s'/>
<arg type='f' index='2' declared_type='ccTime' name='seconds'/>
<arg type='I' index='3' declared_type='uint' name='r'/>
<arg type='f' index='4' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='interval'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='setInterval:'>
<arg type='f' index='0' declared_type='ccTime' name='interval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timerWithTarget:selector:' class_method='true'>
<arg type='@' index='0' declared_type='id' name='t'/>
<arg type=':' index='1' declared_type='SEL' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='timerWithTarget:selector:interval:' class_method='true'>
<arg type='@' index='0' declared_type='id' name='t'/>
<arg type=':' index='1' declared_type='SEL' name='s'/>
<arg type='f' index='2' declared_type='ccTime' name='seconds'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='update:'>
<arg type='f' index='0' declared_type='ccTime' name='dt'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTintBy'>
<method selector='actionWithDuration:red:green:blue:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='s' index='1' declared_type='GLshort' name='deltaRed'/>
<arg type='s' index='2' declared_type='GLshort' name='deltaGreen'/>
<arg type='s' index='3' declared_type='GLshort' name='deltaBlue'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='s' index='1' declared_type='GLshort' name='deltaRed'/>
<arg type='s' index='2' declared_type='GLshort' name='deltaGreen'/>
<arg type='s' index='3' declared_type='GLshort' name='deltaBlue'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTintTo'>
<method selector='actionWithDuration:red:green:blue:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='C' index='1' declared_type='GLubyte' name='red'/>
<arg type='C' index='2' declared_type='GLubyte' name='green'/>
<arg type='C' index='3' declared_type='GLubyte' name='blue'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='C' index='1' declared_type='GLubyte' name='red'/>
<arg type='C' index='2' declared_type='GLubyte' name='green'/>
<arg type='C' index='3' declared_type='GLubyte' name='blue'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTouchDispatcher'>
<method selector='addStandardDelegate:priority:'>
<arg type='@' index='0' declared_type='id' name='delegate'/>
<arg type='i' index='1' declared_type='int' name='priority'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addTargetedDelegate:priority:swallowsTouches:'>
<arg type='@' index='0' declared_type='id' name='delegate'/>
<arg type='i' index='1' declared_type='int' name='priority'/>
<arg type='B' index='2' declared_type='BOOL' name='swallowsTouches'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dispatchEvents'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeAllDelegates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeDelegate:'>
<arg type='@' index='0' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDispatchEvents:'>
<arg type='B' index='0' declared_type='BOOL' name='dispatchEvents'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPriority:forDelegate:'>
<arg type='i' index='0' declared_type='int' name='priority'/>
<arg type='@' index='1' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedDispatcher' class_method='true'>
<retval type='@' declared_type='CCTouchDispatcher*'/>
</method>
</class>
<class name='CCTouchHandler'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='enabledSelectors'>
<retval type='i' declared_type='ccTouchSelectorFlag'/>
</method>
<method selector='handlerWithDelegate:priority:' class_method='true'>
<arg type='@' index='0' declared_type='id' name='aDelegate'/>
<arg type='i' index='1' declared_type='int' name='priority'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDelegate:priority:'>
<arg type='@' index='0' declared_type='id' name='aDelegate'/>
<arg type='i' index='1' declared_type='int' name='priority'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='priority'>
<retval type='i' declared_type='int'/>
</method>
<method selector='setDelegate:'>
<arg type='@' index='0' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabledSelectors:'>
<arg type='i' index='0' declared_type='ccTouchSelectorFlag' name='enabledSelectors'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPriority:'>
<arg type='i' index='0' declared_type='int' name='priority'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionFade'>
<method selector='initWithDuration:scene:withColor:'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='@' index='1' declared_type='CCScene*' name='scene'/>
<arg type='{_ccColor3B=CCC}' index='2' declared_type='ccColor3B' name='color'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='transitionWithDuration:scene:withColor:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='duration'/>
<arg type='@' index='1' declared_type='CCScene*' name='scene'/>
<arg type='{_ccColor3B=CCC}' index='2' declared_type='ccColor3B' name='color'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionFadeTR'>
<method selector='actionWithSize:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='vector'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCTransitionMoveInL'>
<method selector='action'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionPageTurn'>
<method selector='actionWithSize:'>
<arg type='{_ccGridSize=ii}' index='0' declared_type='ccGridSize' name='vector'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initWithDuration:scene:backwards:'>
<arg type='f' index='0' declared_type='ccTime' name='t'/>
<arg type='@' index='1' declared_type='CCScene*' name='s'/>
<arg type='B' index='2' declared_type='BOOL' name='back'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='transitionWithDuration:scene:backwards:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='t'/>
<arg type='@' index='1' declared_type='CCScene*' name='s'/>
<arg type='B' index='2' declared_type='BOOL' name='back'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionScene'>
<method selector='finish'>
<retval type='v' declared_type='void'/>
</method>
<method selector='hideOutShowIn'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithDuration:scene:'>
<arg type='f' index='0' declared_type='ccTime' name='t'/>
<arg type='@' index='1' declared_type='CCScene*' name='s'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='transitionWithDuration:scene:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='t'/>
<arg type='@' index='1' declared_type='CCScene*' name='s'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionSceneOriented'>
<method selector='initWithDuration:scene:orientation:'>
<arg type='f' index='0' declared_type='ccTime' name='t'/>
<arg type='@' index='1' declared_type='CCScene*' name='s'/>
<arg type='i' index='2' declared_type='tOrientation' name='o'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='transitionWithDuration:scene:orientation:' class_method='true'>
<arg type='f' index='0' declared_type='ccTime' name='t'/>
<arg type='@' index='1' declared_type='CCScene*' name='s'/>
<arg type='i' index='2' declared_type='tOrientation' name='o'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionSlideInL'>
<method selector='action'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionSplitCols'>
<method selector='action'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCTurnOffTiles'>
<method selector='actionWithSeed:grid:duration:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='s'/>
<arg type='{_ccGridSize=ii}' index='1' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='2' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg type='i' index='0' declared_type='int' name='s'/>
<arg type='{_ccGridSize=ii}' index='1' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='2' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTwirl'>
<method selector='actionWithPosition:twirls:amplitude:grid:duration:' class_method='true'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='pos'/>
<arg type='i' index='1' declared_type='int' name='t'/>
<arg type='f' index='2' declared_type='float' name='amp'/>
<arg type='{_ccGridSize=ii}' index='3' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='4' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithPosition:twirls:amplitude:grid:duration:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='pos'/>
<arg type='i' index='1' declared_type='int' name='t'/>
<arg type='f' index='2' declared_type='float' name='amp'/>
<arg type='{_ccGridSize=ii}' index='3' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='4' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setAmplitude:'>
<arg type='f' index='0' declared_type='float' name='amplitude'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg type='f' index='0' declared_type='float' name='amplitudeRate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='position'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCWaves'>
<method selector='actionWithWaves:amplitude:horizontal:vertical:grid:duration:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='wav'/>
<arg type='f' index='1' declared_type='float' name='amp'/>
<arg type='B' index='2' declared_type='BOOL' name='h'/>
<arg type='B' index='3' declared_type='BOOL' name='v'/>
<arg type='{_ccGridSize=ii}' index='4' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='5' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:horizontal:vertical:grid:duration:'>
<arg type='i' index='0' declared_type='int' name='wav'/>
<arg type='f' index='1' declared_type='float' name='amp'/>
<arg type='B' index='2' declared_type='BOOL' name='h'/>
<arg type='B' index='3' declared_type='BOOL' name='v'/>
<arg type='{_ccGridSize=ii}' index='4' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='5' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg type='f' index='0' declared_type='float' name='amplitude'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg type='f' index='0' declared_type='float' name='amplitudeRate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCWaves3D'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='wav'/>
<arg type='f' index='1' declared_type='float' name='amp'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg type='i' index='0' declared_type='int' name='wav'/>
<arg type='f' index='1' declared_type='float' name='amp'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg type='f' index='0' declared_type='float' name='amplitude'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg type='f' index='0' declared_type='float' name='amplitudeRate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCWavesTiles3D'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg type='i' index='0' declared_type='int' name='wav'/>
<arg type='f' index='1' declared_type='float' name='amp'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg type='i' index='0' declared_type='int' name='wav'/>
<arg type='f' index='1' declared_type='float' name='amp'/>
<arg type='{_ccGridSize=ii}' index='2' declared_type='ccGridSize' name='gridSize'/>
<arg type='f' index='3' declared_type='ccTime' name='d'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg type='f' index='0' declared_type='float' name='amplitude'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg type='f' index='0' declared_type='float' name='amplitudeRate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CDAsynchBufferLoader'>
<method selector='init:soundEngine:'>
<arg type='@' index='0' declared_type='NSArray*' name='loadRequests'/>
<arg type='@' index='1' declared_type='CDSoundEngine*' name='theSoundEngine'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CDAudioInterruptTargetGroup'>
<method selector='addAudioInterruptTarget:'>
<arg type='@' index='0' declared_type='NSObject*' name='interruptibleTarget'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CDAudioManager'>
<method selector='applicationDidBecomeActive'>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationWillResignActive'>
<retval type='v' declared_type='void'/>
</method>
<method selector='audioSessionInterrupted'>
<retval type='v' declared_type='void'/>
</method>
<method selector='audioSessionResumed'>
<retval type='v' declared_type='void'/>
</method>
<method selector='audioSourceForChannel:'>
<arg type='i' index='0' declared_type='tAudioSourceChannel' name='channel'/>
<retval type='@' declared_type='CDLongAudioSource*'/>
</method>
<method selector='audioSourceLoad:channel:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<arg type='i' index='1' declared_type='tAudioSourceChannel' name='channel'/>
<retval type='@' declared_type='CDLongAudioSource*'/>
</method>
<method selector='backgroundMusic'>
<retval type='@' declared_type='CDLongAudioSource*'/>
</method>
<method selector='configure:' class_method='true'>
<arg type='i' index='0' declared_type='tAudioManagerMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='end' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='init:'>
<arg type='i' index='0' declared_type='tAudioManagerMode' name='mode'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initAsynchronously:' class_method='true'>
<arg type='i' index='0' declared_type='tAudioManagerMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isBackgroundMusicPlaying'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDeviceMuted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isOtherAudioPlaying'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pauseBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='playBackgroundMusic:loop:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<arg type='B' index='1' declared_type='BOOL' name='loop'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='preloadBackgroundMusic:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rewindBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundMusicCompletionListener:selector:'>
<arg type='@' index='0' declared_type='id' name='listener'/>
<arg type=':' index='1' declared_type='SEL' name='selector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMode:'>
<arg type='i' index='0' declared_type='tAudioManagerMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResignBehavior:autoHandle:'>
<arg type='i' index='0' declared_type='tAudioManagerResignBehavior' name='resignBehavior'/>
<arg type='B' index='1' declared_type='BOOL' name='autoHandle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval type='@' declared_type='CDAudioManager*'/>
</method>
<method selector='sharedManagerState' class_method='true'>
<retval type='i' declared_type='tAudioManagerState'/>
</method>
<method selector='soundEngine'>
<retval type='@' declared_type='CDSoundEngine*'/>
</method>
<method selector='stopBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='willPlayBackgroundMusic'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CDBufferLoadRequest'>
<method selector='filePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='init:filePath:'>
<arg type='i' index='0' declared_type='int' name='theSoundId'/>
<arg const='true' type='@' index='1' declared_type='NSString*' name='theFilePath'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='soundId'>
<retval type='i' declared_type='int'/>
</method>
</class>
<class name='CDBufferManager'>
<method selector='bufferForFile:create:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<arg type='B' index='1' declared_type='BOOL' name='create'/>
<retval type='i' declared_type='int'/>
</method>
<method selector='initWithEngine:'>
<arg type='@' index='0' declared_type='CDSoundEngine*' name='theSoundEngine'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='releaseBufferForFile:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CDFloatInterpolator'>
<method selector='end'>
<retval type='f' declared_type='float'/>
</method>
<method selector='init:startVal:endVal:'>
<arg type='i' index='0' declared_type='tCDInterpolationType' name='type'/>
<arg type='f' index='1' declared_type='float' name='startVal'/>
<arg type='f' index='2' declared_type='float' name='endVal'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='interpolate:'>
<arg type='f' index='0' declared_type='float' name='t'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='interpolationType'>
<retval type='i' declared_type='tCDInterpolationType'/>
</method>
<method selector='setEnd:'>
<arg type='f' index='0' declared_type='float' name='end'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInterpolationType:'>
<arg type='i' index='0' declared_type='tCDInterpolationType' name='interpolationType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStart:'>
<arg type='f' index='0' declared_type='float' name='start'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='start'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='CDLongAudioSource'>
<method selector='audioSourceFilePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='audioSourcePlayer'>
<retval type='@' declared_type='AVAudioPlayer*'/>
</method>
<method selector='backgroundMusic'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isPlaying'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='load:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='numberOfLoops'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='pause'>
<retval type='v' declared_type='void'/>
</method>
<method selector='play'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rewind'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundMusic:'>
<arg type='B' index='0' declared_type='BOOL' name='backgroundMusic'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' index='0' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfLoops:'>
<arg type='i' index='0' declared_type='NSInteger' name='numberOfLoops'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVolume:'>
<arg type='f' index='0' declared_type='float' name='volume'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='v' declared_type='void'/>
</method>
<method selector='volume'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='CDPropertyModifier'>
<method selector='_allowableType'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='_getTargetProperty'>
<retval type='f' declared_type='float'/>
</method>
<method selector='_setTargetProperty:'>
<arg type='f' index='0' declared_type='float' name='newVal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='_stopTarget'>
<retval type='v' declared_type='void'/>
</method>
<method selector='endValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='init:interpolationType:startVal:endVal:'>
<arg type='@' index='0' declared_type='id' name='theTarget'/>
<arg type='i' index='1' declared_type='tCDInterpolationType' name='type'/>
<arg type='f' index='2' declared_type='float' name='startVal'/>
<arg type='f' index='3' declared_type='float' name='endVal'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='interpolationType'>
<retval type='i' declared_type='tCDInterpolationType'/>
</method>
<method selector='modify:'>
<arg type='f' index='0' declared_type='float' name='t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndValue:'>
<arg type='f' index='0' declared_type='float' name='endValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInterpolationType:'>
<arg type='i' index='0' declared_type='tCDInterpolationType' name='interpolationType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartValue:'>
<arg type='f' index='0' declared_type='float' name='startValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStopTargetWhenComplete:'>
<arg type='B' index='0' declared_type='BOOL' name='stopTargetWhenComplete'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='stopTargetWhenComplete'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CDSoundEngine'>
<method selector='_soundSourcePreRelease:'>
<arg type='@' index='0' declared_type='CDSoundSource*' name='soundSource'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='asynchLoadProgress'>
<retval type='f' declared_type='float'/>
</method>
<method selector='bufferDurationInSeconds:'>
<arg type='i' index='0' declared_type='int' name='soundId'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='bufferFrequencyInHertz:'>
<arg type='i' index='0' declared_type='int' name='soundId'/>
<retval type='i' declared_type='ALsizei'/>
</method>
<method selector='bufferSizeInBytes:'>
<arg type='i' index='0' declared_type='int' name='soundId'/>
<retval type='i' declared_type='ALsizei'/>
</method>
<method selector='defineSourceGroups:'>
<arg type='@' index='0' declared_type='NSArray*' name='sourceGroupDefinitions'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='defineSourceGroups:total:'>
<arg type='^i' index='0' declared_type='int*' name='sourceGroupDefinitions'/>
<arg type='I' index='1' declared_type='NSUInteger' name='total'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='functioning'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getGainWorks'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='lastErrorCode'>
<retval type='i' declared_type='ALenum'/>
</method>
<method selector='loadBuffer:filePath:'>
<arg type='i' index='0' declared_type='int' name='soundId'/>
<arg type='@' index='1' declared_type='NSString*' name='filePath'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadBufferFromData:soundData:format:size:freq:'>
<arg type='i' index='0' declared_type='int' name='soundId'/>
<arg type='^v' index='1' declared_type='ALvoid*' name='soundData'/>
<arg type='i' index='2' declared_type='ALenum' name='format'/>
<arg type='i' index='3' declared_type='ALsizei' name='size'/>
<arg type='i' index='4' declared_type='ALsizei' name='freq'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadBuffersAsynchronously:'>
<arg type='@' index='0' declared_type='NSArray*' name='loadRequests'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='masterGain'>
<retval type='f' declared_type='ALfloat'/>
</method>
<method selector='openALContext'>
<retval type='^{ALCcontext_struct=}' declared_type='ALCcontext*'/>
</method>
<method selector='playSound:sourceGroupId:pitch:pan:gain:loop:'>
<arg type='i' index='0' declared_type='int' name='soundId'/>
<arg type='i' index='1' declared_type='int' name='sourceGroupId'/>
<arg type='f' index='2' declared_type='float' name='pitch'/>
<arg type='f' index='3' declared_type='float' name='pan'/>
<arg type='f' index='4' declared_type='float' name='gain'/>
<arg type='B' index='5' declared_type='BOOL' name='loop'/>
<retval type='I' declared_type='ALuint'/>
</method>
<method selector='setAsynchLoadProgress:'>
<arg type='f' index='0' declared_type='float' name='asynchLoadProgress'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMasterGain:'>
<arg type='f' index='0' declared_type='ALfloat' name='masterGain'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMixerSampleRate:' class_method='true'>
<arg type='f' index='0' declared_type='Float32' name='sampleRate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceGroupEnabled:enabled:'>
<arg type='i' index='0' declared_type='int' name='sourceGroupId'/>
<arg type='B' index='1' declared_type='BOOL' name='enabled'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceGroupNonInterruptible:isNonInterruptible:'>
<arg type='i' index='0' declared_type='int' name='sourceGroupId'/>
<arg type='B' index='1' declared_type='BOOL' name='isNonInterruptible'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='soundSourceForSound:sourceGroupId:'>
<arg type='i' index='0' declared_type='int' name='soundId'/>
<arg type='i' index='1' declared_type='int' name='sourceGroupId'/>
<retval type='@' declared_type='CDSoundSource*'/>
</method>
<method selector='sourceGroupEnabled:'>
<arg type='i' index='0' declared_type='int' name='sourceGroupId'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sourceGroupTotal'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='sourceTotal'>
<retval type='i' declared_type='int'/>
</method>
<method selector='stopAllSounds'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopSound:'>
<arg type='I' index='0' declared_type='ALuint' name='sourceId'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopSourceGroup:'>
<arg type='i' index='0' declared_type='int' name='sourceGroupId'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unloadBuffer:'>
<arg type='i' index='0' declared_type='int' name='soundId'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CDSoundSource'>
<method selector='durationInSeconds'>
<retval type='f' declared_type='float'/>
</method>
<method selector='gain'>
<retval type='f' declared_type='float'/>
</method>
<method selector='init:sourceIndex:soundEngine:'>
<arg type='I' index='0' declared_type='ALuint' name='theSourceId'/>
<arg type='i' index='1' declared_type='int' name='index'/>
<arg type='@' index='2' declared_type='CDSoundEngine*' name='engine'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isPlaying'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastError'>
<retval type='i' declared_type='ALenum'/>
</method>
<method selector='looping'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pan'>
<retval type='f' declared_type='float'/>
</method>
<method selector='pitch'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setGain:'>
<arg type='f' index='0' declared_type='float' name='gain'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLooping:'>
<arg type='B' index='0' declared_type='BOOL' name='looping'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPan:'>
<arg type='f' index='0' declared_type='float' name='pan'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPitch:'>
<arg type='f' index='0' declared_type='float' name='pitch'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSoundId:'>
<arg type='i' index='0' declared_type='int' name='soundId'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='soundId'>
<retval type='i' declared_type='int'/>
</method>
</class>
<class name='CDUtilities'>
<method selector='fullPathFromRelativePath:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='relPath'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSObject'>
<method selector='backingSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='ccTouchBegan:withEvent:'>
<arg type='@' index='0' declared_type='UITouch*' name='touch'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccTouchCancelled:withEvent:'>
<arg type='@' index='0' declared_type='UITouch*' name='touch'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchEnded:withEvent:'>
<arg type='@' index='0' declared_type='UITouch*' name='touch'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchMoved:withEvent:'>
<arg type='@' index='0' declared_type='UITouch*' name='touch'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesBegan:withEvent:'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesCancelled:withEvent:'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesEnded:withEvent:'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesMoved:withEvent:'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cdAudioSourceDidFinishPlaying:'>
<arg type='@' index='0' declared_type='CDLongAudioSource*' name='audioSource'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cdAudioSourceFileDidChange:'>
<arg type='@' index='0' declared_type='CDLongAudioSource*' name='audioSource'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='colorRenderBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='context'>
<retval type='@' declared_type='EAGLContext*'/>
</method>
<method selector='defaultFrameBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='easeActionWithAction:'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='action'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='enabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithDepthFormat:withPixelFormat:withSharegroup:withMultiSampling:withNumberOfSamples:'>
<arg type='I' index='0' declared_type='unsigned int' name='depthFormat'/>
<arg type='I' index='1' declared_type='unsigned int' name='pixelFormat'/>
<arg type='@' index='2' declared_type='EAGLSharegroup*' name='sharegroup'/>
<arg type='B' index='3' declared_type='BOOL' name='multiSampling'/>
<arg type='I' index='4' declared_type='unsigned int' name='requestedSamples'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='msaaColorBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='msaaFrameBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='mute'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='pause'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='play'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='resizeFromLayer:'>
<arg type='@' index='0' declared_type='CAEAGLLayer*' name='layer'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rewind'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setBlendFunc:'>
<arg type='{_ccBlendFunc=II}' index='0' declared_type='ccBlendFunc' name='blendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCString:'>
<arg type='*' index='0' declared_type='char*' name='label'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg type='{_ccColor3B=CCC}' index='0' declared_type='ccColor3B' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabled:'>
<arg type='B' index='0' declared_type='BOOL' name='enabledValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMute:'>
<arg type='B' index='0' declared_type='BOOL' name='muteValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg type='C' index='0' declared_type='GLubyte' name='opacity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg type='B' index='0' declared_type='BOOL' name='boolean'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg type='@' index='0' declared_type='NSString*' name='label'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldAutorotateToInterfaceOrientation:'>
<arg type='i' index='0' declared_type='UIInterfaceOrientation' name='interfaceOrientation'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stop'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='touchesBegan:withEvent:'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesCancelled:withEvent:'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesEnded:withEvent:'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesMoved:withEvent:'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateProjection'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSThread'>
<method selector='performBlock:'>
<arg type='@?' index='0' declared_type='void (^)(void)' name='block' function_pointer='true'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='performBlock:waitUntilDone:'>
<arg type='@?' index='0' declared_type='void (^)(void)' name='block' function_pointer='true'>
<retval type='v' declared_type='void'/>
</arg>
<arg type='B' index='1' declared_type='BOOL' name='wait'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performBlock:withObject:waitUntilDone:'>
<arg type='@?' index='0' declared_type='void (^)(id)' name='block' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@' index='1' declared_type='id' name='object'/>
<arg type='B' index='2' declared_type='BOOL' name='wait'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='SimpleAudioEngine'>
<method selector='backgroundMusicVolume'>
<retval type='f' declared_type='float'/>
</method>
<method selector='effectsVolume'>
<retval type='f' declared_type='float'/>
</method>
<method selector='end' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isBackgroundMusicPlaying'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pauseBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='playBackgroundMusic:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='playBackgroundMusic:loop:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<arg type='B' index='1' declared_type='BOOL' name='loop'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='playEffect:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<retval type='I' declared_type='ALuint'/>
</method>
<method selector='playEffect:pitch:pan:gain:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<arg type='f' index='1' declared_type='Float32' name='pitch'/>
<arg type='f' index='2' declared_type='Float32' name='pan'/>
<arg type='f' index='3' declared_type='Float32' name='gain'/>
<retval type='I' declared_type='ALuint'/>
</method>
<method selector='preloadBackgroundMusic:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='preloadEffect:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rewindBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundMusicVolume:'>
<arg type='f' index='0' declared_type='float' name='backgroundMusicVolume'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEffectsVolume:'>
<arg type='f' index='0' declared_type='float' name='effectsVolume'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedEngine' class_method='true'>
<retval type='@' declared_type='SimpleAudioEngine*'/>
</method>
<method selector='soundSourceForFile:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<retval type='@' declared_type='CDSoundSource*'/>
</method>
<method selector='stopBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopEffect:'>
<arg type='I' index='0' declared_type='ALuint' name='soundId'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unloadEffect:'>
<arg type='@' index='0' declared_type='NSString*' name='filePath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willPlayBackgroundMusic'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<informal_protocol name='CCBlendProtocol'>
<method selector='blendFunc' type='{_ccBlendFunc=II}8@0:4'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='setBlendFunc:' type='v16@0:4{_ccBlendFunc=II}8'>
<arg type='{_ccBlendFunc=II}' index='0' declared_type='ccBlendFunc' name='blendFunc'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCDirectorDelegate'>
<method selector='shouldAutorotateToInterfaceOrientation:' type='B12@0:4i8'>
<arg type='i' index='0' declared_type='UIInterfaceOrientation' name='interfaceOrientation'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='updateProjection' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCESRenderer'>
<method selector='backingSize' type='{CGSize=ff}8@0:4'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='colorRenderBuffer' type='I8@0:4'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='context' type='@8@0:4'>
<retval type='@' declared_type='EAGLContext*'/>
</method>
<method selector='defaultFrameBuffer' type='I8@0:4'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='initWithDepthFormat:withPixelFormat:withSharegroup:withMultiSampling:withNumberOfSamples:' type='@28@0:4I8I12@16B20I24'>
<arg type='I' index='0' declared_type='unsigned int' name='depthFormat'/>
<arg type='I' index='1' declared_type='unsigned int' name='pixelFormat'/>
<arg type='@' index='2' declared_type='EAGLSharegroup*' name='sharegroup'/>
<arg type='B' index='3' declared_type='BOOL' name='multiSampling'/>
<arg type='I' index='4' declared_type='unsigned int' name='requestedSamples'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='msaaColorBuffer' type='I8@0:4'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='msaaFrameBuffer' type='I8@0:4'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='resizeFromLayer:' type='B12@0:4@8'>
<arg type='@' index='0' declared_type='CAEAGLLayer*' name='layer'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CCLabelProtocol'>
<method selector='setCString:' type='v12@0:4*8'>
<arg type='*' index='0' declared_type='char*' name='label'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:' type='v12@0:4@8'>
<arg type='@' index='0' declared_type='NSString*' name='label'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='string' type='@8@0:4'>
<retval type='@' declared_type='NSString*'/>
</method>
</informal_protocol>
<informal_protocol name='CCRGBAProtocol'>
<method selector='color' type='{_ccColor3B=CCC}8@0:4'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='doesOpacityModifyRGB' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='opacity' type='C8@0:4'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='setColor:' type='v11@0:4{_ccColor3B=CCC}8'>
<arg type='{_ccColor3B=CCC}' index='0' declared_type='ccColor3B' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:' type='v12@0:4C8'>
<arg type='C' index='0' declared_type='GLubyte' name='opacity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacityModifyRGB:' type='v12@0:4B8'>
<arg type='B' index='0' declared_type='BOOL' name='boolean'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCStandardTouchDelegate'>
<method selector='ccTouchesBegan:withEvent:' type='v16@0:4@8@12'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesCancelled:withEvent:' type='v16@0:4@8@12'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesEnded:withEvent:' type='v16@0:4@8@12'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesMoved:withEvent:' type='v16@0:4@8@12'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCTargetedTouchDelegate'>
<method selector='ccTouchBegan:withEvent:' type='B16@0:4@8@12'>
<arg type='@' index='0' declared_type='UITouch*' name='touch'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccTouchCancelled:withEvent:' type='v16@0:4@8@12'>
<arg type='@' index='0' declared_type='UITouch*' name='touch'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchEnded:withEvent:' type='v16@0:4@8@12'>
<arg type='@' index='0' declared_type='UITouch*' name='touch'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchMoved:withEvent:' type='v16@0:4@8@12'>
<arg type='@' index='0' declared_type='UITouch*' name='touch'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCTextureProtocol'>
<method selector='setTexture:' type='v12@0:4@8'>
<arg type='@' index='0' declared_type='CCTexture2D*' name='texture'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='texture' type='@8@0:4'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
</informal_protocol>
<informal_protocol name='CCTouchDelegate'>
<method selector='touchesBegan:withEvent:' type='v16@0:4@8@12'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesCancelled:withEvent:' type='v16@0:4@8@12'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesEnded:withEvent:' type='v16@0:4@8@12'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesMoved:withEvent:' type='v16@0:4@8@12'>
<arg type='@' index='0' declared_type='NSSet*' name='touches'/>
<arg type='@' index='1' declared_type='UIEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCTransitionEaseScene'>
<method selector='easeActionWithAction:' type='@12@0:4@8'>
<arg type='@' index='0' declared_type='CCActionInterval*' name='action'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</informal_protocol>
<informal_protocol name='CDAudioInterruptProtocol'>
<method selector='enabled' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mute' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setEnabled:' type='v12@0:4B8'>
<arg type='B' index='0' declared_type='BOOL' name='enabledValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMute:' type='v12@0:4B8'>
<arg type='B' index='0' declared_type='BOOL' name='muteValue'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CDAudioTransportProtocol'>
<method selector='pause' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='play' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rewind' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stop' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CDLongAudioSourceDelegate'>
<method selector='cdAudioSourceDidFinishPlaying:' type='v12@0:4@8'>
<arg type='@' index='0' declared_type='CDLongAudioSource*' name='audioSource'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cdAudioSourceFileDidChange:' type='v12@0:4@8'>
<arg type='@' index='0' declared_type='CDLongAudioSource*' name='audioSource'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
</signatures>
